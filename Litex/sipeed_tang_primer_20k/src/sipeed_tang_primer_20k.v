// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : sipeed_tang_primer_20k.v
// Device     : GW2A-LV18PG256C8/I7
// LiteX sha1 : 64cf925b3
// Date       : 2024-10-05 12:37:29
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module sipeed_tang_primer_20k (
    input  wire          btn_n0,
    input  wire          btn_n1,
    input  wire          btn_n2,
    input  wire          btn_n3,
    input  wire          btn_n4,
    input  wire          clk27,
    output wire   [13:0] ddram_a,
    output wire    [2:0] ddram_ba,
    output wire          ddram_cas_n,
    output wire          ddram_cke,
    output wire          ddram_clk_n,
    output wire          ddram_clk_p,
    output wire          ddram_cs_n,
    output wire    [1:0] ddram_dm,
    inout  wire   [15:0] ddram_dq,
    inout  wire    [1:0] ddram_dqs_n,
    inout  wire    [1:0] ddram_dqs_p,
    output wire          ddram_odt,
    output wire          ddram_ras_n,
    output wire          ddram_reset_n,
    output wire          ddram_we_n,
    output wire          led0,
    output wire          led1,
    output wire          led2,
    output wire          led3,
    output wire          led4,
    output wire          led5,
    input  wire          serial_rx,
    output reg           serial_tx
);


//------------------------------------------------------------------------------
// Hierarchy
//------------------------------------------------------------------------------

/*
BaseSoC
└─── crg (_CRG)
│    └─── pll (GW2APLL)
│    │    └─── [rPLL]
│    └─── [DHCEN]
│    └─── [CLKDIV]
└─── bus (SoCBusHandler)
│    └─── _interconnect (InterconnectShared)
│    │    └─── arbiter (Arbiter)
│    │    │    └─── rr (RoundRobin)
│    │    └─── decoder (Decoder)
│    │    └─── timeout (Timeout)
│    │    │    └─── waittimer_0* (WaitTimer)
└─── csr (SoCCSRHandler)
└─── irq (SoCIRQHandler)
└─── ctrl (SoCController)
└─── cpu (VexRiscv)
│    └─── [VexRiscv]
└─── rom (SRAM)
└─── sram (SRAM)
└─── identifier (Identifier)
└─── uart_phy (RS232PHY)
│    └─── tx (RS232PHYTX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
│    └─── rx (RS232PHYRX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
└─── uart (UART)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
│    │    └─── eventsourceprocess_1* (EventSourceProcess)
│    └─── tx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
│    └─── rx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
└─── timer0 (Timer)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
└─── ddrphy (GW2DDRPHY)
│    └─── init (GW2DDRPHYInit)
│    │    └─── [DLL]
│    └─── bitslip_0* (BitSlip)
│    └─── bitslip_1* (BitSlip)
│    └─── bitslip_2* (BitSlip)
│    └─── bitslip_3* (BitSlip)
│    └─── bitslip_4* (BitSlip)
│    └─── bitslip_5* (BitSlip)
│    └─── bitslip_6* (BitSlip)
│    └─── bitslip_7* (BitSlip)
│    └─── bitslip_8* (BitSlip)
│    └─── bitslip_9* (BitSlip)
│    └─── bitslip_10* (BitSlip)
│    └─── bitslip_11* (BitSlip)
│    └─── bitslip_12* (BitSlip)
│    └─── bitslip_13* (BitSlip)
│    └─── bitslip_14* (BitSlip)
│    └─── bitslip_15* (BitSlip)
│    └─── tappeddelayline_0* (TappedDelayLine)
│    └─── tappeddelayline_1* (TappedDelayLine)
│    └─── [IDES4_MEM]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [ELVDS_OBUF]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [IODELAY]
│    └─── [OSER4]
│    └─── [DQS]
│    └─── [OSER4_MEM]
│    └─── [ELVDS_IOBUF]
│    └─── [OSER4_MEM]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [DQS]
│    └─── [OSER4_MEM]
│    └─── [ELVDS_IOBUF]
│    └─── [OSER4_MEM]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
│    └─── [IDES4_MEM]
│    └─── [IOBUF]
│    └─── [OSER4_MEM]
└─── sdram (LiteDRAMCore)
│    └─── dfii (DFIInjector)
│    │    └─── pi0 (PhaseInjector)
│    │    └─── pi1 (PhaseInjector)
│    └─── controller (LiteDRAMController)
│    │    └─── refresher (Refresher)
│    │    │    └─── timer (RefreshTimer)
│    │    │    └─── postponer (RefreshPostponer)
│    │    │    └─── sequencer (RefreshSequencer)
│    │    │    │    └─── refreshexecuter_0* (RefreshExecuter)
│    │    │    └─── zqcs_timer (RefreshTimer)
│    │    │    └─── zqs_executer (ZQCSExecuter)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_0* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_1* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_2* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_3* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_4* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_5* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_6* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_7* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── multiplexer (Multiplexer)
│    │    │    └─── choose_cmd (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── choose_req (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── _steerer_0* (_Steerer)
│    │    │    └─── trrdcon (tXXDController)
│    │    │    └─── tfawcon (tFAWController)
│    │    │    └─── tccdcon (tXXDController)
│    │    │    └─── twtrcon (tXXDController)
│    │    │    └─── fsm (FSM)
│    └─── crossbar (LiteDRAMCrossbar)
│    │    └─── roundrobin_0* (RoundRobin)
│    │    └─── roundrobin_1* (RoundRobin)
│    │    └─── roundrobin_2* (RoundRobin)
│    │    └─── roundrobin_3* (RoundRobin)
│    │    └─── roundrobin_4* (RoundRobin)
│    │    └─── roundrobin_5* (RoundRobin)
│    │    └─── roundrobin_6* (RoundRobin)
│    │    └─── roundrobin_7* (RoundRobin)
└─── l2_cache (Cache)
│    └─── fsm (FSM)
└─── wishbone_bridge (LiteDRAMWishbone2Native)
│    └─── fsm (FSM)
└─── leds (LedChaser)
│    └─── waittimer_0* (WaitTimer)
└─── buttons (GPIOIn)
└─── csr_bridge (Wishbone2CSR)
│    └─── fsm (FSM)
└─── csr_bankarray (CSRBankArray)
│    └─── csrbank_0* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_1* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_2* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── sram_0* (SRAM)
│    └─── csrbank_3* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    └─── csrbank_4* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstorage_4* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_5* (CSRStorage)
│    │    └─── csrstorage_6* (CSRStorage)
│    │    └─── csrstorage_7* (CSRStorage)
│    │    └─── csrstorage_8* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    └─── csrbank_5* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstorage_4* (CSRStorage)
│    └─── csrbank_6* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstatus_3* (CSRStatus)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_4* (CSRStatus)
│    │    └─── csrstatus_5* (CSRStatus)
└─── csr_interconnect (InterconnectShared)
└─── [DFFP]
└─── [DFFP]
└─── [DFFP]
└─── [DFFP]
* : Generated name.
[]: BlackBox.
*/

//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg     [2:0] bankmachine0_next_state = 3'd0;
reg     [2:0] bankmachine0_state = 3'd0;
reg     [2:0] bankmachine1_next_state = 3'd0;
reg     [2:0] bankmachine1_state = 3'd0;
reg     [2:0] bankmachine2_next_state = 3'd0;
reg     [2:0] bankmachine2_state = 3'd0;
reg     [2:0] bankmachine3_next_state = 3'd0;
reg     [2:0] bankmachine3_state = 3'd0;
reg     [2:0] bankmachine4_next_state = 3'd0;
reg     [2:0] bankmachine4_state = 3'd0;
reg     [2:0] bankmachine5_next_state = 3'd0;
reg     [2:0] bankmachine5_state = 3'd0;
reg     [2:0] bankmachine6_next_state = 3'd0;
reg     [2:0] bankmachine6_state = 3'd0;
reg     [2:0] bankmachine7_next_state = 3'd0;
reg     [2:0] bankmachine7_state = 3'd0;
reg           basesoc_aborted = 1'd0;
reg           basesoc_aborted_litedramwishbone2native_next_value = 1'd0;
reg           basesoc_aborted_litedramwishbone2native_next_value_ce = 1'd0;
reg     [1:0] basesoc_adr_offset_r = 2'd0;
wire   [14:0] basesoc_basesoc_adr;
reg           basesoc_basesoc_adr_burst = 1'd0;
wire   [31:0] basesoc_basesoc_dat_r;
reg           basesoc_basesoc_ram_bus_ack = 1'd0;
wire   [29:0] basesoc_basesoc_ram_bus_adr;
wire    [1:0] basesoc_basesoc_ram_bus_bte;
wire    [2:0] basesoc_basesoc_ram_bus_cti;
wire          basesoc_basesoc_ram_bus_cyc;
wire   [31:0] basesoc_basesoc_ram_bus_dat_r;
wire   [31:0] basesoc_basesoc_ram_bus_dat_w;
reg           basesoc_basesoc_ram_bus_err = 1'd0;
wire    [3:0] basesoc_basesoc_ram_bus_sel;
wire          basesoc_basesoc_ram_bus_stb;
wire          basesoc_basesoc_ram_bus_we;
wire          basesoc_bus_error;
reg    [31:0] basesoc_bus_errors = 32'd0;
reg           basesoc_bus_errors_re = 1'd0;
wire   [31:0] basesoc_bus_errors_status;
wire          basesoc_bus_errors_we;
wire          basesoc_cpu_rst;
wire    [8:0] basesoc_data_port_adr;
wire  [127:0] basesoc_data_port_dat_r;
reg   [127:0] basesoc_data_port_dat_w = 128'd0;
reg    [15:0] basesoc_data_port_we = 16'd0;
wire          basesoc_dbus_ack;
wire   [29:0] basesoc_dbus_adr;
wire    [1:0] basesoc_dbus_bte;
wire    [2:0] basesoc_dbus_cti;
wire          basesoc_dbus_cyc;
wire   [31:0] basesoc_dbus_dat_r;
wire   [31:0] basesoc_dbus_dat_w;
wire          basesoc_dbus_err;
wire    [3:0] basesoc_dbus_sel;
wire          basesoc_dbus_stb;
wire          basesoc_dbus_we;
wire          basesoc_ibus_ack;
wire   [29:0] basesoc_ibus_adr;
wire    [1:0] basesoc_ibus_bte;
wire    [2:0] basesoc_ibus_cti;
wire          basesoc_ibus_cyc;
wire   [31:0] basesoc_ibus_dat_r;
wire   [31:0] basesoc_ibus_dat_w;
wire          basesoc_ibus_err;
wire    [3:0] basesoc_ibus_sel;
wire          basesoc_ibus_stb;
wire          basesoc_ibus_we;
reg           basesoc_interface_ack = 1'd0;
wire   [27:0] basesoc_interface_adr;
reg           basesoc_interface_cyc = 1'd0;
reg   [127:0] basesoc_interface_dat_r = 128'd0;
wire  [127:0] basesoc_interface_dat_w;
wire   [15:0] basesoc_interface_sel;
reg           basesoc_interface_stb = 1'd0;
reg           basesoc_interface_we = 1'd0;
reg    [31:0] basesoc_interrupt = 32'd0;
reg           basesoc_is_ongoing = 1'd0;
wire          basesoc_port_cmd_last;
wire   [22:0] basesoc_port_cmd_payload_addr;
wire          basesoc_port_cmd_payload_we;
wire          basesoc_port_cmd_ready;
reg           basesoc_port_cmd_valid = 1'd0;
wire          basesoc_port_flush;
wire  [127:0] basesoc_port_rdata_payload_data;
wire          basesoc_port_rdata_ready;
wire          basesoc_port_rdata_valid;
wire  [127:0] basesoc_port_wdata_payload_data;
wire   [15:0] basesoc_port_wdata_payload_we;
wire          basesoc_port_wdata_ready;
reg           basesoc_port_wdata_valid = 1'd0;
wire   [10:0] basesoc_ram_adr;
reg           basesoc_ram_adr_burst = 1'd0;
reg           basesoc_ram_bus_ram_bus_ack = 1'd0;
wire   [29:0] basesoc_ram_bus_ram_bus_adr;
wire    [1:0] basesoc_ram_bus_ram_bus_bte;
wire    [2:0] basesoc_ram_bus_ram_bus_cti;
wire          basesoc_ram_bus_ram_bus_cyc;
wire   [31:0] basesoc_ram_bus_ram_bus_dat_r;
wire   [31:0] basesoc_ram_bus_ram_bus_dat_w;
reg           basesoc_ram_bus_ram_bus_err = 1'd0;
wire    [3:0] basesoc_ram_bus_ram_bus_sel;
wire          basesoc_ram_bus_ram_bus_stb;
wire          basesoc_ram_bus_ram_bus_we;
wire   [31:0] basesoc_ram_dat_r;
wire   [31:0] basesoc_ram_dat_w;
reg     [3:0] basesoc_ram_we = 4'd0;
wire          basesoc_reset;
reg           basesoc_reset_re = 1'd0;
reg     [1:0] basesoc_reset_storage = 2'd0;
reg     [3:0] basesoc_rx_count = 4'd0;
reg     [3:0] basesoc_rx_count_rs232phyrx_next_value0 = 4'd0;
reg           basesoc_rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg     [7:0] basesoc_rx_data = 8'd0;
reg     [7:0] basesoc_rx_data_rs232phyrx_next_value1 = 8'd0;
reg           basesoc_rx_data_rs232phyrx_next_value_ce1 = 1'd0;
reg           basesoc_rx_enable = 1'd0;
reg    [31:0] basesoc_rx_phase = 32'd0;
wire          basesoc_rx_rx;
reg           basesoc_rx_rx_d = 1'd0;
reg           basesoc_rx_source_first = 1'd0;
reg           basesoc_rx_source_last = 1'd0;
reg     [7:0] basesoc_rx_source_payload_data = 8'd0;
wire          basesoc_rx_source_ready;
reg           basesoc_rx_source_valid = 1'd0;
reg           basesoc_rx_tick = 1'd0;
reg           basesoc_scratch_re = 1'd0;
reg    [31:0] basesoc_scratch_storage = 32'd305419896;
reg           basesoc_sdram_bankmachine0_auto_precharge = 1'd0;
reg    [12:0] basesoc_sdram_bankmachine0_cmd_payload_a = 13'd0;
wire    [2:0] basesoc_sdram_bankmachine0_cmd_payload_ba;
reg           basesoc_sdram_bankmachine0_cmd_payload_cas = 1'd0;
reg           basesoc_sdram_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg           basesoc_sdram_bankmachine0_cmd_payload_is_read = 1'd0;
reg           basesoc_sdram_bankmachine0_cmd_payload_is_write = 1'd0;
reg           basesoc_sdram_bankmachine0_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_bankmachine0_cmd_payload_we = 1'd0;
reg           basesoc_sdram_bankmachine0_cmd_ready = 1'd0;
reg           basesoc_sdram_bankmachine0_cmd_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine0_consume = 3'd0;
wire          basesoc_sdram_bankmachine0_do_read;
wire          basesoc_sdram_bankmachine0_fifo_in_first;
wire          basesoc_sdram_bankmachine0_fifo_in_last;
wire   [19:0] basesoc_sdram_bankmachine0_fifo_in_payload_addr;
wire          basesoc_sdram_bankmachine0_fifo_in_payload_we;
wire          basesoc_sdram_bankmachine0_fifo_out_first;
wire          basesoc_sdram_bankmachine0_fifo_out_last;
wire   [19:0] basesoc_sdram_bankmachine0_fifo_out_payload_addr;
wire          basesoc_sdram_bankmachine0_fifo_out_payload_we;
reg     [3:0] basesoc_sdram_bankmachine0_level = 4'd0;
wire          basesoc_sdram_bankmachine0_pipe_valid_sink_first;
wire          basesoc_sdram_bankmachine0_pipe_valid_sink_last;
wire   [19:0] basesoc_sdram_bankmachine0_pipe_valid_sink_payload_addr;
wire          basesoc_sdram_bankmachine0_pipe_valid_sink_payload_we;
wire          basesoc_sdram_bankmachine0_pipe_valid_sink_ready;
wire          basesoc_sdram_bankmachine0_pipe_valid_sink_valid;
reg           basesoc_sdram_bankmachine0_pipe_valid_source_first = 1'd0;
reg           basesoc_sdram_bankmachine0_pipe_valid_source_last = 1'd0;
reg    [19:0] basesoc_sdram_bankmachine0_pipe_valid_source_payload_addr = 20'd0;
reg           basesoc_sdram_bankmachine0_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_sdram_bankmachine0_pipe_valid_source_ready;
reg           basesoc_sdram_bankmachine0_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine0_produce = 3'd0;
wire    [2:0] basesoc_sdram_bankmachine0_rdport_adr;
wire   [22:0] basesoc_sdram_bankmachine0_rdport_dat_r;
reg           basesoc_sdram_bankmachine0_refresh_gnt = 1'd0;
wire          basesoc_sdram_bankmachine0_refresh_req;
reg           basesoc_sdram_bankmachine0_replace = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine0_req_addr;
wire          basesoc_sdram_bankmachine0_req_lock;
reg           basesoc_sdram_bankmachine0_req_rdata_valid = 1'd0;
wire          basesoc_sdram_bankmachine0_req_ready;
wire          basesoc_sdram_bankmachine0_req_valid;
reg           basesoc_sdram_bankmachine0_req_wdata_ready = 1'd0;
wire          basesoc_sdram_bankmachine0_req_we;
reg    [12:0] basesoc_sdram_bankmachine0_row = 13'd0;
reg           basesoc_sdram_bankmachine0_row_close = 1'd0;
reg           basesoc_sdram_bankmachine0_row_col_n_addr_sel = 1'd0;
wire          basesoc_sdram_bankmachine0_row_hit;
reg           basesoc_sdram_bankmachine0_row_open = 1'd0;
reg           basesoc_sdram_bankmachine0_row_opened = 1'd0;
reg           basesoc_sdram_bankmachine0_sink_first = 1'd0;
reg           basesoc_sdram_bankmachine0_sink_last = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine0_sink_payload_addr;
wire          basesoc_sdram_bankmachine0_sink_payload_we;
wire          basesoc_sdram_bankmachine0_sink_ready;
wire          basesoc_sdram_bankmachine0_sink_sink_first;
wire          basesoc_sdram_bankmachine0_sink_sink_last;
wire   [19:0] basesoc_sdram_bankmachine0_sink_sink_payload_addr;
wire          basesoc_sdram_bankmachine0_sink_sink_payload_we;
wire          basesoc_sdram_bankmachine0_sink_sink_ready;
wire          basesoc_sdram_bankmachine0_sink_sink_valid;
wire          basesoc_sdram_bankmachine0_sink_valid;
wire          basesoc_sdram_bankmachine0_source_first;
wire          basesoc_sdram_bankmachine0_source_last;
wire   [19:0] basesoc_sdram_bankmachine0_source_payload_addr;
wire          basesoc_sdram_bankmachine0_source_payload_we;
wire          basesoc_sdram_bankmachine0_source_ready;
wire          basesoc_sdram_bankmachine0_source_source_first;
wire          basesoc_sdram_bankmachine0_source_source_last;
wire   [19:0] basesoc_sdram_bankmachine0_source_source_payload_addr;
wire          basesoc_sdram_bankmachine0_source_source_payload_we;
wire          basesoc_sdram_bankmachine0_source_source_ready;
wire          basesoc_sdram_bankmachine0_source_source_valid;
wire          basesoc_sdram_bankmachine0_source_valid;
wire   [22:0] basesoc_sdram_bankmachine0_syncfifo0_din;
wire   [22:0] basesoc_sdram_bankmachine0_syncfifo0_dout;
wire          basesoc_sdram_bankmachine0_syncfifo0_re;
wire          basesoc_sdram_bankmachine0_syncfifo0_readable;
wire          basesoc_sdram_bankmachine0_syncfifo0_we;
wire          basesoc_sdram_bankmachine0_syncfifo0_writable;
reg     [1:0] basesoc_sdram_bankmachine0_trascon_count = 2'd0;
reg           basesoc_sdram_bankmachine0_trascon_ready = 1'd0;
wire          basesoc_sdram_bankmachine0_trascon_valid;
reg     [1:0] basesoc_sdram_bankmachine0_trccon_count = 2'd0;
reg           basesoc_sdram_bankmachine0_trccon_ready = 1'd0;
wire          basesoc_sdram_bankmachine0_trccon_valid;
reg     [2:0] basesoc_sdram_bankmachine0_twtpcon_count = 3'd0;
reg           basesoc_sdram_bankmachine0_twtpcon_ready = 1'd0;
wire          basesoc_sdram_bankmachine0_twtpcon_valid;
reg     [2:0] basesoc_sdram_bankmachine0_wrport_adr = 3'd0;
wire   [22:0] basesoc_sdram_bankmachine0_wrport_dat_r;
wire   [22:0] basesoc_sdram_bankmachine0_wrport_dat_w;
wire          basesoc_sdram_bankmachine0_wrport_we;
reg           basesoc_sdram_bankmachine1_auto_precharge = 1'd0;
reg    [12:0] basesoc_sdram_bankmachine1_cmd_payload_a = 13'd0;
wire    [2:0] basesoc_sdram_bankmachine1_cmd_payload_ba;
reg           basesoc_sdram_bankmachine1_cmd_payload_cas = 1'd0;
reg           basesoc_sdram_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg           basesoc_sdram_bankmachine1_cmd_payload_is_read = 1'd0;
reg           basesoc_sdram_bankmachine1_cmd_payload_is_write = 1'd0;
reg           basesoc_sdram_bankmachine1_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_bankmachine1_cmd_payload_we = 1'd0;
reg           basesoc_sdram_bankmachine1_cmd_ready = 1'd0;
reg           basesoc_sdram_bankmachine1_cmd_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine1_consume = 3'd0;
wire          basesoc_sdram_bankmachine1_do_read;
wire          basesoc_sdram_bankmachine1_fifo_in_first;
wire          basesoc_sdram_bankmachine1_fifo_in_last;
wire   [19:0] basesoc_sdram_bankmachine1_fifo_in_payload_addr;
wire          basesoc_sdram_bankmachine1_fifo_in_payload_we;
wire          basesoc_sdram_bankmachine1_fifo_out_first;
wire          basesoc_sdram_bankmachine1_fifo_out_last;
wire   [19:0] basesoc_sdram_bankmachine1_fifo_out_payload_addr;
wire          basesoc_sdram_bankmachine1_fifo_out_payload_we;
reg     [3:0] basesoc_sdram_bankmachine1_level = 4'd0;
wire          basesoc_sdram_bankmachine1_pipe_valid_sink_first;
wire          basesoc_sdram_bankmachine1_pipe_valid_sink_last;
wire   [19:0] basesoc_sdram_bankmachine1_pipe_valid_sink_payload_addr;
wire          basesoc_sdram_bankmachine1_pipe_valid_sink_payload_we;
wire          basesoc_sdram_bankmachine1_pipe_valid_sink_ready;
wire          basesoc_sdram_bankmachine1_pipe_valid_sink_valid;
reg           basesoc_sdram_bankmachine1_pipe_valid_source_first = 1'd0;
reg           basesoc_sdram_bankmachine1_pipe_valid_source_last = 1'd0;
reg    [19:0] basesoc_sdram_bankmachine1_pipe_valid_source_payload_addr = 20'd0;
reg           basesoc_sdram_bankmachine1_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_sdram_bankmachine1_pipe_valid_source_ready;
reg           basesoc_sdram_bankmachine1_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine1_produce = 3'd0;
wire    [2:0] basesoc_sdram_bankmachine1_rdport_adr;
wire   [22:0] basesoc_sdram_bankmachine1_rdport_dat_r;
reg           basesoc_sdram_bankmachine1_refresh_gnt = 1'd0;
wire          basesoc_sdram_bankmachine1_refresh_req;
reg           basesoc_sdram_bankmachine1_replace = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine1_req_addr;
wire          basesoc_sdram_bankmachine1_req_lock;
reg           basesoc_sdram_bankmachine1_req_rdata_valid = 1'd0;
wire          basesoc_sdram_bankmachine1_req_ready;
wire          basesoc_sdram_bankmachine1_req_valid;
reg           basesoc_sdram_bankmachine1_req_wdata_ready = 1'd0;
wire          basesoc_sdram_bankmachine1_req_we;
reg    [12:0] basesoc_sdram_bankmachine1_row = 13'd0;
reg           basesoc_sdram_bankmachine1_row_close = 1'd0;
reg           basesoc_sdram_bankmachine1_row_col_n_addr_sel = 1'd0;
wire          basesoc_sdram_bankmachine1_row_hit;
reg           basesoc_sdram_bankmachine1_row_open = 1'd0;
reg           basesoc_sdram_bankmachine1_row_opened = 1'd0;
reg           basesoc_sdram_bankmachine1_sink_first = 1'd0;
reg           basesoc_sdram_bankmachine1_sink_last = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine1_sink_payload_addr;
wire          basesoc_sdram_bankmachine1_sink_payload_we;
wire          basesoc_sdram_bankmachine1_sink_ready;
wire          basesoc_sdram_bankmachine1_sink_sink_first;
wire          basesoc_sdram_bankmachine1_sink_sink_last;
wire   [19:0] basesoc_sdram_bankmachine1_sink_sink_payload_addr;
wire          basesoc_sdram_bankmachine1_sink_sink_payload_we;
wire          basesoc_sdram_bankmachine1_sink_sink_ready;
wire          basesoc_sdram_bankmachine1_sink_sink_valid;
wire          basesoc_sdram_bankmachine1_sink_valid;
wire          basesoc_sdram_bankmachine1_source_first;
wire          basesoc_sdram_bankmachine1_source_last;
wire   [19:0] basesoc_sdram_bankmachine1_source_payload_addr;
wire          basesoc_sdram_bankmachine1_source_payload_we;
wire          basesoc_sdram_bankmachine1_source_ready;
wire          basesoc_sdram_bankmachine1_source_source_first;
wire          basesoc_sdram_bankmachine1_source_source_last;
wire   [19:0] basesoc_sdram_bankmachine1_source_source_payload_addr;
wire          basesoc_sdram_bankmachine1_source_source_payload_we;
wire          basesoc_sdram_bankmachine1_source_source_ready;
wire          basesoc_sdram_bankmachine1_source_source_valid;
wire          basesoc_sdram_bankmachine1_source_valid;
wire   [22:0] basesoc_sdram_bankmachine1_syncfifo1_din;
wire   [22:0] basesoc_sdram_bankmachine1_syncfifo1_dout;
wire          basesoc_sdram_bankmachine1_syncfifo1_re;
wire          basesoc_sdram_bankmachine1_syncfifo1_readable;
wire          basesoc_sdram_bankmachine1_syncfifo1_we;
wire          basesoc_sdram_bankmachine1_syncfifo1_writable;
reg     [1:0] basesoc_sdram_bankmachine1_trascon_count = 2'd0;
reg           basesoc_sdram_bankmachine1_trascon_ready = 1'd0;
wire          basesoc_sdram_bankmachine1_trascon_valid;
reg     [1:0] basesoc_sdram_bankmachine1_trccon_count = 2'd0;
reg           basesoc_sdram_bankmachine1_trccon_ready = 1'd0;
wire          basesoc_sdram_bankmachine1_trccon_valid;
reg     [2:0] basesoc_sdram_bankmachine1_twtpcon_count = 3'd0;
reg           basesoc_sdram_bankmachine1_twtpcon_ready = 1'd0;
wire          basesoc_sdram_bankmachine1_twtpcon_valid;
reg     [2:0] basesoc_sdram_bankmachine1_wrport_adr = 3'd0;
wire   [22:0] basesoc_sdram_bankmachine1_wrport_dat_r;
wire   [22:0] basesoc_sdram_bankmachine1_wrport_dat_w;
wire          basesoc_sdram_bankmachine1_wrport_we;
reg           basesoc_sdram_bankmachine2_auto_precharge = 1'd0;
reg    [12:0] basesoc_sdram_bankmachine2_cmd_payload_a = 13'd0;
wire    [2:0] basesoc_sdram_bankmachine2_cmd_payload_ba;
reg           basesoc_sdram_bankmachine2_cmd_payload_cas = 1'd0;
reg           basesoc_sdram_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg           basesoc_sdram_bankmachine2_cmd_payload_is_read = 1'd0;
reg           basesoc_sdram_bankmachine2_cmd_payload_is_write = 1'd0;
reg           basesoc_sdram_bankmachine2_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_bankmachine2_cmd_payload_we = 1'd0;
reg           basesoc_sdram_bankmachine2_cmd_ready = 1'd0;
reg           basesoc_sdram_bankmachine2_cmd_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine2_consume = 3'd0;
wire          basesoc_sdram_bankmachine2_do_read;
wire          basesoc_sdram_bankmachine2_fifo_in_first;
wire          basesoc_sdram_bankmachine2_fifo_in_last;
wire   [19:0] basesoc_sdram_bankmachine2_fifo_in_payload_addr;
wire          basesoc_sdram_bankmachine2_fifo_in_payload_we;
wire          basesoc_sdram_bankmachine2_fifo_out_first;
wire          basesoc_sdram_bankmachine2_fifo_out_last;
wire   [19:0] basesoc_sdram_bankmachine2_fifo_out_payload_addr;
wire          basesoc_sdram_bankmachine2_fifo_out_payload_we;
reg     [3:0] basesoc_sdram_bankmachine2_level = 4'd0;
wire          basesoc_sdram_bankmachine2_pipe_valid_sink_first;
wire          basesoc_sdram_bankmachine2_pipe_valid_sink_last;
wire   [19:0] basesoc_sdram_bankmachine2_pipe_valid_sink_payload_addr;
wire          basesoc_sdram_bankmachine2_pipe_valid_sink_payload_we;
wire          basesoc_sdram_bankmachine2_pipe_valid_sink_ready;
wire          basesoc_sdram_bankmachine2_pipe_valid_sink_valid;
reg           basesoc_sdram_bankmachine2_pipe_valid_source_first = 1'd0;
reg           basesoc_sdram_bankmachine2_pipe_valid_source_last = 1'd0;
reg    [19:0] basesoc_sdram_bankmachine2_pipe_valid_source_payload_addr = 20'd0;
reg           basesoc_sdram_bankmachine2_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_sdram_bankmachine2_pipe_valid_source_ready;
reg           basesoc_sdram_bankmachine2_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine2_produce = 3'd0;
wire    [2:0] basesoc_sdram_bankmachine2_rdport_adr;
wire   [22:0] basesoc_sdram_bankmachine2_rdport_dat_r;
reg           basesoc_sdram_bankmachine2_refresh_gnt = 1'd0;
wire          basesoc_sdram_bankmachine2_refresh_req;
reg           basesoc_sdram_bankmachine2_replace = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine2_req_addr;
wire          basesoc_sdram_bankmachine2_req_lock;
reg           basesoc_sdram_bankmachine2_req_rdata_valid = 1'd0;
wire          basesoc_sdram_bankmachine2_req_ready;
wire          basesoc_sdram_bankmachine2_req_valid;
reg           basesoc_sdram_bankmachine2_req_wdata_ready = 1'd0;
wire          basesoc_sdram_bankmachine2_req_we;
reg    [12:0] basesoc_sdram_bankmachine2_row = 13'd0;
reg           basesoc_sdram_bankmachine2_row_close = 1'd0;
reg           basesoc_sdram_bankmachine2_row_col_n_addr_sel = 1'd0;
wire          basesoc_sdram_bankmachine2_row_hit;
reg           basesoc_sdram_bankmachine2_row_open = 1'd0;
reg           basesoc_sdram_bankmachine2_row_opened = 1'd0;
reg           basesoc_sdram_bankmachine2_sink_first = 1'd0;
reg           basesoc_sdram_bankmachine2_sink_last = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine2_sink_payload_addr;
wire          basesoc_sdram_bankmachine2_sink_payload_we;
wire          basesoc_sdram_bankmachine2_sink_ready;
wire          basesoc_sdram_bankmachine2_sink_sink_first;
wire          basesoc_sdram_bankmachine2_sink_sink_last;
wire   [19:0] basesoc_sdram_bankmachine2_sink_sink_payload_addr;
wire          basesoc_sdram_bankmachine2_sink_sink_payload_we;
wire          basesoc_sdram_bankmachine2_sink_sink_ready;
wire          basesoc_sdram_bankmachine2_sink_sink_valid;
wire          basesoc_sdram_bankmachine2_sink_valid;
wire          basesoc_sdram_bankmachine2_source_first;
wire          basesoc_sdram_bankmachine2_source_last;
wire   [19:0] basesoc_sdram_bankmachine2_source_payload_addr;
wire          basesoc_sdram_bankmachine2_source_payload_we;
wire          basesoc_sdram_bankmachine2_source_ready;
wire          basesoc_sdram_bankmachine2_source_source_first;
wire          basesoc_sdram_bankmachine2_source_source_last;
wire   [19:0] basesoc_sdram_bankmachine2_source_source_payload_addr;
wire          basesoc_sdram_bankmachine2_source_source_payload_we;
wire          basesoc_sdram_bankmachine2_source_source_ready;
wire          basesoc_sdram_bankmachine2_source_source_valid;
wire          basesoc_sdram_bankmachine2_source_valid;
wire   [22:0] basesoc_sdram_bankmachine2_syncfifo2_din;
wire   [22:0] basesoc_sdram_bankmachine2_syncfifo2_dout;
wire          basesoc_sdram_bankmachine2_syncfifo2_re;
wire          basesoc_sdram_bankmachine2_syncfifo2_readable;
wire          basesoc_sdram_bankmachine2_syncfifo2_we;
wire          basesoc_sdram_bankmachine2_syncfifo2_writable;
reg     [1:0] basesoc_sdram_bankmachine2_trascon_count = 2'd0;
reg           basesoc_sdram_bankmachine2_trascon_ready = 1'd0;
wire          basesoc_sdram_bankmachine2_trascon_valid;
reg     [1:0] basesoc_sdram_bankmachine2_trccon_count = 2'd0;
reg           basesoc_sdram_bankmachine2_trccon_ready = 1'd0;
wire          basesoc_sdram_bankmachine2_trccon_valid;
reg     [2:0] basesoc_sdram_bankmachine2_twtpcon_count = 3'd0;
reg           basesoc_sdram_bankmachine2_twtpcon_ready = 1'd0;
wire          basesoc_sdram_bankmachine2_twtpcon_valid;
reg     [2:0] basesoc_sdram_bankmachine2_wrport_adr = 3'd0;
wire   [22:0] basesoc_sdram_bankmachine2_wrport_dat_r;
wire   [22:0] basesoc_sdram_bankmachine2_wrport_dat_w;
wire          basesoc_sdram_bankmachine2_wrport_we;
reg           basesoc_sdram_bankmachine3_auto_precharge = 1'd0;
reg    [12:0] basesoc_sdram_bankmachine3_cmd_payload_a = 13'd0;
wire    [2:0] basesoc_sdram_bankmachine3_cmd_payload_ba;
reg           basesoc_sdram_bankmachine3_cmd_payload_cas = 1'd0;
reg           basesoc_sdram_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg           basesoc_sdram_bankmachine3_cmd_payload_is_read = 1'd0;
reg           basesoc_sdram_bankmachine3_cmd_payload_is_write = 1'd0;
reg           basesoc_sdram_bankmachine3_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_bankmachine3_cmd_payload_we = 1'd0;
reg           basesoc_sdram_bankmachine3_cmd_ready = 1'd0;
reg           basesoc_sdram_bankmachine3_cmd_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine3_consume = 3'd0;
wire          basesoc_sdram_bankmachine3_do_read;
wire          basesoc_sdram_bankmachine3_fifo_in_first;
wire          basesoc_sdram_bankmachine3_fifo_in_last;
wire   [19:0] basesoc_sdram_bankmachine3_fifo_in_payload_addr;
wire          basesoc_sdram_bankmachine3_fifo_in_payload_we;
wire          basesoc_sdram_bankmachine3_fifo_out_first;
wire          basesoc_sdram_bankmachine3_fifo_out_last;
wire   [19:0] basesoc_sdram_bankmachine3_fifo_out_payload_addr;
wire          basesoc_sdram_bankmachine3_fifo_out_payload_we;
reg     [3:0] basesoc_sdram_bankmachine3_level = 4'd0;
wire          basesoc_sdram_bankmachine3_pipe_valid_sink_first;
wire          basesoc_sdram_bankmachine3_pipe_valid_sink_last;
wire   [19:0] basesoc_sdram_bankmachine3_pipe_valid_sink_payload_addr;
wire          basesoc_sdram_bankmachine3_pipe_valid_sink_payload_we;
wire          basesoc_sdram_bankmachine3_pipe_valid_sink_ready;
wire          basesoc_sdram_bankmachine3_pipe_valid_sink_valid;
reg           basesoc_sdram_bankmachine3_pipe_valid_source_first = 1'd0;
reg           basesoc_sdram_bankmachine3_pipe_valid_source_last = 1'd0;
reg    [19:0] basesoc_sdram_bankmachine3_pipe_valid_source_payload_addr = 20'd0;
reg           basesoc_sdram_bankmachine3_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_sdram_bankmachine3_pipe_valid_source_ready;
reg           basesoc_sdram_bankmachine3_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine3_produce = 3'd0;
wire    [2:0] basesoc_sdram_bankmachine3_rdport_adr;
wire   [22:0] basesoc_sdram_bankmachine3_rdport_dat_r;
reg           basesoc_sdram_bankmachine3_refresh_gnt = 1'd0;
wire          basesoc_sdram_bankmachine3_refresh_req;
reg           basesoc_sdram_bankmachine3_replace = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine3_req_addr;
wire          basesoc_sdram_bankmachine3_req_lock;
reg           basesoc_sdram_bankmachine3_req_rdata_valid = 1'd0;
wire          basesoc_sdram_bankmachine3_req_ready;
wire          basesoc_sdram_bankmachine3_req_valid;
reg           basesoc_sdram_bankmachine3_req_wdata_ready = 1'd0;
wire          basesoc_sdram_bankmachine3_req_we;
reg    [12:0] basesoc_sdram_bankmachine3_row = 13'd0;
reg           basesoc_sdram_bankmachine3_row_close = 1'd0;
reg           basesoc_sdram_bankmachine3_row_col_n_addr_sel = 1'd0;
wire          basesoc_sdram_bankmachine3_row_hit;
reg           basesoc_sdram_bankmachine3_row_open = 1'd0;
reg           basesoc_sdram_bankmachine3_row_opened = 1'd0;
reg           basesoc_sdram_bankmachine3_sink_first = 1'd0;
reg           basesoc_sdram_bankmachine3_sink_last = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine3_sink_payload_addr;
wire          basesoc_sdram_bankmachine3_sink_payload_we;
wire          basesoc_sdram_bankmachine3_sink_ready;
wire          basesoc_sdram_bankmachine3_sink_sink_first;
wire          basesoc_sdram_bankmachine3_sink_sink_last;
wire   [19:0] basesoc_sdram_bankmachine3_sink_sink_payload_addr;
wire          basesoc_sdram_bankmachine3_sink_sink_payload_we;
wire          basesoc_sdram_bankmachine3_sink_sink_ready;
wire          basesoc_sdram_bankmachine3_sink_sink_valid;
wire          basesoc_sdram_bankmachine3_sink_valid;
wire          basesoc_sdram_bankmachine3_source_first;
wire          basesoc_sdram_bankmachine3_source_last;
wire   [19:0] basesoc_sdram_bankmachine3_source_payload_addr;
wire          basesoc_sdram_bankmachine3_source_payload_we;
wire          basesoc_sdram_bankmachine3_source_ready;
wire          basesoc_sdram_bankmachine3_source_source_first;
wire          basesoc_sdram_bankmachine3_source_source_last;
wire   [19:0] basesoc_sdram_bankmachine3_source_source_payload_addr;
wire          basesoc_sdram_bankmachine3_source_source_payload_we;
wire          basesoc_sdram_bankmachine3_source_source_ready;
wire          basesoc_sdram_bankmachine3_source_source_valid;
wire          basesoc_sdram_bankmachine3_source_valid;
wire   [22:0] basesoc_sdram_bankmachine3_syncfifo3_din;
wire   [22:0] basesoc_sdram_bankmachine3_syncfifo3_dout;
wire          basesoc_sdram_bankmachine3_syncfifo3_re;
wire          basesoc_sdram_bankmachine3_syncfifo3_readable;
wire          basesoc_sdram_bankmachine3_syncfifo3_we;
wire          basesoc_sdram_bankmachine3_syncfifo3_writable;
reg     [1:0] basesoc_sdram_bankmachine3_trascon_count = 2'd0;
reg           basesoc_sdram_bankmachine3_trascon_ready = 1'd0;
wire          basesoc_sdram_bankmachine3_trascon_valid;
reg     [1:0] basesoc_sdram_bankmachine3_trccon_count = 2'd0;
reg           basesoc_sdram_bankmachine3_trccon_ready = 1'd0;
wire          basesoc_sdram_bankmachine3_trccon_valid;
reg     [2:0] basesoc_sdram_bankmachine3_twtpcon_count = 3'd0;
reg           basesoc_sdram_bankmachine3_twtpcon_ready = 1'd0;
wire          basesoc_sdram_bankmachine3_twtpcon_valid;
reg     [2:0] basesoc_sdram_bankmachine3_wrport_adr = 3'd0;
wire   [22:0] basesoc_sdram_bankmachine3_wrport_dat_r;
wire   [22:0] basesoc_sdram_bankmachine3_wrport_dat_w;
wire          basesoc_sdram_bankmachine3_wrport_we;
reg           basesoc_sdram_bankmachine4_auto_precharge = 1'd0;
reg    [12:0] basesoc_sdram_bankmachine4_cmd_payload_a = 13'd0;
wire    [2:0] basesoc_sdram_bankmachine4_cmd_payload_ba;
reg           basesoc_sdram_bankmachine4_cmd_payload_cas = 1'd0;
reg           basesoc_sdram_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg           basesoc_sdram_bankmachine4_cmd_payload_is_read = 1'd0;
reg           basesoc_sdram_bankmachine4_cmd_payload_is_write = 1'd0;
reg           basesoc_sdram_bankmachine4_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_bankmachine4_cmd_payload_we = 1'd0;
reg           basesoc_sdram_bankmachine4_cmd_ready = 1'd0;
reg           basesoc_sdram_bankmachine4_cmd_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine4_consume = 3'd0;
wire          basesoc_sdram_bankmachine4_do_read;
wire          basesoc_sdram_bankmachine4_fifo_in_first;
wire          basesoc_sdram_bankmachine4_fifo_in_last;
wire   [19:0] basesoc_sdram_bankmachine4_fifo_in_payload_addr;
wire          basesoc_sdram_bankmachine4_fifo_in_payload_we;
wire          basesoc_sdram_bankmachine4_fifo_out_first;
wire          basesoc_sdram_bankmachine4_fifo_out_last;
wire   [19:0] basesoc_sdram_bankmachine4_fifo_out_payload_addr;
wire          basesoc_sdram_bankmachine4_fifo_out_payload_we;
reg     [3:0] basesoc_sdram_bankmachine4_level = 4'd0;
wire          basesoc_sdram_bankmachine4_pipe_valid_sink_first;
wire          basesoc_sdram_bankmachine4_pipe_valid_sink_last;
wire   [19:0] basesoc_sdram_bankmachine4_pipe_valid_sink_payload_addr;
wire          basesoc_sdram_bankmachine4_pipe_valid_sink_payload_we;
wire          basesoc_sdram_bankmachine4_pipe_valid_sink_ready;
wire          basesoc_sdram_bankmachine4_pipe_valid_sink_valid;
reg           basesoc_sdram_bankmachine4_pipe_valid_source_first = 1'd0;
reg           basesoc_sdram_bankmachine4_pipe_valid_source_last = 1'd0;
reg    [19:0] basesoc_sdram_bankmachine4_pipe_valid_source_payload_addr = 20'd0;
reg           basesoc_sdram_bankmachine4_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_sdram_bankmachine4_pipe_valid_source_ready;
reg           basesoc_sdram_bankmachine4_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine4_produce = 3'd0;
wire    [2:0] basesoc_sdram_bankmachine4_rdport_adr;
wire   [22:0] basesoc_sdram_bankmachine4_rdport_dat_r;
reg           basesoc_sdram_bankmachine4_refresh_gnt = 1'd0;
wire          basesoc_sdram_bankmachine4_refresh_req;
reg           basesoc_sdram_bankmachine4_replace = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine4_req_addr;
wire          basesoc_sdram_bankmachine4_req_lock;
reg           basesoc_sdram_bankmachine4_req_rdata_valid = 1'd0;
wire          basesoc_sdram_bankmachine4_req_ready;
wire          basesoc_sdram_bankmachine4_req_valid;
reg           basesoc_sdram_bankmachine4_req_wdata_ready = 1'd0;
wire          basesoc_sdram_bankmachine4_req_we;
reg    [12:0] basesoc_sdram_bankmachine4_row = 13'd0;
reg           basesoc_sdram_bankmachine4_row_close = 1'd0;
reg           basesoc_sdram_bankmachine4_row_col_n_addr_sel = 1'd0;
wire          basesoc_sdram_bankmachine4_row_hit;
reg           basesoc_sdram_bankmachine4_row_open = 1'd0;
reg           basesoc_sdram_bankmachine4_row_opened = 1'd0;
reg           basesoc_sdram_bankmachine4_sink_first = 1'd0;
reg           basesoc_sdram_bankmachine4_sink_last = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine4_sink_payload_addr;
wire          basesoc_sdram_bankmachine4_sink_payload_we;
wire          basesoc_sdram_bankmachine4_sink_ready;
wire          basesoc_sdram_bankmachine4_sink_sink_first;
wire          basesoc_sdram_bankmachine4_sink_sink_last;
wire   [19:0] basesoc_sdram_bankmachine4_sink_sink_payload_addr;
wire          basesoc_sdram_bankmachine4_sink_sink_payload_we;
wire          basesoc_sdram_bankmachine4_sink_sink_ready;
wire          basesoc_sdram_bankmachine4_sink_sink_valid;
wire          basesoc_sdram_bankmachine4_sink_valid;
wire          basesoc_sdram_bankmachine4_source_first;
wire          basesoc_sdram_bankmachine4_source_last;
wire   [19:0] basesoc_sdram_bankmachine4_source_payload_addr;
wire          basesoc_sdram_bankmachine4_source_payload_we;
wire          basesoc_sdram_bankmachine4_source_ready;
wire          basesoc_sdram_bankmachine4_source_source_first;
wire          basesoc_sdram_bankmachine4_source_source_last;
wire   [19:0] basesoc_sdram_bankmachine4_source_source_payload_addr;
wire          basesoc_sdram_bankmachine4_source_source_payload_we;
wire          basesoc_sdram_bankmachine4_source_source_ready;
wire          basesoc_sdram_bankmachine4_source_source_valid;
wire          basesoc_sdram_bankmachine4_source_valid;
wire   [22:0] basesoc_sdram_bankmachine4_syncfifo4_din;
wire   [22:0] basesoc_sdram_bankmachine4_syncfifo4_dout;
wire          basesoc_sdram_bankmachine4_syncfifo4_re;
wire          basesoc_sdram_bankmachine4_syncfifo4_readable;
wire          basesoc_sdram_bankmachine4_syncfifo4_we;
wire          basesoc_sdram_bankmachine4_syncfifo4_writable;
reg     [1:0] basesoc_sdram_bankmachine4_trascon_count = 2'd0;
reg           basesoc_sdram_bankmachine4_trascon_ready = 1'd0;
wire          basesoc_sdram_bankmachine4_trascon_valid;
reg     [1:0] basesoc_sdram_bankmachine4_trccon_count = 2'd0;
reg           basesoc_sdram_bankmachine4_trccon_ready = 1'd0;
wire          basesoc_sdram_bankmachine4_trccon_valid;
reg     [2:0] basesoc_sdram_bankmachine4_twtpcon_count = 3'd0;
reg           basesoc_sdram_bankmachine4_twtpcon_ready = 1'd0;
wire          basesoc_sdram_bankmachine4_twtpcon_valid;
reg     [2:0] basesoc_sdram_bankmachine4_wrport_adr = 3'd0;
wire   [22:0] basesoc_sdram_bankmachine4_wrport_dat_r;
wire   [22:0] basesoc_sdram_bankmachine4_wrport_dat_w;
wire          basesoc_sdram_bankmachine4_wrport_we;
reg           basesoc_sdram_bankmachine5_auto_precharge = 1'd0;
reg    [12:0] basesoc_sdram_bankmachine5_cmd_payload_a = 13'd0;
wire    [2:0] basesoc_sdram_bankmachine5_cmd_payload_ba;
reg           basesoc_sdram_bankmachine5_cmd_payload_cas = 1'd0;
reg           basesoc_sdram_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg           basesoc_sdram_bankmachine5_cmd_payload_is_read = 1'd0;
reg           basesoc_sdram_bankmachine5_cmd_payload_is_write = 1'd0;
reg           basesoc_sdram_bankmachine5_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_bankmachine5_cmd_payload_we = 1'd0;
reg           basesoc_sdram_bankmachine5_cmd_ready = 1'd0;
reg           basesoc_sdram_bankmachine5_cmd_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine5_consume = 3'd0;
wire          basesoc_sdram_bankmachine5_do_read;
wire          basesoc_sdram_bankmachine5_fifo_in_first;
wire          basesoc_sdram_bankmachine5_fifo_in_last;
wire   [19:0] basesoc_sdram_bankmachine5_fifo_in_payload_addr;
wire          basesoc_sdram_bankmachine5_fifo_in_payload_we;
wire          basesoc_sdram_bankmachine5_fifo_out_first;
wire          basesoc_sdram_bankmachine5_fifo_out_last;
wire   [19:0] basesoc_sdram_bankmachine5_fifo_out_payload_addr;
wire          basesoc_sdram_bankmachine5_fifo_out_payload_we;
reg     [3:0] basesoc_sdram_bankmachine5_level = 4'd0;
wire          basesoc_sdram_bankmachine5_pipe_valid_sink_first;
wire          basesoc_sdram_bankmachine5_pipe_valid_sink_last;
wire   [19:0] basesoc_sdram_bankmachine5_pipe_valid_sink_payload_addr;
wire          basesoc_sdram_bankmachine5_pipe_valid_sink_payload_we;
wire          basesoc_sdram_bankmachine5_pipe_valid_sink_ready;
wire          basesoc_sdram_bankmachine5_pipe_valid_sink_valid;
reg           basesoc_sdram_bankmachine5_pipe_valid_source_first = 1'd0;
reg           basesoc_sdram_bankmachine5_pipe_valid_source_last = 1'd0;
reg    [19:0] basesoc_sdram_bankmachine5_pipe_valid_source_payload_addr = 20'd0;
reg           basesoc_sdram_bankmachine5_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_sdram_bankmachine5_pipe_valid_source_ready;
reg           basesoc_sdram_bankmachine5_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine5_produce = 3'd0;
wire    [2:0] basesoc_sdram_bankmachine5_rdport_adr;
wire   [22:0] basesoc_sdram_bankmachine5_rdport_dat_r;
reg           basesoc_sdram_bankmachine5_refresh_gnt = 1'd0;
wire          basesoc_sdram_bankmachine5_refresh_req;
reg           basesoc_sdram_bankmachine5_replace = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine5_req_addr;
wire          basesoc_sdram_bankmachine5_req_lock;
reg           basesoc_sdram_bankmachine5_req_rdata_valid = 1'd0;
wire          basesoc_sdram_bankmachine5_req_ready;
wire          basesoc_sdram_bankmachine5_req_valid;
reg           basesoc_sdram_bankmachine5_req_wdata_ready = 1'd0;
wire          basesoc_sdram_bankmachine5_req_we;
reg    [12:0] basesoc_sdram_bankmachine5_row = 13'd0;
reg           basesoc_sdram_bankmachine5_row_close = 1'd0;
reg           basesoc_sdram_bankmachine5_row_col_n_addr_sel = 1'd0;
wire          basesoc_sdram_bankmachine5_row_hit;
reg           basesoc_sdram_bankmachine5_row_open = 1'd0;
reg           basesoc_sdram_bankmachine5_row_opened = 1'd0;
reg           basesoc_sdram_bankmachine5_sink_first = 1'd0;
reg           basesoc_sdram_bankmachine5_sink_last = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine5_sink_payload_addr;
wire          basesoc_sdram_bankmachine5_sink_payload_we;
wire          basesoc_sdram_bankmachine5_sink_ready;
wire          basesoc_sdram_bankmachine5_sink_sink_first;
wire          basesoc_sdram_bankmachine5_sink_sink_last;
wire   [19:0] basesoc_sdram_bankmachine5_sink_sink_payload_addr;
wire          basesoc_sdram_bankmachine5_sink_sink_payload_we;
wire          basesoc_sdram_bankmachine5_sink_sink_ready;
wire          basesoc_sdram_bankmachine5_sink_sink_valid;
wire          basesoc_sdram_bankmachine5_sink_valid;
wire          basesoc_sdram_bankmachine5_source_first;
wire          basesoc_sdram_bankmachine5_source_last;
wire   [19:0] basesoc_sdram_bankmachine5_source_payload_addr;
wire          basesoc_sdram_bankmachine5_source_payload_we;
wire          basesoc_sdram_bankmachine5_source_ready;
wire          basesoc_sdram_bankmachine5_source_source_first;
wire          basesoc_sdram_bankmachine5_source_source_last;
wire   [19:0] basesoc_sdram_bankmachine5_source_source_payload_addr;
wire          basesoc_sdram_bankmachine5_source_source_payload_we;
wire          basesoc_sdram_bankmachine5_source_source_ready;
wire          basesoc_sdram_bankmachine5_source_source_valid;
wire          basesoc_sdram_bankmachine5_source_valid;
wire   [22:0] basesoc_sdram_bankmachine5_syncfifo5_din;
wire   [22:0] basesoc_sdram_bankmachine5_syncfifo5_dout;
wire          basesoc_sdram_bankmachine5_syncfifo5_re;
wire          basesoc_sdram_bankmachine5_syncfifo5_readable;
wire          basesoc_sdram_bankmachine5_syncfifo5_we;
wire          basesoc_sdram_bankmachine5_syncfifo5_writable;
reg     [1:0] basesoc_sdram_bankmachine5_trascon_count = 2'd0;
reg           basesoc_sdram_bankmachine5_trascon_ready = 1'd0;
wire          basesoc_sdram_bankmachine5_trascon_valid;
reg     [1:0] basesoc_sdram_bankmachine5_trccon_count = 2'd0;
reg           basesoc_sdram_bankmachine5_trccon_ready = 1'd0;
wire          basesoc_sdram_bankmachine5_trccon_valid;
reg     [2:0] basesoc_sdram_bankmachine5_twtpcon_count = 3'd0;
reg           basesoc_sdram_bankmachine5_twtpcon_ready = 1'd0;
wire          basesoc_sdram_bankmachine5_twtpcon_valid;
reg     [2:0] basesoc_sdram_bankmachine5_wrport_adr = 3'd0;
wire   [22:0] basesoc_sdram_bankmachine5_wrport_dat_r;
wire   [22:0] basesoc_sdram_bankmachine5_wrport_dat_w;
wire          basesoc_sdram_bankmachine5_wrport_we;
reg           basesoc_sdram_bankmachine6_auto_precharge = 1'd0;
reg    [12:0] basesoc_sdram_bankmachine6_cmd_payload_a = 13'd0;
wire    [2:0] basesoc_sdram_bankmachine6_cmd_payload_ba;
reg           basesoc_sdram_bankmachine6_cmd_payload_cas = 1'd0;
reg           basesoc_sdram_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg           basesoc_sdram_bankmachine6_cmd_payload_is_read = 1'd0;
reg           basesoc_sdram_bankmachine6_cmd_payload_is_write = 1'd0;
reg           basesoc_sdram_bankmachine6_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_bankmachine6_cmd_payload_we = 1'd0;
reg           basesoc_sdram_bankmachine6_cmd_ready = 1'd0;
reg           basesoc_sdram_bankmachine6_cmd_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine6_consume = 3'd0;
wire          basesoc_sdram_bankmachine6_do_read;
wire          basesoc_sdram_bankmachine6_fifo_in_first;
wire          basesoc_sdram_bankmachine6_fifo_in_last;
wire   [19:0] basesoc_sdram_bankmachine6_fifo_in_payload_addr;
wire          basesoc_sdram_bankmachine6_fifo_in_payload_we;
wire          basesoc_sdram_bankmachine6_fifo_out_first;
wire          basesoc_sdram_bankmachine6_fifo_out_last;
wire   [19:0] basesoc_sdram_bankmachine6_fifo_out_payload_addr;
wire          basesoc_sdram_bankmachine6_fifo_out_payload_we;
reg     [3:0] basesoc_sdram_bankmachine6_level = 4'd0;
wire          basesoc_sdram_bankmachine6_pipe_valid_sink_first;
wire          basesoc_sdram_bankmachine6_pipe_valid_sink_last;
wire   [19:0] basesoc_sdram_bankmachine6_pipe_valid_sink_payload_addr;
wire          basesoc_sdram_bankmachine6_pipe_valid_sink_payload_we;
wire          basesoc_sdram_bankmachine6_pipe_valid_sink_ready;
wire          basesoc_sdram_bankmachine6_pipe_valid_sink_valid;
reg           basesoc_sdram_bankmachine6_pipe_valid_source_first = 1'd0;
reg           basesoc_sdram_bankmachine6_pipe_valid_source_last = 1'd0;
reg    [19:0] basesoc_sdram_bankmachine6_pipe_valid_source_payload_addr = 20'd0;
reg           basesoc_sdram_bankmachine6_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_sdram_bankmachine6_pipe_valid_source_ready;
reg           basesoc_sdram_bankmachine6_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine6_produce = 3'd0;
wire    [2:0] basesoc_sdram_bankmachine6_rdport_adr;
wire   [22:0] basesoc_sdram_bankmachine6_rdport_dat_r;
reg           basesoc_sdram_bankmachine6_refresh_gnt = 1'd0;
wire          basesoc_sdram_bankmachine6_refresh_req;
reg           basesoc_sdram_bankmachine6_replace = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine6_req_addr;
wire          basesoc_sdram_bankmachine6_req_lock;
reg           basesoc_sdram_bankmachine6_req_rdata_valid = 1'd0;
wire          basesoc_sdram_bankmachine6_req_ready;
wire          basesoc_sdram_bankmachine6_req_valid;
reg           basesoc_sdram_bankmachine6_req_wdata_ready = 1'd0;
wire          basesoc_sdram_bankmachine6_req_we;
reg    [12:0] basesoc_sdram_bankmachine6_row = 13'd0;
reg           basesoc_sdram_bankmachine6_row_close = 1'd0;
reg           basesoc_sdram_bankmachine6_row_col_n_addr_sel = 1'd0;
wire          basesoc_sdram_bankmachine6_row_hit;
reg           basesoc_sdram_bankmachine6_row_open = 1'd0;
reg           basesoc_sdram_bankmachine6_row_opened = 1'd0;
reg           basesoc_sdram_bankmachine6_sink_first = 1'd0;
reg           basesoc_sdram_bankmachine6_sink_last = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine6_sink_payload_addr;
wire          basesoc_sdram_bankmachine6_sink_payload_we;
wire          basesoc_sdram_bankmachine6_sink_ready;
wire          basesoc_sdram_bankmachine6_sink_sink_first;
wire          basesoc_sdram_bankmachine6_sink_sink_last;
wire   [19:0] basesoc_sdram_bankmachine6_sink_sink_payload_addr;
wire          basesoc_sdram_bankmachine6_sink_sink_payload_we;
wire          basesoc_sdram_bankmachine6_sink_sink_ready;
wire          basesoc_sdram_bankmachine6_sink_sink_valid;
wire          basesoc_sdram_bankmachine6_sink_valid;
wire          basesoc_sdram_bankmachine6_source_first;
wire          basesoc_sdram_bankmachine6_source_last;
wire   [19:0] basesoc_sdram_bankmachine6_source_payload_addr;
wire          basesoc_sdram_bankmachine6_source_payload_we;
wire          basesoc_sdram_bankmachine6_source_ready;
wire          basesoc_sdram_bankmachine6_source_source_first;
wire          basesoc_sdram_bankmachine6_source_source_last;
wire   [19:0] basesoc_sdram_bankmachine6_source_source_payload_addr;
wire          basesoc_sdram_bankmachine6_source_source_payload_we;
wire          basesoc_sdram_bankmachine6_source_source_ready;
wire          basesoc_sdram_bankmachine6_source_source_valid;
wire          basesoc_sdram_bankmachine6_source_valid;
wire   [22:0] basesoc_sdram_bankmachine6_syncfifo6_din;
wire   [22:0] basesoc_sdram_bankmachine6_syncfifo6_dout;
wire          basesoc_sdram_bankmachine6_syncfifo6_re;
wire          basesoc_sdram_bankmachine6_syncfifo6_readable;
wire          basesoc_sdram_bankmachine6_syncfifo6_we;
wire          basesoc_sdram_bankmachine6_syncfifo6_writable;
reg     [1:0] basesoc_sdram_bankmachine6_trascon_count = 2'd0;
reg           basesoc_sdram_bankmachine6_trascon_ready = 1'd0;
wire          basesoc_sdram_bankmachine6_trascon_valid;
reg     [1:0] basesoc_sdram_bankmachine6_trccon_count = 2'd0;
reg           basesoc_sdram_bankmachine6_trccon_ready = 1'd0;
wire          basesoc_sdram_bankmachine6_trccon_valid;
reg     [2:0] basesoc_sdram_bankmachine6_twtpcon_count = 3'd0;
reg           basesoc_sdram_bankmachine6_twtpcon_ready = 1'd0;
wire          basesoc_sdram_bankmachine6_twtpcon_valid;
reg     [2:0] basesoc_sdram_bankmachine6_wrport_adr = 3'd0;
wire   [22:0] basesoc_sdram_bankmachine6_wrport_dat_r;
wire   [22:0] basesoc_sdram_bankmachine6_wrport_dat_w;
wire          basesoc_sdram_bankmachine6_wrport_we;
reg           basesoc_sdram_bankmachine7_auto_precharge = 1'd0;
reg    [12:0] basesoc_sdram_bankmachine7_cmd_payload_a = 13'd0;
wire    [2:0] basesoc_sdram_bankmachine7_cmd_payload_ba;
reg           basesoc_sdram_bankmachine7_cmd_payload_cas = 1'd0;
reg           basesoc_sdram_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg           basesoc_sdram_bankmachine7_cmd_payload_is_read = 1'd0;
reg           basesoc_sdram_bankmachine7_cmd_payload_is_write = 1'd0;
reg           basesoc_sdram_bankmachine7_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_bankmachine7_cmd_payload_we = 1'd0;
reg           basesoc_sdram_bankmachine7_cmd_ready = 1'd0;
reg           basesoc_sdram_bankmachine7_cmd_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine7_consume = 3'd0;
wire          basesoc_sdram_bankmachine7_do_read;
wire          basesoc_sdram_bankmachine7_fifo_in_first;
wire          basesoc_sdram_bankmachine7_fifo_in_last;
wire   [19:0] basesoc_sdram_bankmachine7_fifo_in_payload_addr;
wire          basesoc_sdram_bankmachine7_fifo_in_payload_we;
wire          basesoc_sdram_bankmachine7_fifo_out_first;
wire          basesoc_sdram_bankmachine7_fifo_out_last;
wire   [19:0] basesoc_sdram_bankmachine7_fifo_out_payload_addr;
wire          basesoc_sdram_bankmachine7_fifo_out_payload_we;
reg     [3:0] basesoc_sdram_bankmachine7_level = 4'd0;
wire          basesoc_sdram_bankmachine7_pipe_valid_sink_first;
wire          basesoc_sdram_bankmachine7_pipe_valid_sink_last;
wire   [19:0] basesoc_sdram_bankmachine7_pipe_valid_sink_payload_addr;
wire          basesoc_sdram_bankmachine7_pipe_valid_sink_payload_we;
wire          basesoc_sdram_bankmachine7_pipe_valid_sink_ready;
wire          basesoc_sdram_bankmachine7_pipe_valid_sink_valid;
reg           basesoc_sdram_bankmachine7_pipe_valid_source_first = 1'd0;
reg           basesoc_sdram_bankmachine7_pipe_valid_source_last = 1'd0;
reg    [19:0] basesoc_sdram_bankmachine7_pipe_valid_source_payload_addr = 20'd0;
reg           basesoc_sdram_bankmachine7_pipe_valid_source_payload_we = 1'd0;
wire          basesoc_sdram_bankmachine7_pipe_valid_source_ready;
reg           basesoc_sdram_bankmachine7_pipe_valid_source_valid = 1'd0;
reg     [2:0] basesoc_sdram_bankmachine7_produce = 3'd0;
wire    [2:0] basesoc_sdram_bankmachine7_rdport_adr;
wire   [22:0] basesoc_sdram_bankmachine7_rdport_dat_r;
reg           basesoc_sdram_bankmachine7_refresh_gnt = 1'd0;
wire          basesoc_sdram_bankmachine7_refresh_req;
reg           basesoc_sdram_bankmachine7_replace = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine7_req_addr;
wire          basesoc_sdram_bankmachine7_req_lock;
reg           basesoc_sdram_bankmachine7_req_rdata_valid = 1'd0;
wire          basesoc_sdram_bankmachine7_req_ready;
wire          basesoc_sdram_bankmachine7_req_valid;
reg           basesoc_sdram_bankmachine7_req_wdata_ready = 1'd0;
wire          basesoc_sdram_bankmachine7_req_we;
reg    [12:0] basesoc_sdram_bankmachine7_row = 13'd0;
reg           basesoc_sdram_bankmachine7_row_close = 1'd0;
reg           basesoc_sdram_bankmachine7_row_col_n_addr_sel = 1'd0;
wire          basesoc_sdram_bankmachine7_row_hit;
reg           basesoc_sdram_bankmachine7_row_open = 1'd0;
reg           basesoc_sdram_bankmachine7_row_opened = 1'd0;
reg           basesoc_sdram_bankmachine7_sink_first = 1'd0;
reg           basesoc_sdram_bankmachine7_sink_last = 1'd0;
wire   [19:0] basesoc_sdram_bankmachine7_sink_payload_addr;
wire          basesoc_sdram_bankmachine7_sink_payload_we;
wire          basesoc_sdram_bankmachine7_sink_ready;
wire          basesoc_sdram_bankmachine7_sink_sink_first;
wire          basesoc_sdram_bankmachine7_sink_sink_last;
wire   [19:0] basesoc_sdram_bankmachine7_sink_sink_payload_addr;
wire          basesoc_sdram_bankmachine7_sink_sink_payload_we;
wire          basesoc_sdram_bankmachine7_sink_sink_ready;
wire          basesoc_sdram_bankmachine7_sink_sink_valid;
wire          basesoc_sdram_bankmachine7_sink_valid;
wire          basesoc_sdram_bankmachine7_source_first;
wire          basesoc_sdram_bankmachine7_source_last;
wire   [19:0] basesoc_sdram_bankmachine7_source_payload_addr;
wire          basesoc_sdram_bankmachine7_source_payload_we;
wire          basesoc_sdram_bankmachine7_source_ready;
wire          basesoc_sdram_bankmachine7_source_source_first;
wire          basesoc_sdram_bankmachine7_source_source_last;
wire   [19:0] basesoc_sdram_bankmachine7_source_source_payload_addr;
wire          basesoc_sdram_bankmachine7_source_source_payload_we;
wire          basesoc_sdram_bankmachine7_source_source_ready;
wire          basesoc_sdram_bankmachine7_source_source_valid;
wire          basesoc_sdram_bankmachine7_source_valid;
wire   [22:0] basesoc_sdram_bankmachine7_syncfifo7_din;
wire   [22:0] basesoc_sdram_bankmachine7_syncfifo7_dout;
wire          basesoc_sdram_bankmachine7_syncfifo7_re;
wire          basesoc_sdram_bankmachine7_syncfifo7_readable;
wire          basesoc_sdram_bankmachine7_syncfifo7_we;
wire          basesoc_sdram_bankmachine7_syncfifo7_writable;
reg     [1:0] basesoc_sdram_bankmachine7_trascon_count = 2'd0;
reg           basesoc_sdram_bankmachine7_trascon_ready = 1'd0;
wire          basesoc_sdram_bankmachine7_trascon_valid;
reg     [1:0] basesoc_sdram_bankmachine7_trccon_count = 2'd0;
reg           basesoc_sdram_bankmachine7_trccon_ready = 1'd0;
wire          basesoc_sdram_bankmachine7_trccon_valid;
reg     [2:0] basesoc_sdram_bankmachine7_twtpcon_count = 3'd0;
reg           basesoc_sdram_bankmachine7_twtpcon_ready = 1'd0;
wire          basesoc_sdram_bankmachine7_twtpcon_valid;
reg     [2:0] basesoc_sdram_bankmachine7_wrport_adr = 3'd0;
wire   [22:0] basesoc_sdram_bankmachine7_wrport_dat_r;
wire   [22:0] basesoc_sdram_bankmachine7_wrport_dat_w;
wire          basesoc_sdram_bankmachine7_wrport_we;
wire          basesoc_sdram_cas_allowed;
wire          basesoc_sdram_choose_cmd_ce;
wire   [12:0] basesoc_sdram_choose_cmd_cmd_payload_a;
wire    [2:0] basesoc_sdram_choose_cmd_cmd_payload_ba;
reg           basesoc_sdram_choose_cmd_cmd_payload_cas = 1'd0;
wire          basesoc_sdram_choose_cmd_cmd_payload_is_cmd;
wire          basesoc_sdram_choose_cmd_cmd_payload_is_read;
wire          basesoc_sdram_choose_cmd_cmd_payload_is_write;
reg           basesoc_sdram_choose_cmd_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_choose_cmd_cmd_payload_we = 1'd0;
reg           basesoc_sdram_choose_cmd_cmd_ready = 1'd0;
wire          basesoc_sdram_choose_cmd_cmd_valid;
reg     [2:0] basesoc_sdram_choose_cmd_grant = 3'd0;
wire    [7:0] basesoc_sdram_choose_cmd_request;
reg     [7:0] basesoc_sdram_choose_cmd_valids = 8'd0;
reg           basesoc_sdram_choose_cmd_want_activates = 1'd0;
reg           basesoc_sdram_choose_cmd_want_cmds = 1'd0;
reg           basesoc_sdram_choose_cmd_want_reads = 1'd0;
reg           basesoc_sdram_choose_cmd_want_writes = 1'd0;
wire          basesoc_sdram_choose_req_ce;
wire   [12:0] basesoc_sdram_choose_req_cmd_payload_a;
wire    [2:0] basesoc_sdram_choose_req_cmd_payload_ba;
reg           basesoc_sdram_choose_req_cmd_payload_cas = 1'd0;
wire          basesoc_sdram_choose_req_cmd_payload_is_cmd;
wire          basesoc_sdram_choose_req_cmd_payload_is_read;
wire          basesoc_sdram_choose_req_cmd_payload_is_write;
reg           basesoc_sdram_choose_req_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_choose_req_cmd_payload_we = 1'd0;
reg           basesoc_sdram_choose_req_cmd_ready = 1'd0;
wire          basesoc_sdram_choose_req_cmd_valid;
reg     [2:0] basesoc_sdram_choose_req_grant = 3'd0;
wire    [7:0] basesoc_sdram_choose_req_request;
reg     [7:0] basesoc_sdram_choose_req_valids = 8'd0;
reg           basesoc_sdram_choose_req_want_activates = 1'd0;
reg           basesoc_sdram_choose_req_want_cmds = 1'd0;
reg           basesoc_sdram_choose_req_want_reads = 1'd0;
reg           basesoc_sdram_choose_req_want_writes = 1'd0;
wire          basesoc_sdram_cke;
reg           basesoc_sdram_cmd_last = 1'd0;
reg    [12:0] basesoc_sdram_cmd_payload_a = 13'd0;
reg     [2:0] basesoc_sdram_cmd_payload_ba = 3'd0;
reg           basesoc_sdram_cmd_payload_cas = 1'd0;
reg           basesoc_sdram_cmd_payload_is_read = 1'd0;
reg           basesoc_sdram_cmd_payload_is_write = 1'd0;
reg           basesoc_sdram_cmd_payload_ras = 1'd0;
reg           basesoc_sdram_cmd_payload_we = 1'd0;
reg           basesoc_sdram_cmd_ready = 1'd0;
reg           basesoc_sdram_cmd_valid = 1'd0;
reg           basesoc_sdram_csr_dfi_p0_act_n = 1'd1;
wire   [12:0] basesoc_sdram_csr_dfi_p0_address;
wire    [2:0] basesoc_sdram_csr_dfi_p0_bank;
reg           basesoc_sdram_csr_dfi_p0_cas_n = 1'd1;
reg           basesoc_sdram_csr_dfi_p0_cke = 1'd0;
reg           basesoc_sdram_csr_dfi_p0_cs_n = 1'd1;
reg           basesoc_sdram_csr_dfi_p0_odt = 1'd0;
reg           basesoc_sdram_csr_dfi_p0_ras_n = 1'd1;
reg    [63:0] basesoc_sdram_csr_dfi_p0_rddata = 64'd0;
wire          basesoc_sdram_csr_dfi_p0_rddata_en;
reg           basesoc_sdram_csr_dfi_p0_rddata_valid = 1'd0;
wire          basesoc_sdram_csr_dfi_p0_reset_n;
reg           basesoc_sdram_csr_dfi_p0_we_n = 1'd1;
wire   [63:0] basesoc_sdram_csr_dfi_p0_wrdata;
wire          basesoc_sdram_csr_dfi_p0_wrdata_en;
wire    [7:0] basesoc_sdram_csr_dfi_p0_wrdata_mask;
reg           basesoc_sdram_csr_dfi_p1_act_n = 1'd1;
wire   [12:0] basesoc_sdram_csr_dfi_p1_address;
wire    [2:0] basesoc_sdram_csr_dfi_p1_bank;
reg           basesoc_sdram_csr_dfi_p1_cas_n = 1'd1;
reg           basesoc_sdram_csr_dfi_p1_cke = 1'd0;
reg           basesoc_sdram_csr_dfi_p1_cs_n = 1'd1;
reg           basesoc_sdram_csr_dfi_p1_odt = 1'd0;
reg           basesoc_sdram_csr_dfi_p1_ras_n = 1'd1;
reg    [63:0] basesoc_sdram_csr_dfi_p1_rddata = 64'd0;
wire          basesoc_sdram_csr_dfi_p1_rddata_en;
reg           basesoc_sdram_csr_dfi_p1_rddata_valid = 1'd0;
wire          basesoc_sdram_csr_dfi_p1_reset_n;
reg           basesoc_sdram_csr_dfi_p1_we_n = 1'd1;
wire   [63:0] basesoc_sdram_csr_dfi_p1_wrdata;
wire          basesoc_sdram_csr_dfi_p1_wrdata_en;
wire    [7:0] basesoc_sdram_csr_dfi_p1_wrdata_mask;
reg           basesoc_sdram_dfi_p0_act_n = 1'd1;
reg    [12:0] basesoc_sdram_dfi_p0_address = 13'd0;
reg     [2:0] basesoc_sdram_dfi_p0_bank = 3'd0;
reg           basesoc_sdram_dfi_p0_cas_n = 1'd1;
wire          basesoc_sdram_dfi_p0_cke;
reg           basesoc_sdram_dfi_p0_cs_n = 1'd1;
wire          basesoc_sdram_dfi_p0_odt;
reg           basesoc_sdram_dfi_p0_ras_n = 1'd1;
wire   [63:0] basesoc_sdram_dfi_p0_rddata;
reg           basesoc_sdram_dfi_p0_rddata_en = 1'd0;
wire          basesoc_sdram_dfi_p0_rddata_valid;
wire          basesoc_sdram_dfi_p0_reset_n;
reg           basesoc_sdram_dfi_p0_we_n = 1'd1;
wire   [63:0] basesoc_sdram_dfi_p0_wrdata;
reg           basesoc_sdram_dfi_p0_wrdata_en = 1'd0;
wire    [7:0] basesoc_sdram_dfi_p0_wrdata_mask;
reg           basesoc_sdram_dfi_p1_act_n = 1'd1;
reg    [12:0] basesoc_sdram_dfi_p1_address = 13'd0;
reg     [2:0] basesoc_sdram_dfi_p1_bank = 3'd0;
reg           basesoc_sdram_dfi_p1_cas_n = 1'd1;
wire          basesoc_sdram_dfi_p1_cke;
reg           basesoc_sdram_dfi_p1_cs_n = 1'd1;
wire          basesoc_sdram_dfi_p1_odt;
reg           basesoc_sdram_dfi_p1_ras_n = 1'd1;
wire   [63:0] basesoc_sdram_dfi_p1_rddata;
reg           basesoc_sdram_dfi_p1_rddata_en = 1'd0;
wire          basesoc_sdram_dfi_p1_rddata_valid;
wire          basesoc_sdram_dfi_p1_reset_n;
reg           basesoc_sdram_dfi_p1_we_n = 1'd1;
wire   [63:0] basesoc_sdram_dfi_p1_wrdata;
reg           basesoc_sdram_dfi_p1_wrdata_en = 1'd0;
wire    [7:0] basesoc_sdram_dfi_p1_wrdata_mask;
reg           basesoc_sdram_en0 = 1'd0;
reg           basesoc_sdram_en1 = 1'd0;
reg           basesoc_sdram_ext_dfi_p0_act_n = 1'd1;
reg    [12:0] basesoc_sdram_ext_dfi_p0_address = 13'd0;
reg     [2:0] basesoc_sdram_ext_dfi_p0_bank = 3'd0;
reg           basesoc_sdram_ext_dfi_p0_cas_n = 1'd1;
reg           basesoc_sdram_ext_dfi_p0_cke = 1'd0;
reg           basesoc_sdram_ext_dfi_p0_cs_n = 1'd1;
reg           basesoc_sdram_ext_dfi_p0_odt = 1'd0;
reg           basesoc_sdram_ext_dfi_p0_ras_n = 1'd1;
reg    [63:0] basesoc_sdram_ext_dfi_p0_rddata = 64'd0;
reg           basesoc_sdram_ext_dfi_p0_rddata_en = 1'd0;
reg           basesoc_sdram_ext_dfi_p0_rddata_valid = 1'd0;
reg           basesoc_sdram_ext_dfi_p0_reset_n = 1'd0;
reg           basesoc_sdram_ext_dfi_p0_we_n = 1'd1;
reg    [63:0] basesoc_sdram_ext_dfi_p0_wrdata = 64'd0;
reg           basesoc_sdram_ext_dfi_p0_wrdata_en = 1'd0;
reg     [7:0] basesoc_sdram_ext_dfi_p0_wrdata_mask = 8'd0;
reg           basesoc_sdram_ext_dfi_p1_act_n = 1'd1;
reg    [12:0] basesoc_sdram_ext_dfi_p1_address = 13'd0;
reg     [2:0] basesoc_sdram_ext_dfi_p1_bank = 3'd0;
reg           basesoc_sdram_ext_dfi_p1_cas_n = 1'd1;
reg           basesoc_sdram_ext_dfi_p1_cke = 1'd0;
reg           basesoc_sdram_ext_dfi_p1_cs_n = 1'd1;
reg           basesoc_sdram_ext_dfi_p1_odt = 1'd0;
reg           basesoc_sdram_ext_dfi_p1_ras_n = 1'd1;
reg    [63:0] basesoc_sdram_ext_dfi_p1_rddata = 64'd0;
reg           basesoc_sdram_ext_dfi_p1_rddata_en = 1'd0;
reg           basesoc_sdram_ext_dfi_p1_rddata_valid = 1'd0;
reg           basesoc_sdram_ext_dfi_p1_reset_n = 1'd0;
reg           basesoc_sdram_ext_dfi_p1_we_n = 1'd1;
reg    [63:0] basesoc_sdram_ext_dfi_p1_wrdata = 64'd0;
reg           basesoc_sdram_ext_dfi_p1_wrdata_en = 1'd0;
reg     [7:0] basesoc_sdram_ext_dfi_p1_wrdata_mask = 8'd0;
reg           basesoc_sdram_ext_dfi_sel = 1'd0;
wire          basesoc_sdram_go_to_refresh;
wire   [19:0] basesoc_sdram_interface_bank0_addr;
wire          basesoc_sdram_interface_bank0_lock;
wire          basesoc_sdram_interface_bank0_rdata_valid;
wire          basesoc_sdram_interface_bank0_ready;
wire          basesoc_sdram_interface_bank0_valid;
wire          basesoc_sdram_interface_bank0_wdata_ready;
wire          basesoc_sdram_interface_bank0_we;
wire   [19:0] basesoc_sdram_interface_bank1_addr;
wire          basesoc_sdram_interface_bank1_lock;
wire          basesoc_sdram_interface_bank1_rdata_valid;
wire          basesoc_sdram_interface_bank1_ready;
wire          basesoc_sdram_interface_bank1_valid;
wire          basesoc_sdram_interface_bank1_wdata_ready;
wire          basesoc_sdram_interface_bank1_we;
wire   [19:0] basesoc_sdram_interface_bank2_addr;
wire          basesoc_sdram_interface_bank2_lock;
wire          basesoc_sdram_interface_bank2_rdata_valid;
wire          basesoc_sdram_interface_bank2_ready;
wire          basesoc_sdram_interface_bank2_valid;
wire          basesoc_sdram_interface_bank2_wdata_ready;
wire          basesoc_sdram_interface_bank2_we;
wire   [19:0] basesoc_sdram_interface_bank3_addr;
wire          basesoc_sdram_interface_bank3_lock;
wire          basesoc_sdram_interface_bank3_rdata_valid;
wire          basesoc_sdram_interface_bank3_ready;
wire          basesoc_sdram_interface_bank3_valid;
wire          basesoc_sdram_interface_bank3_wdata_ready;
wire          basesoc_sdram_interface_bank3_we;
wire   [19:0] basesoc_sdram_interface_bank4_addr;
wire          basesoc_sdram_interface_bank4_lock;
wire          basesoc_sdram_interface_bank4_rdata_valid;
wire          basesoc_sdram_interface_bank4_ready;
wire          basesoc_sdram_interface_bank4_valid;
wire          basesoc_sdram_interface_bank4_wdata_ready;
wire          basesoc_sdram_interface_bank4_we;
wire   [19:0] basesoc_sdram_interface_bank5_addr;
wire          basesoc_sdram_interface_bank5_lock;
wire          basesoc_sdram_interface_bank5_rdata_valid;
wire          basesoc_sdram_interface_bank5_ready;
wire          basesoc_sdram_interface_bank5_valid;
wire          basesoc_sdram_interface_bank5_wdata_ready;
wire          basesoc_sdram_interface_bank5_we;
wire   [19:0] basesoc_sdram_interface_bank6_addr;
wire          basesoc_sdram_interface_bank6_lock;
wire          basesoc_sdram_interface_bank6_rdata_valid;
wire          basesoc_sdram_interface_bank6_ready;
wire          basesoc_sdram_interface_bank6_valid;
wire          basesoc_sdram_interface_bank6_wdata_ready;
wire          basesoc_sdram_interface_bank6_we;
wire   [19:0] basesoc_sdram_interface_bank7_addr;
wire          basesoc_sdram_interface_bank7_lock;
wire          basesoc_sdram_interface_bank7_rdata_valid;
wire          basesoc_sdram_interface_bank7_ready;
wire          basesoc_sdram_interface_bank7_valid;
wire          basesoc_sdram_interface_bank7_wdata_ready;
wire          basesoc_sdram_interface_bank7_we;
wire  [127:0] basesoc_sdram_interface_rdata;
reg   [127:0] basesoc_sdram_interface_wdata = 128'd0;
reg    [15:0] basesoc_sdram_interface_wdata_we = 16'd0;
reg           basesoc_sdram_master_p0_act_n = 1'd1;
reg    [12:0] basesoc_sdram_master_p0_address = 13'd0;
reg     [2:0] basesoc_sdram_master_p0_bank = 3'd0;
reg           basesoc_sdram_master_p0_cas_n = 1'd1;
reg           basesoc_sdram_master_p0_cke = 1'd0;
reg           basesoc_sdram_master_p0_cs_n = 1'd1;
reg           basesoc_sdram_master_p0_odt = 1'd0;
reg           basesoc_sdram_master_p0_ras_n = 1'd1;
wire   [63:0] basesoc_sdram_master_p0_rddata;
reg           basesoc_sdram_master_p0_rddata_en = 1'd0;
wire          basesoc_sdram_master_p0_rddata_valid;
reg           basesoc_sdram_master_p0_reset_n = 1'd0;
reg           basesoc_sdram_master_p0_we_n = 1'd1;
reg    [63:0] basesoc_sdram_master_p0_wrdata = 64'd0;
reg           basesoc_sdram_master_p0_wrdata_en = 1'd0;
reg     [7:0] basesoc_sdram_master_p0_wrdata_mask = 8'd0;
reg           basesoc_sdram_master_p1_act_n = 1'd1;
reg    [12:0] basesoc_sdram_master_p1_address = 13'd0;
reg     [2:0] basesoc_sdram_master_p1_bank = 3'd0;
reg           basesoc_sdram_master_p1_cas_n = 1'd1;
reg           basesoc_sdram_master_p1_cke = 1'd0;
reg           basesoc_sdram_master_p1_cs_n = 1'd1;
reg           basesoc_sdram_master_p1_odt = 1'd0;
reg           basesoc_sdram_master_p1_ras_n = 1'd1;
wire   [63:0] basesoc_sdram_master_p1_rddata;
reg           basesoc_sdram_master_p1_rddata_en = 1'd0;
wire          basesoc_sdram_master_p1_rddata_valid;
reg           basesoc_sdram_master_p1_reset_n = 1'd0;
reg           basesoc_sdram_master_p1_we_n = 1'd1;
reg    [63:0] basesoc_sdram_master_p1_wrdata = 64'd0;
reg           basesoc_sdram_master_p1_wrdata_en = 1'd0;
reg     [7:0] basesoc_sdram_master_p1_wrdata_mask = 8'd0;
wire          basesoc_sdram_max_time0;
wire          basesoc_sdram_max_time1;
reg    [12:0] basesoc_sdram_nop_a = 13'd0;
reg     [2:0] basesoc_sdram_nop_ba = 3'd0;
wire          basesoc_sdram_odt;
reg           basesoc_sdram_phaseinjector0_address_re = 1'd0;
reg    [12:0] basesoc_sdram_phaseinjector0_address_storage = 13'd0;
reg           basesoc_sdram_phaseinjector0_baddress_re = 1'd0;
reg     [2:0] basesoc_sdram_phaseinjector0_baddress_storage = 3'd0;
wire          basesoc_sdram_phaseinjector0_command_issue_r;
reg           basesoc_sdram_phaseinjector0_command_issue_re = 1'd0;
reg           basesoc_sdram_phaseinjector0_command_issue_w = 1'd0;
reg           basesoc_sdram_phaseinjector0_command_issue_we = 1'd0;
reg           basesoc_sdram_phaseinjector0_command_re = 1'd0;
reg     [7:0] basesoc_sdram_phaseinjector0_command_storage = 8'd0;
wire          basesoc_sdram_phaseinjector0_csrfield_cas;
wire          basesoc_sdram_phaseinjector0_csrfield_cs;
wire          basesoc_sdram_phaseinjector0_csrfield_cs_bottom;
wire          basesoc_sdram_phaseinjector0_csrfield_cs_top;
wire          basesoc_sdram_phaseinjector0_csrfield_ras;
wire          basesoc_sdram_phaseinjector0_csrfield_rden;
wire          basesoc_sdram_phaseinjector0_csrfield_we;
wire          basesoc_sdram_phaseinjector0_csrfield_wren;
reg           basesoc_sdram_phaseinjector0_rddata_re = 1'd0;
reg    [63:0] basesoc_sdram_phaseinjector0_rddata_status = 64'd0;
wire          basesoc_sdram_phaseinjector0_rddata_we;
reg           basesoc_sdram_phaseinjector0_wrdata_re = 1'd0;
reg    [63:0] basesoc_sdram_phaseinjector0_wrdata_storage = 64'd0;
reg           basesoc_sdram_phaseinjector1_address_re = 1'd0;
reg    [12:0] basesoc_sdram_phaseinjector1_address_storage = 13'd0;
reg           basesoc_sdram_phaseinjector1_baddress_re = 1'd0;
reg     [2:0] basesoc_sdram_phaseinjector1_baddress_storage = 3'd0;
wire          basesoc_sdram_phaseinjector1_command_issue_r;
reg           basesoc_sdram_phaseinjector1_command_issue_re = 1'd0;
reg           basesoc_sdram_phaseinjector1_command_issue_w = 1'd0;
reg           basesoc_sdram_phaseinjector1_command_issue_we = 1'd0;
reg           basesoc_sdram_phaseinjector1_command_re = 1'd0;
reg     [7:0] basesoc_sdram_phaseinjector1_command_storage = 8'd0;
wire          basesoc_sdram_phaseinjector1_csrfield_cas;
wire          basesoc_sdram_phaseinjector1_csrfield_cs;
wire          basesoc_sdram_phaseinjector1_csrfield_cs_bottom;
wire          basesoc_sdram_phaseinjector1_csrfield_cs_top;
wire          basesoc_sdram_phaseinjector1_csrfield_ras;
wire          basesoc_sdram_phaseinjector1_csrfield_rden;
wire          basesoc_sdram_phaseinjector1_csrfield_we;
wire          basesoc_sdram_phaseinjector1_csrfield_wren;
reg           basesoc_sdram_phaseinjector1_rddata_re = 1'd0;
reg    [63:0] basesoc_sdram_phaseinjector1_rddata_status = 64'd0;
wire          basesoc_sdram_phaseinjector1_rddata_we;
reg           basesoc_sdram_phaseinjector1_wrdata_re = 1'd0;
reg    [63:0] basesoc_sdram_phaseinjector1_wrdata_storage = 64'd0;
reg           basesoc_sdram_postponer_count = 1'd0;
wire          basesoc_sdram_postponer_req_i;
reg           basesoc_sdram_postponer_req_o = 1'd0;
wire          basesoc_sdram_ras_allowed;
reg           basesoc_sdram_re = 1'd0;
wire          basesoc_sdram_read_available;
wire          basesoc_sdram_reset_n;
wire          basesoc_sdram_sel;
reg           basesoc_sdram_sequencer_count = 1'd0;
wire          basesoc_sdram_sequencer_done0;
reg           basesoc_sdram_sequencer_done1 = 1'd0;
reg           basesoc_sdram_sequencer_start0 = 1'd0;
wire          basesoc_sdram_sequencer_start1;
reg     [6:0] basesoc_sdram_sequencer_trigger = 7'd0;
wire          basesoc_sdram_slave_p0_act_n;
wire   [12:0] basesoc_sdram_slave_p0_address;
wire    [2:0] basesoc_sdram_slave_p0_bank;
wire          basesoc_sdram_slave_p0_cas_n;
wire          basesoc_sdram_slave_p0_cke;
wire          basesoc_sdram_slave_p0_cs_n;
wire          basesoc_sdram_slave_p0_odt;
wire          basesoc_sdram_slave_p0_ras_n;
reg    [63:0] basesoc_sdram_slave_p0_rddata = 64'd0;
wire          basesoc_sdram_slave_p0_rddata_en;
reg           basesoc_sdram_slave_p0_rddata_valid = 1'd0;
wire          basesoc_sdram_slave_p0_reset_n;
wire          basesoc_sdram_slave_p0_we_n;
wire   [63:0] basesoc_sdram_slave_p0_wrdata;
wire          basesoc_sdram_slave_p0_wrdata_en;
wire    [7:0] basesoc_sdram_slave_p0_wrdata_mask;
wire          basesoc_sdram_slave_p1_act_n;
wire   [12:0] basesoc_sdram_slave_p1_address;
wire    [2:0] basesoc_sdram_slave_p1_bank;
wire          basesoc_sdram_slave_p1_cas_n;
wire          basesoc_sdram_slave_p1_cke;
wire          basesoc_sdram_slave_p1_cs_n;
wire          basesoc_sdram_slave_p1_odt;
wire          basesoc_sdram_slave_p1_ras_n;
reg    [63:0] basesoc_sdram_slave_p1_rddata = 64'd0;
wire          basesoc_sdram_slave_p1_rddata_en;
reg           basesoc_sdram_slave_p1_rddata_valid = 1'd0;
wire          basesoc_sdram_slave_p1_reset_n;
wire          basesoc_sdram_slave_p1_we_n;
wire   [63:0] basesoc_sdram_slave_p1_wrdata;
wire          basesoc_sdram_slave_p1_wrdata_en;
wire    [7:0] basesoc_sdram_slave_p1_wrdata_mask;
reg     [1:0] basesoc_sdram_steerer0 = 2'd0;
reg     [1:0] basesoc_sdram_steerer1 = 2'd0;
reg           basesoc_sdram_steerer2 = 1'd1;
reg           basesoc_sdram_steerer3 = 1'd1;
reg           basesoc_sdram_steerer4 = 1'd1;
reg           basesoc_sdram_steerer5 = 1'd1;
reg     [3:0] basesoc_sdram_storage = 4'd1;
reg           basesoc_sdram_tccdcon_count = 1'd0;
reg           basesoc_sdram_tccdcon_ready = 1'd0;
wire          basesoc_sdram_tccdcon_valid;
wire    [1:0] basesoc_sdram_tfawcon_count;
reg           basesoc_sdram_tfawcon_ready = 1'd1;
wire          basesoc_sdram_tfawcon_valid;
reg     [2:0] basesoc_sdram_tfawcon_window = 3'd0;
reg     [4:0] basesoc_sdram_time0 = 5'd0;
reg     [3:0] basesoc_sdram_time1 = 4'd0;
wire    [8:0] basesoc_sdram_timer_count0;
reg     [8:0] basesoc_sdram_timer_count1 = 9'd374;
wire          basesoc_sdram_timer_done0;
wire          basesoc_sdram_timer_done1;
wire          basesoc_sdram_timer_wait;
reg           basesoc_sdram_trrdcon_count = 1'd0;
reg           basesoc_sdram_trrdcon_ready = 1'd0;
wire          basesoc_sdram_trrdcon_valid;
reg     [2:0] basesoc_sdram_twtrcon_count = 3'd0;
reg           basesoc_sdram_twtrcon_ready = 1'd0;
wire          basesoc_sdram_twtrcon_valid;
wire          basesoc_sdram_wants_refresh;
wire          basesoc_sdram_wants_zqcs;
wire          basesoc_sdram_write_available;
reg           basesoc_sdram_zqcs_executer_done = 1'd0;
reg           basesoc_sdram_zqcs_executer_start = 1'd0;
reg     [5:0] basesoc_sdram_zqcs_executer_trigger = 6'd0;
wire   [25:0] basesoc_sdram_zqcs_timer_count0;
reg    [25:0] basesoc_sdram_zqcs_timer_count1 = 26'd47999999;
wire          basesoc_sdram_zqcs_timer_done0;
wire          basesoc_sdram_zqcs_timer_done1;
wire          basesoc_sdram_zqcs_timer_wait;
reg           basesoc_serial_tx_rs232phytx_next_value1 = 1'd0;
reg           basesoc_serial_tx_rs232phytx_next_value_ce1 = 1'd0;
reg           basesoc_soc_rst = 1'd0;
reg           basesoc_tag_di_dirty = 1'd0;
wire   [20:0] basesoc_tag_di_tag;
wire          basesoc_tag_do_dirty;
wire   [20:0] basesoc_tag_do_tag;
wire    [8:0] basesoc_tag_port_adr;
wire   [21:0] basesoc_tag_port_dat_r;
wire   [21:0] basesoc_tag_port_dat_w;
reg           basesoc_tag_port_we = 1'd0;
reg           basesoc_timer_en_re = 1'd0;
reg           basesoc_timer_en_storage = 1'd0;
reg           basesoc_timer_enable_re = 1'd0;
reg           basesoc_timer_enable_storage = 1'd0;
wire          basesoc_timer_irq;
reg           basesoc_timer_load_re = 1'd0;
reg    [31:0] basesoc_timer_load_storage = 32'd0;
reg           basesoc_timer_pending_r = 1'd0;
reg           basesoc_timer_pending_re = 1'd0;
reg           basesoc_timer_pending_status = 1'd0;
wire          basesoc_timer_pending_we;
reg           basesoc_timer_reload_re = 1'd0;
reg    [31:0] basesoc_timer_reload_storage = 32'd0;
reg           basesoc_timer_status_re = 1'd0;
reg           basesoc_timer_status_status = 1'd0;
wire          basesoc_timer_status_we;
reg           basesoc_timer_update_value_re = 1'd0;
reg           basesoc_timer_update_value_storage = 1'd0;
reg    [31:0] basesoc_timer_value = 32'd0;
reg           basesoc_timer_value_re = 1'd0;
reg    [31:0] basesoc_timer_value_status = 32'd0;
wire          basesoc_timer_value_we;
wire          basesoc_timer_zero0;
wire          basesoc_timer_zero1;
wire          basesoc_timer_zero2;
reg           basesoc_timer_zero_clear = 1'd0;
reg           basesoc_timer_zero_pending = 1'd0;
wire          basesoc_timer_zero_status;
wire          basesoc_timer_zero_trigger;
reg           basesoc_timer_zero_trigger_d = 1'd0;
reg     [3:0] basesoc_tx_count = 4'd0;
reg     [3:0] basesoc_tx_count_rs232phytx_next_value0 = 4'd0;
reg           basesoc_tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg     [7:0] basesoc_tx_data = 8'd0;
reg     [7:0] basesoc_tx_data_rs232phytx_next_value2 = 8'd0;
reg           basesoc_tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg           basesoc_tx_enable = 1'd0;
reg    [31:0] basesoc_tx_phase = 32'd0;
wire          basesoc_tx_sink_first;
wire          basesoc_tx_sink_last;
wire    [7:0] basesoc_tx_sink_payload_data;
reg           basesoc_tx_sink_ready = 1'd0;
wire          basesoc_tx_sink_valid;
reg           basesoc_tx_tick = 1'd0;
reg           basesoc_uart_enable_re = 1'd0;
reg     [1:0] basesoc_uart_enable_storage = 2'd0;
wire          basesoc_uart_irq;
reg     [1:0] basesoc_uart_pending_r = 2'd0;
reg           basesoc_uart_pending_re = 1'd0;
reg     [1:0] basesoc_uart_pending_status = 2'd0;
wire          basesoc_uart_pending_we;
wire          basesoc_uart_rx0;
wire          basesoc_uart_rx1;
wire          basesoc_uart_rx2;
reg           basesoc_uart_rx_clear = 1'd0;
reg     [3:0] basesoc_uart_rx_fifo_consume = 4'd0;
wire          basesoc_uart_rx_fifo_do_read;
wire          basesoc_uart_rx_fifo_fifo_in_first;
wire          basesoc_uart_rx_fifo_fifo_in_last;
wire    [7:0] basesoc_uart_rx_fifo_fifo_in_payload_data;
wire          basesoc_uart_rx_fifo_fifo_out_first;
wire          basesoc_uart_rx_fifo_fifo_out_last;
wire    [7:0] basesoc_uart_rx_fifo_fifo_out_payload_data;
reg     [4:0] basesoc_uart_rx_fifo_level0 = 5'd0;
wire    [4:0] basesoc_uart_rx_fifo_level1;
reg     [3:0] basesoc_uart_rx_fifo_produce = 4'd0;
wire    [3:0] basesoc_uart_rx_fifo_rdport_adr;
wire    [9:0] basesoc_uart_rx_fifo_rdport_dat_r;
wire          basesoc_uart_rx_fifo_rdport_re;
wire          basesoc_uart_rx_fifo_re;
reg           basesoc_uart_rx_fifo_readable = 1'd0;
reg           basesoc_uart_rx_fifo_replace = 1'd0;
wire          basesoc_uart_rx_fifo_sink_first;
wire          basesoc_uart_rx_fifo_sink_last;
wire    [7:0] basesoc_uart_rx_fifo_sink_payload_data;
wire          basesoc_uart_rx_fifo_sink_ready;
wire          basesoc_uart_rx_fifo_sink_valid;
wire          basesoc_uart_rx_fifo_source_first;
wire          basesoc_uart_rx_fifo_source_last;
wire    [7:0] basesoc_uart_rx_fifo_source_payload_data;
wire          basesoc_uart_rx_fifo_source_ready;
wire          basesoc_uart_rx_fifo_source_valid;
wire    [9:0] basesoc_uart_rx_fifo_syncfifo_din;
wire    [9:0] basesoc_uart_rx_fifo_syncfifo_dout;
wire          basesoc_uart_rx_fifo_syncfifo_re;
wire          basesoc_uart_rx_fifo_syncfifo_readable;
wire          basesoc_uart_rx_fifo_syncfifo_we;
wire          basesoc_uart_rx_fifo_syncfifo_writable;
reg     [3:0] basesoc_uart_rx_fifo_wrport_adr = 4'd0;
wire    [9:0] basesoc_uart_rx_fifo_wrport_dat_r;
wire    [9:0] basesoc_uart_rx_fifo_wrport_dat_w;
wire          basesoc_uart_rx_fifo_wrport_we;
reg           basesoc_uart_rx_pending = 1'd0;
wire          basesoc_uart_rx_status;
wire          basesoc_uart_rx_trigger;
reg           basesoc_uart_rx_trigger_d = 1'd0;
reg           basesoc_uart_rxempty_re = 1'd0;
wire          basesoc_uart_rxempty_status;
wire          basesoc_uart_rxempty_we;
reg           basesoc_uart_rxfull_re = 1'd0;
wire          basesoc_uart_rxfull_status;
wire          basesoc_uart_rxfull_we;
wire    [7:0] basesoc_uart_rxtx_r;
reg           basesoc_uart_rxtx_re = 1'd0;
wire    [7:0] basesoc_uart_rxtx_w;
reg           basesoc_uart_rxtx_we = 1'd0;
reg           basesoc_uart_status_re = 1'd0;
reg     [1:0] basesoc_uart_status_status = 2'd0;
wire          basesoc_uart_status_we;
wire          basesoc_uart_tx0;
wire          basesoc_uart_tx1;
wire          basesoc_uart_tx2;
reg           basesoc_uart_tx_clear = 1'd0;
reg     [3:0] basesoc_uart_tx_fifo_consume = 4'd0;
wire          basesoc_uart_tx_fifo_do_read;
wire          basesoc_uart_tx_fifo_fifo_in_first;
wire          basesoc_uart_tx_fifo_fifo_in_last;
wire    [7:0] basesoc_uart_tx_fifo_fifo_in_payload_data;
wire          basesoc_uart_tx_fifo_fifo_out_first;
wire          basesoc_uart_tx_fifo_fifo_out_last;
wire    [7:0] basesoc_uart_tx_fifo_fifo_out_payload_data;
reg     [4:0] basesoc_uart_tx_fifo_level0 = 5'd0;
wire    [4:0] basesoc_uart_tx_fifo_level1;
reg     [3:0] basesoc_uart_tx_fifo_produce = 4'd0;
wire    [3:0] basesoc_uart_tx_fifo_rdport_adr;
wire    [9:0] basesoc_uart_tx_fifo_rdport_dat_r;
wire          basesoc_uart_tx_fifo_rdport_re;
wire          basesoc_uart_tx_fifo_re;
reg           basesoc_uart_tx_fifo_readable = 1'd0;
reg           basesoc_uart_tx_fifo_replace = 1'd0;
reg           basesoc_uart_tx_fifo_sink_first = 1'd0;
reg           basesoc_uart_tx_fifo_sink_last = 1'd0;
wire    [7:0] basesoc_uart_tx_fifo_sink_payload_data;
wire          basesoc_uart_tx_fifo_sink_ready;
wire          basesoc_uart_tx_fifo_sink_valid;
wire          basesoc_uart_tx_fifo_source_first;
wire          basesoc_uart_tx_fifo_source_last;
wire    [7:0] basesoc_uart_tx_fifo_source_payload_data;
wire          basesoc_uart_tx_fifo_source_ready;
wire          basesoc_uart_tx_fifo_source_valid;
wire    [9:0] basesoc_uart_tx_fifo_syncfifo_din;
wire    [9:0] basesoc_uart_tx_fifo_syncfifo_dout;
wire          basesoc_uart_tx_fifo_syncfifo_re;
wire          basesoc_uart_tx_fifo_syncfifo_readable;
wire          basesoc_uart_tx_fifo_syncfifo_we;
wire          basesoc_uart_tx_fifo_syncfifo_writable;
reg     [3:0] basesoc_uart_tx_fifo_wrport_adr = 4'd0;
wire    [9:0] basesoc_uart_tx_fifo_wrport_dat_r;
wire    [9:0] basesoc_uart_tx_fifo_wrport_dat_w;
wire          basesoc_uart_tx_fifo_wrport_we;
reg           basesoc_uart_tx_pending = 1'd0;
wire          basesoc_uart_tx_status;
wire          basesoc_uart_tx_trigger;
reg           basesoc_uart_tx_trigger_d = 1'd0;
reg           basesoc_uart_txempty_re = 1'd0;
wire          basesoc_uart_txempty_status;
wire          basesoc_uart_txempty_we;
reg           basesoc_uart_txfull_re = 1'd0;
wire          basesoc_uart_txfull_status;
wire          basesoc_uart_txfull_we;
wire          basesoc_uart_uart_sink_first;
wire          basesoc_uart_uart_sink_last;
wire    [7:0] basesoc_uart_uart_sink_payload_data;
wire          basesoc_uart_uart_sink_ready;
wire          basesoc_uart_uart_sink_valid;
wire          basesoc_uart_uart_source_first;
wire          basesoc_uart_uart_source_last;
wire    [7:0] basesoc_uart_uart_source_payload_data;
wire          basesoc_uart_uart_source_ready;
wire          basesoc_uart_uart_source_valid;
reg    [31:0] basesoc_vexriscv = 32'd0;
reg           basesoc_wb_sdram_ack = 1'd0;
wire   [29:0] basesoc_wb_sdram_adr;
wire    [1:0] basesoc_wb_sdram_bte;
wire    [2:0] basesoc_wb_sdram_cti;
wire          basesoc_wb_sdram_cyc;
reg    [31:0] basesoc_wb_sdram_dat_r = 32'd0;
wire   [31:0] basesoc_wb_sdram_dat_w;
reg           basesoc_wb_sdram_err = 1'd0;
wire    [3:0] basesoc_wb_sdram_sel;
wire          basesoc_wb_sdram_stb;
wire          basesoc_wb_sdram_we;
reg           basesoc_word_clr = 1'd0;
reg           basesoc_word_inc = 1'd0;
reg           basesoc_write_from_slave = 1'd0;
reg           buttons_re = 1'd0;
wire    [4:0] buttons_status;
wire          buttons_we;
reg    [19:0] count = 20'd1000000;
wire          crg_clkin;
wire          crg_clkout;
wire          crg_locked;
reg    [15:0] crg_por_count = 16'd65535;
wire          crg_por_done;
wire          crg_reset0;
wire          crg_reset1;
reg           crg_rst = 1'd0;
wire          crg_stop;
wire    [5:0] csr_bankarray_adr;
wire    [4:0] csr_bankarray_csrbank0_in_r;
reg           csr_bankarray_csrbank0_in_re = 1'd0;
wire    [4:0] csr_bankarray_csrbank0_in_w;
reg           csr_bankarray_csrbank0_in_we = 1'd0;
wire          csr_bankarray_csrbank0_sel;
wire   [31:0] csr_bankarray_csrbank1_bus_errors_r;
reg           csr_bankarray_csrbank1_bus_errors_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank1_bus_errors_w;
reg           csr_bankarray_csrbank1_bus_errors_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank1_reset0_r;
reg           csr_bankarray_csrbank1_reset0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank1_reset0_w;
reg           csr_bankarray_csrbank1_reset0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank1_scratch0_r;
reg           csr_bankarray_csrbank1_scratch0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank1_scratch0_w;
reg           csr_bankarray_csrbank1_scratch0_we = 1'd0;
wire          csr_bankarray_csrbank1_sel;
wire    [1:0] csr_bankarray_csrbank2_burstdet_seen_r;
reg           csr_bankarray_csrbank2_burstdet_seen_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank2_burstdet_seen_w;
reg           csr_bankarray_csrbank2_burstdet_seen_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank2_dly_sel0_r;
reg           csr_bankarray_csrbank2_dly_sel0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank2_dly_sel0_w;
reg           csr_bankarray_csrbank2_dly_sel0_we = 1'd0;
wire          csr_bankarray_csrbank2_sel;
wire    [5:0] csr_bankarray_csrbank3_out0_r;
reg           csr_bankarray_csrbank3_out0_re = 1'd0;
wire    [5:0] csr_bankarray_csrbank3_out0_w;
reg           csr_bankarray_csrbank3_out0_we = 1'd0;
wire          csr_bankarray_csrbank3_sel;
wire    [3:0] csr_bankarray_csrbank4_dfii_control0_r;
reg           csr_bankarray_csrbank4_dfii_control0_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank4_dfii_control0_w;
reg           csr_bankarray_csrbank4_dfii_control0_we = 1'd0;
wire   [12:0] csr_bankarray_csrbank4_dfii_pi0_address0_r;
reg           csr_bankarray_csrbank4_dfii_pi0_address0_re = 1'd0;
wire   [12:0] csr_bankarray_csrbank4_dfii_pi0_address0_w;
reg           csr_bankarray_csrbank4_dfii_pi0_address0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank4_dfii_pi0_baddress0_r;
reg           csr_bankarray_csrbank4_dfii_pi0_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank4_dfii_pi0_baddress0_w;
reg           csr_bankarray_csrbank4_dfii_pi0_baddress0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank4_dfii_pi0_command0_r;
reg           csr_bankarray_csrbank4_dfii_pi0_command0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank4_dfii_pi0_command0_w;
reg           csr_bankarray_csrbank4_dfii_pi0_command0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi0_rddata0_r;
reg           csr_bankarray_csrbank4_dfii_pi0_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi0_rddata0_w;
reg           csr_bankarray_csrbank4_dfii_pi0_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi0_rddata1_r;
reg           csr_bankarray_csrbank4_dfii_pi0_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi0_rddata1_w;
reg           csr_bankarray_csrbank4_dfii_pi0_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi0_wrdata0_r;
reg           csr_bankarray_csrbank4_dfii_pi0_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi0_wrdata0_w;
reg           csr_bankarray_csrbank4_dfii_pi0_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi0_wrdata1_r;
reg           csr_bankarray_csrbank4_dfii_pi0_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi0_wrdata1_w;
reg           csr_bankarray_csrbank4_dfii_pi0_wrdata1_we = 1'd0;
wire   [12:0] csr_bankarray_csrbank4_dfii_pi1_address0_r;
reg           csr_bankarray_csrbank4_dfii_pi1_address0_re = 1'd0;
wire   [12:0] csr_bankarray_csrbank4_dfii_pi1_address0_w;
reg           csr_bankarray_csrbank4_dfii_pi1_address0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank4_dfii_pi1_baddress0_r;
reg           csr_bankarray_csrbank4_dfii_pi1_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank4_dfii_pi1_baddress0_w;
reg           csr_bankarray_csrbank4_dfii_pi1_baddress0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank4_dfii_pi1_command0_r;
reg           csr_bankarray_csrbank4_dfii_pi1_command0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank4_dfii_pi1_command0_w;
reg           csr_bankarray_csrbank4_dfii_pi1_command0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi1_rddata0_r;
reg           csr_bankarray_csrbank4_dfii_pi1_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi1_rddata0_w;
reg           csr_bankarray_csrbank4_dfii_pi1_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi1_rddata1_r;
reg           csr_bankarray_csrbank4_dfii_pi1_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi1_rddata1_w;
reg           csr_bankarray_csrbank4_dfii_pi1_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi1_wrdata0_r;
reg           csr_bankarray_csrbank4_dfii_pi1_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi1_wrdata0_w;
reg           csr_bankarray_csrbank4_dfii_pi1_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi1_wrdata1_r;
reg           csr_bankarray_csrbank4_dfii_pi1_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dfii_pi1_wrdata1_w;
reg           csr_bankarray_csrbank4_dfii_pi1_wrdata1_we = 1'd0;
wire          csr_bankarray_csrbank4_sel;
wire          csr_bankarray_csrbank5_en0_r;
reg           csr_bankarray_csrbank5_en0_re = 1'd0;
wire          csr_bankarray_csrbank5_en0_w;
reg           csr_bankarray_csrbank5_en0_we = 1'd0;
wire          csr_bankarray_csrbank5_ev_enable0_r;
reg           csr_bankarray_csrbank5_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank5_ev_enable0_w;
reg           csr_bankarray_csrbank5_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank5_ev_pending_r;
reg           csr_bankarray_csrbank5_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank5_ev_pending_w;
reg           csr_bankarray_csrbank5_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank5_ev_status_r;
reg           csr_bankarray_csrbank5_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank5_ev_status_w;
reg           csr_bankarray_csrbank5_ev_status_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_load0_r;
reg           csr_bankarray_csrbank5_load0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_load0_w;
reg           csr_bankarray_csrbank5_load0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_reload0_r;
reg           csr_bankarray_csrbank5_reload0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_reload0_w;
reg           csr_bankarray_csrbank5_reload0_we = 1'd0;
wire          csr_bankarray_csrbank5_sel;
wire          csr_bankarray_csrbank5_update_value0_r;
reg           csr_bankarray_csrbank5_update_value0_re = 1'd0;
wire          csr_bankarray_csrbank5_update_value0_w;
reg           csr_bankarray_csrbank5_update_value0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_value_r;
reg           csr_bankarray_csrbank5_value_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_value_w;
reg           csr_bankarray_csrbank5_value_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank6_ev_enable0_r;
reg           csr_bankarray_csrbank6_ev_enable0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank6_ev_enable0_w;
reg           csr_bankarray_csrbank6_ev_enable0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank6_ev_pending_r;
reg           csr_bankarray_csrbank6_ev_pending_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank6_ev_pending_w;
reg           csr_bankarray_csrbank6_ev_pending_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank6_ev_status_r;
reg           csr_bankarray_csrbank6_ev_status_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank6_ev_status_w;
reg           csr_bankarray_csrbank6_ev_status_we = 1'd0;
wire          csr_bankarray_csrbank6_rxempty_r;
reg           csr_bankarray_csrbank6_rxempty_re = 1'd0;
wire          csr_bankarray_csrbank6_rxempty_w;
reg           csr_bankarray_csrbank6_rxempty_we = 1'd0;
wire          csr_bankarray_csrbank6_rxfull_r;
reg           csr_bankarray_csrbank6_rxfull_re = 1'd0;
wire          csr_bankarray_csrbank6_rxfull_w;
reg           csr_bankarray_csrbank6_rxfull_we = 1'd0;
wire          csr_bankarray_csrbank6_sel;
wire          csr_bankarray_csrbank6_txempty_r;
reg           csr_bankarray_csrbank6_txempty_re = 1'd0;
wire          csr_bankarray_csrbank6_txempty_w;
reg           csr_bankarray_csrbank6_txempty_we = 1'd0;
wire          csr_bankarray_csrbank6_txfull_r;
reg           csr_bankarray_csrbank6_txfull_re = 1'd0;
wire          csr_bankarray_csrbank6_txfull_w;
reg           csr_bankarray_csrbank6_txfull_we = 1'd0;
wire    [7:0] csr_bankarray_dat_r;
wire   [13:0] csr_bankarray_interface0_bank_bus_adr;
reg    [31:0] csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface0_bank_bus_dat_w;
wire          csr_bankarray_interface0_bank_bus_re;
wire          csr_bankarray_interface0_bank_bus_we;
wire   [13:0] csr_bankarray_interface1_bank_bus_adr;
reg    [31:0] csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface1_bank_bus_dat_w;
wire          csr_bankarray_interface1_bank_bus_re;
wire          csr_bankarray_interface1_bank_bus_we;
wire   [13:0] csr_bankarray_interface2_bank_bus_adr;
reg    [31:0] csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface2_bank_bus_dat_w;
wire          csr_bankarray_interface2_bank_bus_re;
wire          csr_bankarray_interface2_bank_bus_we;
wire   [13:0] csr_bankarray_interface3_bank_bus_adr;
reg    [31:0] csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface3_bank_bus_dat_w;
wire          csr_bankarray_interface3_bank_bus_re;
wire          csr_bankarray_interface3_bank_bus_we;
wire   [13:0] csr_bankarray_interface4_bank_bus_adr;
reg    [31:0] csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface4_bank_bus_dat_w;
wire          csr_bankarray_interface4_bank_bus_re;
wire          csr_bankarray_interface4_bank_bus_we;
wire   [13:0] csr_bankarray_interface5_bank_bus_adr;
reg    [31:0] csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface5_bank_bus_dat_w;
wire          csr_bankarray_interface5_bank_bus_re;
wire          csr_bankarray_interface5_bank_bus_we;
wire   [13:0] csr_bankarray_interface6_bank_bus_adr;
reg    [31:0] csr_bankarray_interface6_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface6_bank_bus_dat_w;
wire          csr_bankarray_interface6_bank_bus_re;
wire          csr_bankarray_interface6_bank_bus_we;
wire          csr_bankarray_sel;
reg           csr_bankarray_sel_r = 1'd0;
wire   [13:0] csr_bankarray_sram_bus_adr;
reg    [31:0] csr_bankarray_sram_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_sram_bus_dat_w;
wire          csr_bankarray_sram_bus_re;
wire          csr_bankarray_sram_bus_we;
wire   [13:0] csr_interconnect_adr;
wire   [31:0] csr_interconnect_dat_r;
wire   [31:0] csr_interconnect_dat_w;
wire          csr_interconnect_re;
wire          csr_interconnect_we;
wire          done;
reg           error = 1'd0;
reg     [1:0] fullmemorywe_next_state = 2'd0;
reg     [1:0] fullmemorywe_state = 2'd0;
reg           grant = 1'd0;
wire          gw2apll0;
wire          gw2apll1;
wire          gw2apll2;
wire          gw2ddrphy0;
wire          gw2ddrphy1;
wire          gw2ddrphy10;
wire          gw2ddrphy11;
wire          gw2ddrphy12;
wire          gw2ddrphy13;
wire          gw2ddrphy14;
wire          gw2ddrphy15;
wire          gw2ddrphy16;
wire          gw2ddrphy17;
wire          gw2ddrphy18;
wire          gw2ddrphy19;
wire          gw2ddrphy2;
wire          gw2ddrphy20;
wire          gw2ddrphy21;
wire          gw2ddrphy22;
wire          gw2ddrphy23;
wire          gw2ddrphy24;
wire          gw2ddrphy25;
wire          gw2ddrphy26;
wire          gw2ddrphy27;
wire          gw2ddrphy28;
wire          gw2ddrphy29;
wire          gw2ddrphy3;
wire          gw2ddrphy30;
wire          gw2ddrphy31;
wire          gw2ddrphy32;
wire          gw2ddrphy33;
wire          gw2ddrphy34;
wire          gw2ddrphy35;
wire          gw2ddrphy36;
wire          gw2ddrphy37;
wire          gw2ddrphy38;
wire          gw2ddrphy39;
wire          gw2ddrphy4;
wire          gw2ddrphy40;
wire          gw2ddrphy41;
wire          gw2ddrphy42;
wire          gw2ddrphy43;
wire          gw2ddrphy44;
wire          gw2ddrphy45;
wire          gw2ddrphy46;
wire          gw2ddrphy47;
wire          gw2ddrphy48;
wire          gw2ddrphy49;
wire          gw2ddrphy5;
wire          gw2ddrphy50;
wire          gw2ddrphy51;
wire          gw2ddrphy52;
wire          gw2ddrphy53;
wire          gw2ddrphy54;
wire          gw2ddrphy55;
wire          gw2ddrphy6;
wire          gw2ddrphy7;
wire          gw2ddrphy8;
wire          gw2ddrphy9;
wire    [3:0] gw2ddrphy_bitslip0_i;
reg     [3:0] gw2ddrphy_bitslip0_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip0_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip0_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip10_i;
reg     [3:0] gw2ddrphy_bitslip10_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip10_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip10_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip11_i;
reg     [3:0] gw2ddrphy_bitslip11_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip11_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip11_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip12_i;
reg     [3:0] gw2ddrphy_bitslip12_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip12_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip12_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip13_i;
reg     [3:0] gw2ddrphy_bitslip13_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip13_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip13_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip14_i;
reg     [3:0] gw2ddrphy_bitslip14_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip14_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip14_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip15_i;
reg     [3:0] gw2ddrphy_bitslip15_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip15_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip15_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip1_i;
reg     [3:0] gw2ddrphy_bitslip1_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip1_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip1_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip2_i;
reg     [3:0] gw2ddrphy_bitslip2_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip2_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip2_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip3_i;
reg     [3:0] gw2ddrphy_bitslip3_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip3_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip3_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip4_i;
reg     [3:0] gw2ddrphy_bitslip4_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip4_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip4_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip5_i;
reg     [3:0] gw2ddrphy_bitslip5_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip5_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip5_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip6_i;
reg     [3:0] gw2ddrphy_bitslip6_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip6_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip6_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip7_i;
reg     [3:0] gw2ddrphy_bitslip7_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip7_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip7_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip8_i;
reg     [3:0] gw2ddrphy_bitslip8_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip8_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip8_value = 2'd0;
wire    [3:0] gw2ddrphy_bitslip9_i;
reg     [3:0] gw2ddrphy_bitslip9_o = 4'd0;
reg     [7:0] gw2ddrphy_bitslip9_r = 8'd0;
reg     [1:0] gw2ddrphy_bitslip9_value = 2'd0;
wire          gw2ddrphy_bl8_chunk;
wire          gw2ddrphy_burstdet0;
wire          gw2ddrphy_burstdet1;
wire          gw2ddrphy_burstdet_clr_r;
reg           gw2ddrphy_burstdet_clr_re = 1'd0;
reg           gw2ddrphy_burstdet_clr_w = 1'd0;
reg           gw2ddrphy_burstdet_clr_we = 1'd0;
reg           gw2ddrphy_burstdet_d0 = 1'd0;
reg           gw2ddrphy_burstdet_d1 = 1'd0;
reg           gw2ddrphy_burstdet_seen_re = 1'd0;
reg     [1:0] gw2ddrphy_burstdet_seen_status = 2'd0;
wire          gw2ddrphy_burstdet_seen_we;
wire    [1:0] gw2ddrphy_datavalid;
wire    [7:0] gw2ddrphy_delay0;
wire    [7:0] gw2ddrphy_delay1;
wire          gw2ddrphy_dfi_p0_act_n;
wire   [13:0] gw2ddrphy_dfi_p0_address;
wire    [2:0] gw2ddrphy_dfi_p0_bank;
wire          gw2ddrphy_dfi_p0_cas_n;
wire          gw2ddrphy_dfi_p0_cke;
wire          gw2ddrphy_dfi_p0_cs_n;
wire          gw2ddrphy_dfi_p0_odt;
wire          gw2ddrphy_dfi_p0_ras_n;
reg    [63:0] gw2ddrphy_dfi_p0_rddata = 64'd0;
wire          gw2ddrphy_dfi_p0_rddata_en;
wire          gw2ddrphy_dfi_p0_rddata_valid;
wire          gw2ddrphy_dfi_p0_reset_n;
wire          gw2ddrphy_dfi_p0_we_n;
wire   [63:0] gw2ddrphy_dfi_p0_wrdata;
wire          gw2ddrphy_dfi_p0_wrdata_en;
wire    [7:0] gw2ddrphy_dfi_p0_wrdata_mask;
wire          gw2ddrphy_dfi_p1_act_n;
wire   [13:0] gw2ddrphy_dfi_p1_address;
wire    [2:0] gw2ddrphy_dfi_p1_bank;
wire          gw2ddrphy_dfi_p1_cas_n;
wire          gw2ddrphy_dfi_p1_cke;
wire          gw2ddrphy_dfi_p1_cs_n;
wire          gw2ddrphy_dfi_p1_odt;
wire          gw2ddrphy_dfi_p1_ras_n;
reg    [63:0] gw2ddrphy_dfi_p1_rddata = 64'd0;
wire          gw2ddrphy_dfi_p1_rddata_en;
wire          gw2ddrphy_dfi_p1_rddata_valid;
wire          gw2ddrphy_dfi_p1_reset_n;
wire          gw2ddrphy_dfi_p1_we_n;
wire   [63:0] gw2ddrphy_dfi_p1_wrdata;
wire          gw2ddrphy_dfi_p1_wrdata_en;
wire    [7:0] gw2ddrphy_dfi_p1_wrdata_mask;
reg           gw2ddrphy_dly_sel_re = 1'd0;
reg     [1:0] gw2ddrphy_dly_sel_storage = 2'd0;
reg     [7:0] gw2ddrphy_dm_o_data0 = 8'd0;
reg     [7:0] gw2ddrphy_dm_o_data1 = 8'd0;
reg     [7:0] gw2ddrphy_dm_o_data_d0 = 8'd0;
reg     [7:0] gw2ddrphy_dm_o_data_d1 = 8'd0;
reg     [3:0] gw2ddrphy_dm_o_data_muxed0 = 4'd0;
reg     [3:0] gw2ddrphy_dm_o_data_muxed1 = 4'd0;
wire          gw2ddrphy_dq_i0;
wire          gw2ddrphy_dq_i1;
wire          gw2ddrphy_dq_i10;
wire          gw2ddrphy_dq_i11;
wire          gw2ddrphy_dq_i12;
wire          gw2ddrphy_dq_i13;
wire          gw2ddrphy_dq_i14;
wire          gw2ddrphy_dq_i15;
wire          gw2ddrphy_dq_i2;
wire          gw2ddrphy_dq_i3;
wire          gw2ddrphy_dq_i4;
wire          gw2ddrphy_dq_i5;
wire          gw2ddrphy_dq_i6;
wire          gw2ddrphy_dq_i7;
wire          gw2ddrphy_dq_i8;
wire          gw2ddrphy_dq_i9;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d0 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d1 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d10 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d11 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d12 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d13 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d14 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d15 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d2 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d3 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d4 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d5 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d6 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d7 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d8 = 4'd0;
reg     [3:0] gw2ddrphy_dq_i_bitslip_o_d9 = 4'd0;
wire    [7:0] gw2ddrphy_dq_i_data0;
wire    [7:0] gw2ddrphy_dq_i_data1;
wire    [7:0] gw2ddrphy_dq_i_data10;
wire    [7:0] gw2ddrphy_dq_i_data11;
wire    [7:0] gw2ddrphy_dq_i_data12;
wire    [7:0] gw2ddrphy_dq_i_data13;
wire    [7:0] gw2ddrphy_dq_i_data14;
wire    [7:0] gw2ddrphy_dq_i_data15;
wire    [7:0] gw2ddrphy_dq_i_data2;
wire    [7:0] gw2ddrphy_dq_i_data3;
wire    [7:0] gw2ddrphy_dq_i_data4;
wire    [7:0] gw2ddrphy_dq_i_data5;
wire    [7:0] gw2ddrphy_dq_i_data6;
wire    [7:0] gw2ddrphy_dq_i_data7;
wire    [7:0] gw2ddrphy_dq_i_data8;
wire    [7:0] gw2ddrphy_dq_i_data9;
wire          gw2ddrphy_dq_o0;
wire          gw2ddrphy_dq_o1;
wire          gw2ddrphy_dq_o10;
wire          gw2ddrphy_dq_o11;
wire          gw2ddrphy_dq_o12;
wire          gw2ddrphy_dq_o13;
wire          gw2ddrphy_dq_o14;
wire          gw2ddrphy_dq_o15;
wire          gw2ddrphy_dq_o2;
wire          gw2ddrphy_dq_o3;
wire          gw2ddrphy_dq_o4;
wire          gw2ddrphy_dq_o5;
wire          gw2ddrphy_dq_o6;
wire          gw2ddrphy_dq_o7;
wire          gw2ddrphy_dq_o8;
wire          gw2ddrphy_dq_o9;
reg     [7:0] gw2ddrphy_dq_o_data0 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data1 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data10 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data11 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data12 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data13 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data14 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data15 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data2 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data3 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data4 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data5 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data6 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data7 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data8 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data9 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d0 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d1 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d10 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d11 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d12 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d13 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d14 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d15 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d2 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d3 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d4 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d5 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d6 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d7 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d8 = 8'd0;
reg     [7:0] gw2ddrphy_dq_o_data_d9 = 8'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed0 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed1 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed10 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed11 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed12 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed13 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed14 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed15 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed2 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed3 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed4 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed5 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed6 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed7 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed8 = 4'd0;
reg     [3:0] gw2ddrphy_dq_o_data_muxed9 = 4'd0;
wire          gw2ddrphy_dq_o_oen0;
wire          gw2ddrphy_dq_o_oen1;
wire          gw2ddrphy_dq_o_oen10;
wire          gw2ddrphy_dq_o_oen11;
wire          gw2ddrphy_dq_o_oen12;
wire          gw2ddrphy_dq_o_oen13;
wire          gw2ddrphy_dq_o_oen14;
wire          gw2ddrphy_dq_o_oen15;
wire          gw2ddrphy_dq_o_oen2;
wire          gw2ddrphy_dq_o_oen3;
wire          gw2ddrphy_dq_o_oen4;
wire          gw2ddrphy_dq_o_oen5;
wire          gw2ddrphy_dq_o_oen6;
wire          gw2ddrphy_dq_o_oen7;
wire          gw2ddrphy_dq_o_oen8;
wire          gw2ddrphy_dq_o_oen9;
wire          gw2ddrphy_dq_oe;
wire          gw2ddrphy_dqs_i0;
wire          gw2ddrphy_dqs_i1;
wire          gw2ddrphy_dqs_o0;
wire          gw2ddrphy_dqs_o1;
wire          gw2ddrphy_dqs_o_oen0;
wire          gw2ddrphy_dqs_o_oen1;
wire          gw2ddrphy_dqs_oe;
wire          gw2ddrphy_dqs_postamble;
wire          gw2ddrphy_dqs_preamble;
wire          gw2ddrphy_dqs_re;
wire          gw2ddrphy_dqsr900;
wire          gw2ddrphy_dqsr901;
wire          gw2ddrphy_dqsw0;
wire          gw2ddrphy_dqsw1;
wire          gw2ddrphy_dqsw2700;
wire          gw2ddrphy_dqsw2701;
reg           gw2ddrphy_freeze = 1'd0;
wire          gw2ddrphy_lock0;
wire          gw2ddrphy_lock1;
reg           gw2ddrphy_lock_d = 1'd0;
wire          gw2ddrphy_new_lock;
wire          gw2ddrphy_pad_clk;
wire          gw2ddrphy_pad_oddrx2f0;
wire          gw2ddrphy_pad_oddrx2f1;
wire          gw2ddrphy_pad_oddrx2f10;
wire          gw2ddrphy_pad_oddrx2f11;
wire          gw2ddrphy_pad_oddrx2f12;
wire          gw2ddrphy_pad_oddrx2f13;
wire          gw2ddrphy_pad_oddrx2f14;
wire          gw2ddrphy_pad_oddrx2f15;
wire          gw2ddrphy_pad_oddrx2f16;
wire          gw2ddrphy_pad_oddrx2f17;
wire          gw2ddrphy_pad_oddrx2f18;
wire          gw2ddrphy_pad_oddrx2f19;
wire          gw2ddrphy_pad_oddrx2f2;
wire          gw2ddrphy_pad_oddrx2f20;
wire          gw2ddrphy_pad_oddrx2f21;
wire          gw2ddrphy_pad_oddrx2f22;
wire          gw2ddrphy_pad_oddrx2f23;
wire          gw2ddrphy_pad_oddrx2f24;
wire          gw2ddrphy_pad_oddrx2f3;
wire          gw2ddrphy_pad_oddrx2f4;
wire          gw2ddrphy_pad_oddrx2f5;
wire          gw2ddrphy_pad_oddrx2f6;
wire          gw2ddrphy_pad_oddrx2f7;
wire          gw2ddrphy_pad_oddrx2f8;
wire          gw2ddrphy_pad_oddrx2f9;
wire          gw2ddrphy_pause0;
reg           gw2ddrphy_pause1 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline0 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline1 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline10 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline11 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline2 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline3 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline4 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline5 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline6 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline7 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline8 = 1'd0;
reg           gw2ddrphy_rddata_en_tappeddelayline9 = 1'd0;
reg     [2:0] gw2ddrphy_rdly0 = 3'd0;
reg     [2:0] gw2ddrphy_rdly1 = 3'd0;
wire          gw2ddrphy_rdly_dq_bitslip_r;
reg           gw2ddrphy_rdly_dq_bitslip_re = 1'd0;
wire          gw2ddrphy_rdly_dq_bitslip_rst_r;
reg           gw2ddrphy_rdly_dq_bitslip_rst_re = 1'd0;
reg           gw2ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
reg           gw2ddrphy_rdly_dq_bitslip_rst_we = 1'd0;
reg           gw2ddrphy_rdly_dq_bitslip_w = 1'd0;
reg           gw2ddrphy_rdly_dq_bitslip_we = 1'd0;
wire          gw2ddrphy_rdly_dq_inc_r;
reg           gw2ddrphy_rdly_dq_inc_re = 1'd0;
reg           gw2ddrphy_rdly_dq_inc_w = 1'd0;
reg           gw2ddrphy_rdly_dq_inc_we = 1'd0;
wire          gw2ddrphy_rdly_dq_rst_r;
reg           gw2ddrphy_rdly_dq_rst_re = 1'd0;
reg           gw2ddrphy_rdly_dq_rst_w = 1'd0;
reg           gw2ddrphy_rdly_dq_rst_we = 1'd0;
wire    [2:0] gw2ddrphy_rdpntr0;
wire    [2:0] gw2ddrphy_rdpntr1;
wire          gw2ddrphy_reset0;
reg           gw2ddrphy_reset1 = 1'd0;
wire          gw2ddrphy_stop0;
reg           gw2ddrphy_stop1 = 1'd0;
reg     [6:0] gw2ddrphy_trigger = 7'd0;
reg           gw2ddrphy_update = 1'd0;
reg           gw2ddrphy_wrdata_en_tappeddelayline0 = 1'd0;
reg           gw2ddrphy_wrdata_en_tappeddelayline1 = 1'd0;
reg           gw2ddrphy_wrdata_en_tappeddelayline2 = 1'd0;
reg           gw2ddrphy_wrdata_en_tappeddelayline3 = 1'd0;
reg           gw2ddrphy_wrdata_en_tappeddelayline4 = 1'd0;
reg           gw2ddrphy_wrdata_en_tappeddelayline5 = 1'd0;
wire    [2:0] gw2ddrphy_wrpntr0;
wire    [2:0] gw2ddrphy_wrpntr1;
wire          init_clk;
wire          init_rst;
reg           interface0_ack = 1'd0;
wire   [29:0] interface0_adr;
wire    [1:0] interface0_bte;
wire    [2:0] interface0_cti;
wire          interface0_cyc;
reg    [31:0] interface0_dat_r = 32'd0;
wire   [31:0] interface0_dat_w;
reg           interface0_err = 1'd0;
wire    [3:0] interface0_sel;
wire          interface0_stb;
wire          interface0_we;
reg    [13:0] interface1_adr = 14'd0;
reg    [13:0] interface1_adr_wishbone2csr_next_value1 = 14'd0;
reg           interface1_adr_wishbone2csr_next_value_ce1 = 1'd0;
wire   [31:0] interface1_dat_r;
reg    [31:0] interface1_dat_w = 32'd0;
reg    [31:0] interface1_dat_w_wishbone2csr_next_value0 = 32'd0;
reg           interface1_dat_w_wishbone2csr_next_value_ce0 = 1'd0;
reg           interface1_re = 1'd0;
reg           interface1_re_wishbone2csr_next_value2 = 1'd0;
reg           interface1_re_wishbone2csr_next_value_ce2 = 1'd0;
reg           interface1_we = 1'd0;
reg           interface1_we_wishbone2csr_next_value3 = 1'd0;
reg           interface1_we_wishbone2csr_next_value_ce3 = 1'd0;
reg     [5:0] leds_chaser = 6'd0;
reg    [21:0] leds_count = 22'd4000000;
wire          leds_done;
reg     [5:0] leds_leds = 6'd0;
reg           leds_mode = 1'd0;
reg           leds_re = 1'd0;
reg     [5:0] leds_storage = 6'd0;
wire          leds_wait;
reg     [1:0] litedramwishbone2native_next_state = 2'd0;
reg     [1:0] litedramwishbone2native_state = 2'd0;
reg           locked0 = 1'd0;
reg           locked1 = 1'd0;
reg           locked2 = 1'd0;
reg           locked3 = 1'd0;
reg           locked4 = 1'd0;
reg           locked5 = 1'd0;
reg           locked6 = 1'd0;
reg           locked7 = 1'd0;
reg     [3:0] multiplexer_next_state = 4'd0;
reg     [3:0] multiplexer_state = 4'd0;
reg           multiregimpl00 = 1'd0;
reg           multiregimpl01 = 1'd0;
reg           multiregimpl10 = 1'd0;
reg           multiregimpl11 = 1'd0;
reg     [4:0] multiregimpl20 = 5'd0;
reg     [4:0] multiregimpl21 = 5'd0;
reg           new_master_rdata_valid0 = 1'd0;
reg           new_master_rdata_valid1 = 1'd0;
reg           new_master_rdata_valid10 = 1'd0;
reg           new_master_rdata_valid11 = 1'd0;
reg           new_master_rdata_valid12 = 1'd0;
reg           new_master_rdata_valid2 = 1'd0;
reg           new_master_rdata_valid3 = 1'd0;
reg           new_master_rdata_valid4 = 1'd0;
reg           new_master_rdata_valid5 = 1'd0;
reg           new_master_rdata_valid6 = 1'd0;
reg           new_master_rdata_valid7 = 1'd0;
reg           new_master_rdata_valid8 = 1'd0;
reg           new_master_rdata_valid9 = 1'd0;
reg           new_master_wdata_ready0 = 1'd0;
reg           new_master_wdata_ready1 = 1'd0;
reg           new_master_wdata_ready2 = 1'd0;
wire          por_clk;
reg           por_rst = 1'd0;
reg     [1:0] refresher_next_state = 2'd0;
reg     [1:0] refresher_state = 2'd0;
wire    [1:0] request;
reg    [29:0] rhs_self0 = 30'd0;
reg    [31:0] rhs_self1 = 32'd0;
reg     [2:0] rhs_self10 = 3'd0;
reg           rhs_self11 = 1'd0;
reg           rhs_self12 = 1'd0;
reg           rhs_self13 = 1'd0;
reg           rhs_self14 = 1'd0;
reg    [12:0] rhs_self15 = 13'd0;
reg     [2:0] rhs_self16 = 3'd0;
reg           rhs_self17 = 1'd0;
reg           rhs_self18 = 1'd0;
reg           rhs_self19 = 1'd0;
reg     [3:0] rhs_self2 = 4'd0;
reg    [19:0] rhs_self20 = 20'd0;
reg           rhs_self21 = 1'd0;
reg           rhs_self22 = 1'd0;
reg    [19:0] rhs_self23 = 20'd0;
reg           rhs_self24 = 1'd0;
reg           rhs_self25 = 1'd0;
reg    [19:0] rhs_self26 = 20'd0;
reg           rhs_self27 = 1'd0;
reg           rhs_self28 = 1'd0;
reg    [19:0] rhs_self29 = 20'd0;
reg           rhs_self3 = 1'd0;
reg           rhs_self30 = 1'd0;
reg           rhs_self31 = 1'd0;
reg    [19:0] rhs_self32 = 20'd0;
reg           rhs_self33 = 1'd0;
reg           rhs_self34 = 1'd0;
reg    [19:0] rhs_self35 = 20'd0;
reg           rhs_self36 = 1'd0;
reg           rhs_self37 = 1'd0;
reg    [19:0] rhs_self38 = 20'd0;
reg           rhs_self39 = 1'd0;
reg           rhs_self4 = 1'd0;
reg           rhs_self40 = 1'd0;
reg    [19:0] rhs_self41 = 20'd0;
reg           rhs_self42 = 1'd0;
reg           rhs_self43 = 1'd0;
reg           rhs_self5 = 1'd0;
reg     [2:0] rhs_self6 = 3'd0;
reg     [1:0] rhs_self7 = 2'd0;
reg           rhs_self8 = 1'd0;
reg    [12:0] rhs_self9 = 13'd0;
wire          roundrobin0_ce;
wire          roundrobin0_grant;
wire          roundrobin0_request;
wire          roundrobin1_ce;
wire          roundrobin1_grant;
wire          roundrobin1_request;
wire          roundrobin2_ce;
wire          roundrobin2_grant;
wire          roundrobin2_request;
wire          roundrobin3_ce;
wire          roundrobin3_grant;
wire          roundrobin3_request;
wire          roundrobin4_ce;
wire          roundrobin4_grant;
wire          roundrobin4_request;
wire          roundrobin5_ce;
wire          roundrobin5_grant;
wire          roundrobin5_request;
wire          roundrobin6_ce;
wire          roundrobin6_grant;
wire          roundrobin6_request;
wire          roundrobin7_ce;
wire          roundrobin7_grant;
wire          roundrobin7_request;
reg           rs232phyrx_next_state = 1'd0;
reg           rs232phyrx_state = 1'd0;
reg           rs232phytx_next_state = 1'd0;
reg           rs232phytx_state = 1'd0;
wire          rst10;
wire          rst11;
reg     [2:0] self0 = 3'd0;
reg    [12:0] self1 = 13'd0;
reg           self10 = 1'd0;
reg           self11 = 1'd0;
reg           self12 = 1'd0;
reg           self13 = 1'd0;
reg           self2 = 1'd0;
reg           self3 = 1'd0;
reg           self4 = 1'd0;
reg           self5 = 1'd0;
reg           self6 = 1'd0;
reg     [2:0] self7 = 3'd0;
reg    [12:0] self8 = 13'd0;
reg           self9 = 1'd0;
reg           shared_ack = 1'd0;
wire   [29:0] shared_adr;
wire    [1:0] shared_bte;
wire    [2:0] shared_cti;
wire          shared_cyc;
reg    [31:0] shared_dat_r = 32'd0;
wire   [31:0] shared_dat_w;
wire          shared_err;
wire    [3:0] shared_sel;
wire          shared_stb;
wire          shared_we;
reg     [3:0] slave_sel = 4'd0;
reg     [3:0] slave_sel_r = 4'd0;
wire          sys2x_clk;
wire          sys2x_i_clk;
wire          sys2x_i_rst;
wire          sys_clk;
wire          sys_rst;
reg           t_self0 = 1'd0;
reg           t_self1 = 1'd0;
reg           t_self2 = 1'd0;
reg           t_self3 = 1'd0;
reg           t_self4 = 1'd0;
reg           t_self5 = 1'd0;
wire          wait_1;
reg     [1:0] wishbone2csr_next_state = 2'd0;
reg     [1:0] wishbone2csr_state = 2'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign basesoc_reset = (basesoc_soc_rst | basesoc_cpu_rst);
assign crg_stop = gw2ddrphy_stop0;
assign crg_reset0 = gw2ddrphy_reset0;
always @(*) begin
    crg_rst <= 1'd0;
    if (basesoc_soc_rst) begin
        crg_rst <= 1'd1;
    end
end
assign basesoc_bus_error = error;
always @(*) begin
    basesoc_interrupt <= 32'd0;
    basesoc_interrupt[1] <= basesoc_timer_irq;
    basesoc_interrupt[0] <= basesoc_uart_irq;
end
assign por_clk = clk27;
assign crg_por_done = (crg_por_count == 1'd0);
assign crg_reset1 = (~crg_por_done);
assign init_clk = clk27;
assign init_rst = crg_reset1;
assign crg_clkin = clk27;
assign sys2x_i_clk = crg_clkout;
assign shared_adr = rhs_self0;
assign shared_dat_w = rhs_self1;
assign shared_sel = rhs_self2;
assign shared_cyc = rhs_self3;
assign shared_stb = rhs_self4;
assign shared_we = rhs_self5;
assign shared_cti = rhs_self6;
assign shared_bte = rhs_self7;
assign basesoc_ibus_dat_r = shared_dat_r;
assign basesoc_dbus_dat_r = shared_dat_r;
assign basesoc_ibus_ack = (shared_ack & (grant == 1'd0));
assign basesoc_dbus_ack = (shared_ack & (grant == 1'd1));
assign basesoc_ibus_err = (shared_err & (grant == 1'd0));
assign basesoc_dbus_err = (shared_err & (grant == 1'd1));
assign request = {basesoc_dbus_cyc, basesoc_ibus_cyc};
always @(*) begin
    slave_sel <= 4'd0;
    slave_sel[0] <= (shared_adr[29:15] == 1'd0);
    slave_sel[1] <= (shared_adr[29:11] == 16'd32768);
    slave_sel[2] <= (shared_adr[29:25] == 4'd8);
    slave_sel[3] <= (shared_adr[29:14] == 16'd61440);
end
assign basesoc_basesoc_ram_bus_adr = shared_adr;
assign basesoc_basesoc_ram_bus_dat_w = shared_dat_w;
assign basesoc_basesoc_ram_bus_sel = shared_sel;
assign basesoc_basesoc_ram_bus_stb = shared_stb;
assign basesoc_basesoc_ram_bus_we = shared_we;
assign basesoc_basesoc_ram_bus_cti = shared_cti;
assign basesoc_basesoc_ram_bus_bte = shared_bte;
assign basesoc_ram_bus_ram_bus_adr = shared_adr;
assign basesoc_ram_bus_ram_bus_dat_w = shared_dat_w;
assign basesoc_ram_bus_ram_bus_sel = shared_sel;
assign basesoc_ram_bus_ram_bus_stb = shared_stb;
assign basesoc_ram_bus_ram_bus_we = shared_we;
assign basesoc_ram_bus_ram_bus_cti = shared_cti;
assign basesoc_ram_bus_ram_bus_bte = shared_bte;
assign basesoc_wb_sdram_adr = shared_adr;
assign basesoc_wb_sdram_dat_w = shared_dat_w;
assign basesoc_wb_sdram_sel = shared_sel;
assign basesoc_wb_sdram_stb = shared_stb;
assign basesoc_wb_sdram_we = shared_we;
assign basesoc_wb_sdram_cti = shared_cti;
assign basesoc_wb_sdram_bte = shared_bte;
assign interface0_adr = shared_adr;
assign interface0_dat_w = shared_dat_w;
assign interface0_sel = shared_sel;
assign interface0_stb = shared_stb;
assign interface0_we = shared_we;
assign interface0_cti = shared_cti;
assign interface0_bte = shared_bte;
assign basesoc_basesoc_ram_bus_cyc = (shared_cyc & slave_sel[0]);
assign basesoc_ram_bus_ram_bus_cyc = (shared_cyc & slave_sel[1]);
assign basesoc_wb_sdram_cyc = (shared_cyc & slave_sel[2]);
assign interface0_cyc = (shared_cyc & slave_sel[3]);
assign shared_err = (((basesoc_basesoc_ram_bus_err | basesoc_ram_bus_ram_bus_err) | basesoc_wb_sdram_err) | interface0_err);
assign wait_1 = ((shared_stb & shared_cyc) & (~shared_ack));
always @(*) begin
    error <= 1'd0;
    shared_ack <= 1'd0;
    shared_dat_r <= 32'd0;
    shared_ack <= (((basesoc_basesoc_ram_bus_ack | basesoc_ram_bus_ram_bus_ack) | basesoc_wb_sdram_ack) | interface0_ack);
    shared_dat_r <= (((({32{slave_sel_r[0]}} & basesoc_basesoc_ram_bus_dat_r) | ({32{slave_sel_r[1]}} & basesoc_ram_bus_ram_bus_dat_r)) | ({32{slave_sel_r[2]}} & basesoc_wb_sdram_dat_r)) | ({32{slave_sel_r[3]}} & interface0_dat_r));
    if (done) begin
        shared_dat_r <= 32'd4294967295;
        shared_ack <= 1'd1;
        error <= 1'd1;
    end
end
assign done = (count == 1'd0);
assign basesoc_bus_errors_status = basesoc_bus_errors;
assign basesoc_basesoc_adr = basesoc_basesoc_ram_bus_adr[14:0];
assign basesoc_basesoc_ram_bus_dat_r = basesoc_basesoc_dat_r;
always @(*) begin
    basesoc_ram_we <= 4'd0;
    basesoc_ram_we[0] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[0]);
    basesoc_ram_we[1] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[1]);
    basesoc_ram_we[2] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[2]);
    basesoc_ram_we[3] <= (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & basesoc_ram_bus_ram_bus_we) & basesoc_ram_bus_ram_bus_sel[3]);
end
assign basesoc_ram_adr = basesoc_ram_bus_ram_bus_adr[10:0];
assign basesoc_ram_bus_ram_bus_dat_r = basesoc_ram_dat_r;
assign basesoc_ram_dat_w = basesoc_ram_bus_ram_bus_dat_w;
always @(*) begin
    basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
    basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
    basesoc_tx_count_rs232phytx_next_value0 <= 4'd0;
    basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd0;
    basesoc_tx_data_rs232phytx_next_value2 <= 8'd0;
    basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd0;
    basesoc_tx_enable <= 1'd0;
    basesoc_tx_sink_ready <= 1'd0;
    rs232phytx_next_state <= 1'd0;
    rs232phytx_next_state <= rs232phytx_state;
    case (rs232phytx_state)
        1'd1: begin
            basesoc_tx_enable <= 1'd1;
            if (basesoc_tx_tick) begin
                basesoc_serial_tx_rs232phytx_next_value1 <= basesoc_tx_data;
                basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                basesoc_tx_count_rs232phytx_next_value0 <= (basesoc_tx_count + 1'd1);
                basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
                basesoc_tx_data_rs232phytx_next_value2 <= {1'd1, basesoc_tx_data[7:1]};
                basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                if ((basesoc_tx_count == 4'd9)) begin
                    basesoc_tx_sink_ready <= 1'd1;
                    rs232phytx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            basesoc_tx_count_rs232phytx_next_value0 <= 1'd0;
            basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
            basesoc_serial_tx_rs232phytx_next_value1 <= 1'd1;
            basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
            if (basesoc_tx_sink_valid) begin
                basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
                basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                basesoc_tx_data_rs232phytx_next_value2 <= basesoc_tx_sink_payload_data;
                basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                rs232phytx_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    basesoc_rx_count_rs232phyrx_next_value0 <= 4'd0;
    basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
    basesoc_rx_data_rs232phyrx_next_value1 <= 8'd0;
    basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
    basesoc_rx_enable <= 1'd0;
    basesoc_rx_source_payload_data <= 8'd0;
    basesoc_rx_source_valid <= 1'd0;
    rs232phyrx_next_state <= 1'd0;
    rs232phyrx_next_state <= rs232phyrx_state;
    case (rs232phyrx_state)
        1'd1: begin
            basesoc_rx_enable <= 1'd1;
            if (basesoc_rx_tick) begin
                basesoc_rx_count_rs232phyrx_next_value0 <= (basesoc_rx_count + 1'd1);
                basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
                basesoc_rx_data_rs232phyrx_next_value1 <= {basesoc_rx_rx, basesoc_rx_data[7:1]};
                basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
                if ((basesoc_rx_count == 4'd9)) begin
                    basesoc_rx_source_valid <= (basesoc_rx_rx == 1'd1);
                    basesoc_rx_source_payload_data <= basesoc_rx_data;
                    rs232phyrx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            basesoc_rx_count_rs232phyrx_next_value0 <= 1'd0;
            basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
            if (((basesoc_rx_rx == 1'd0) & (basesoc_rx_rx_d == 1'd1))) begin
                rs232phyrx_next_state <= 1'd1;
            end
        end
    endcase
end
assign basesoc_uart_uart_sink_valid = basesoc_rx_source_valid;
assign basesoc_rx_source_ready = basesoc_uart_uart_sink_ready;
assign basesoc_uart_uart_sink_first = basesoc_rx_source_first;
assign basesoc_uart_uart_sink_last = basesoc_rx_source_last;
assign basesoc_uart_uart_sink_payload_data = basesoc_rx_source_payload_data;
assign basesoc_tx_sink_valid = basesoc_uart_uart_source_valid;
assign basesoc_uart_uart_source_ready = basesoc_tx_sink_ready;
assign basesoc_tx_sink_first = basesoc_uart_uart_source_first;
assign basesoc_tx_sink_last = basesoc_uart_uart_source_last;
assign basesoc_tx_sink_payload_data = basesoc_uart_uart_source_payload_data;
assign basesoc_uart_tx_fifo_sink_valid = basesoc_uart_rxtx_re;
assign basesoc_uart_tx_fifo_sink_payload_data = basesoc_uart_rxtx_r;
assign basesoc_uart_uart_source_valid = basesoc_uart_tx_fifo_source_valid;
assign basesoc_uart_tx_fifo_source_ready = basesoc_uart_uart_source_ready;
assign basesoc_uart_uart_source_first = basesoc_uart_tx_fifo_source_first;
assign basesoc_uart_uart_source_last = basesoc_uart_tx_fifo_source_last;
assign basesoc_uart_uart_source_payload_data = basesoc_uart_tx_fifo_source_payload_data;
assign basesoc_uart_txfull_status = (~basesoc_uart_tx_fifo_sink_ready);
assign basesoc_uart_txempty_status = (~basesoc_uart_tx_fifo_source_valid);
assign basesoc_uart_tx_trigger = basesoc_uart_tx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_valid = basesoc_uart_uart_sink_valid;
assign basesoc_uart_uart_sink_ready = basesoc_uart_rx_fifo_sink_ready;
assign basesoc_uart_rx_fifo_sink_first = basesoc_uart_uart_sink_first;
assign basesoc_uart_rx_fifo_sink_last = basesoc_uart_uart_sink_last;
assign basesoc_uart_rx_fifo_sink_payload_data = basesoc_uart_uart_sink_payload_data;
assign basesoc_uart_rxtx_w = basesoc_uart_rx_fifo_source_payload_data;
assign basesoc_uart_rx_fifo_source_ready = (basesoc_uart_rx_clear | (1'd0 & basesoc_uart_rxtx_we));
assign basesoc_uart_rxempty_status = (~basesoc_uart_rx_fifo_source_valid);
assign basesoc_uart_rxfull_status = (~basesoc_uart_rx_fifo_sink_ready);
assign basesoc_uart_rx_trigger = basesoc_uart_rx_fifo_source_valid;
assign basesoc_uart_tx0 = basesoc_uart_tx_status;
assign basesoc_uart_tx1 = basesoc_uart_tx_pending;
always @(*) begin
    basesoc_uart_tx_clear <= 1'd0;
    if ((basesoc_uart_pending_re & basesoc_uart_pending_r[0])) begin
        basesoc_uart_tx_clear <= 1'd1;
    end
end
assign basesoc_uart_rx0 = basesoc_uart_rx_status;
assign basesoc_uart_rx1 = basesoc_uart_rx_pending;
always @(*) begin
    basesoc_uart_rx_clear <= 1'd0;
    if ((basesoc_uart_pending_re & basesoc_uart_pending_r[1])) begin
        basesoc_uart_rx_clear <= 1'd1;
    end
end
assign basesoc_uart_irq = ((basesoc_uart_pending_status[0] & basesoc_uart_enable_storage[0]) | (basesoc_uart_pending_status[1] & basesoc_uart_enable_storage[1]));
assign basesoc_uart_tx_status = basesoc_uart_tx_trigger;
assign basesoc_uart_rx_status = basesoc_uart_rx_trigger;
assign basesoc_uart_tx_fifo_syncfifo_din = {basesoc_uart_tx_fifo_fifo_in_last, basesoc_uart_tx_fifo_fifo_in_first, basesoc_uart_tx_fifo_fifo_in_payload_data};
assign {basesoc_uart_tx_fifo_fifo_out_last, basesoc_uart_tx_fifo_fifo_out_first, basesoc_uart_tx_fifo_fifo_out_payload_data} = basesoc_uart_tx_fifo_syncfifo_dout;
assign basesoc_uart_tx_fifo_sink_ready = basesoc_uart_tx_fifo_syncfifo_writable;
assign basesoc_uart_tx_fifo_syncfifo_we = basesoc_uart_tx_fifo_sink_valid;
assign basesoc_uart_tx_fifo_fifo_in_first = basesoc_uart_tx_fifo_sink_first;
assign basesoc_uart_tx_fifo_fifo_in_last = basesoc_uart_tx_fifo_sink_last;
assign basesoc_uart_tx_fifo_fifo_in_payload_data = basesoc_uart_tx_fifo_sink_payload_data;
assign basesoc_uart_tx_fifo_source_valid = basesoc_uart_tx_fifo_readable;
assign basesoc_uart_tx_fifo_source_first = basesoc_uart_tx_fifo_fifo_out_first;
assign basesoc_uart_tx_fifo_source_last = basesoc_uart_tx_fifo_fifo_out_last;
assign basesoc_uart_tx_fifo_source_payload_data = basesoc_uart_tx_fifo_fifo_out_payload_data;
assign basesoc_uart_tx_fifo_re = basesoc_uart_tx_fifo_source_ready;
assign basesoc_uart_tx_fifo_syncfifo_re = (basesoc_uart_tx_fifo_syncfifo_readable & ((~basesoc_uart_tx_fifo_readable) | basesoc_uart_tx_fifo_re));
assign basesoc_uart_tx_fifo_level1 = (basesoc_uart_tx_fifo_level0 + basesoc_uart_tx_fifo_readable);
always @(*) begin
    basesoc_uart_tx_fifo_wrport_adr <= 4'd0;
    if (basesoc_uart_tx_fifo_replace) begin
        basesoc_uart_tx_fifo_wrport_adr <= (basesoc_uart_tx_fifo_produce - 1'd1);
    end else begin
        basesoc_uart_tx_fifo_wrport_adr <= basesoc_uart_tx_fifo_produce;
    end
end
assign basesoc_uart_tx_fifo_wrport_dat_w = basesoc_uart_tx_fifo_syncfifo_din;
assign basesoc_uart_tx_fifo_wrport_we = (basesoc_uart_tx_fifo_syncfifo_we & (basesoc_uart_tx_fifo_syncfifo_writable | basesoc_uart_tx_fifo_replace));
assign basesoc_uart_tx_fifo_do_read = (basesoc_uart_tx_fifo_syncfifo_readable & basesoc_uart_tx_fifo_syncfifo_re);
assign basesoc_uart_tx_fifo_rdport_adr = basesoc_uart_tx_fifo_consume;
assign basesoc_uart_tx_fifo_syncfifo_dout = basesoc_uart_tx_fifo_rdport_dat_r;
assign basesoc_uart_tx_fifo_rdport_re = basesoc_uart_tx_fifo_do_read;
assign basesoc_uart_tx_fifo_syncfifo_writable = (basesoc_uart_tx_fifo_level0 != 5'd16);
assign basesoc_uart_tx_fifo_syncfifo_readable = (basesoc_uart_tx_fifo_level0 != 1'd0);
assign basesoc_uart_rx_fifo_syncfifo_din = {basesoc_uart_rx_fifo_fifo_in_last, basesoc_uart_rx_fifo_fifo_in_first, basesoc_uart_rx_fifo_fifo_in_payload_data};
assign {basesoc_uart_rx_fifo_fifo_out_last, basesoc_uart_rx_fifo_fifo_out_first, basesoc_uart_rx_fifo_fifo_out_payload_data} = basesoc_uart_rx_fifo_syncfifo_dout;
assign basesoc_uart_rx_fifo_sink_ready = basesoc_uart_rx_fifo_syncfifo_writable;
assign basesoc_uart_rx_fifo_syncfifo_we = basesoc_uart_rx_fifo_sink_valid;
assign basesoc_uart_rx_fifo_fifo_in_first = basesoc_uart_rx_fifo_sink_first;
assign basesoc_uart_rx_fifo_fifo_in_last = basesoc_uart_rx_fifo_sink_last;
assign basesoc_uart_rx_fifo_fifo_in_payload_data = basesoc_uart_rx_fifo_sink_payload_data;
assign basesoc_uart_rx_fifo_source_valid = basesoc_uart_rx_fifo_readable;
assign basesoc_uart_rx_fifo_source_first = basesoc_uart_rx_fifo_fifo_out_first;
assign basesoc_uart_rx_fifo_source_last = basesoc_uart_rx_fifo_fifo_out_last;
assign basesoc_uart_rx_fifo_source_payload_data = basesoc_uart_rx_fifo_fifo_out_payload_data;
assign basesoc_uart_rx_fifo_re = basesoc_uart_rx_fifo_source_ready;
assign basesoc_uart_rx_fifo_syncfifo_re = (basesoc_uart_rx_fifo_syncfifo_readable & ((~basesoc_uart_rx_fifo_readable) | basesoc_uart_rx_fifo_re));
assign basesoc_uart_rx_fifo_level1 = (basesoc_uart_rx_fifo_level0 + basesoc_uart_rx_fifo_readable);
always @(*) begin
    basesoc_uart_rx_fifo_wrport_adr <= 4'd0;
    if (basesoc_uart_rx_fifo_replace) begin
        basesoc_uart_rx_fifo_wrport_adr <= (basesoc_uart_rx_fifo_produce - 1'd1);
    end else begin
        basesoc_uart_rx_fifo_wrport_adr <= basesoc_uart_rx_fifo_produce;
    end
end
assign basesoc_uart_rx_fifo_wrport_dat_w = basesoc_uart_rx_fifo_syncfifo_din;
assign basesoc_uart_rx_fifo_wrport_we = (basesoc_uart_rx_fifo_syncfifo_we & (basesoc_uart_rx_fifo_syncfifo_writable | basesoc_uart_rx_fifo_replace));
assign basesoc_uart_rx_fifo_do_read = (basesoc_uart_rx_fifo_syncfifo_readable & basesoc_uart_rx_fifo_syncfifo_re);
assign basesoc_uart_rx_fifo_rdport_adr = basesoc_uart_rx_fifo_consume;
assign basesoc_uart_rx_fifo_syncfifo_dout = basesoc_uart_rx_fifo_rdport_dat_r;
assign basesoc_uart_rx_fifo_rdport_re = basesoc_uart_rx_fifo_do_read;
assign basesoc_uart_rx_fifo_syncfifo_writable = (basesoc_uart_rx_fifo_level0 != 5'd16);
assign basesoc_uart_rx_fifo_syncfifo_readable = (basesoc_uart_rx_fifo_level0 != 1'd0);
assign basesoc_timer_zero_trigger = (basesoc_timer_value == 1'd0);
assign basesoc_timer_zero0 = basesoc_timer_zero_status;
assign basesoc_timer_zero1 = basesoc_timer_zero_pending;
always @(*) begin
    basesoc_timer_zero_clear <= 1'd0;
    if ((basesoc_timer_pending_re & basesoc_timer_pending_r)) begin
        basesoc_timer_zero_clear <= 1'd1;
    end
end
assign basesoc_timer_irq = (basesoc_timer_pending_status & basesoc_timer_enable_storage);
assign basesoc_timer_zero_status = basesoc_timer_zero_trigger;
always @(*) begin
    gw2ddrphy_dm_o_data0 <= 8'd0;
    gw2ddrphy_dm_o_data0[0] <= gw2ddrphy_dfi_p0_wrdata_mask[0];
    gw2ddrphy_dm_o_data0[1] <= gw2ddrphy_dfi_p0_wrdata_mask[2];
    gw2ddrphy_dm_o_data0[2] <= gw2ddrphy_dfi_p0_wrdata_mask[4];
    gw2ddrphy_dm_o_data0[3] <= gw2ddrphy_dfi_p0_wrdata_mask[6];
    gw2ddrphy_dm_o_data0[4] <= gw2ddrphy_dfi_p1_wrdata_mask[0];
    gw2ddrphy_dm_o_data0[5] <= gw2ddrphy_dfi_p1_wrdata_mask[2];
    gw2ddrphy_dm_o_data0[6] <= gw2ddrphy_dfi_p1_wrdata_mask[4];
    gw2ddrphy_dm_o_data0[7] <= gw2ddrphy_dfi_p1_wrdata_mask[6];
end
always @(*) begin
    gw2ddrphy_dq_o_data0 <= 8'd0;
    gw2ddrphy_dq_o_data0[0] <= gw2ddrphy_dfi_p0_wrdata[0];
    gw2ddrphy_dq_o_data0[1] <= gw2ddrphy_dfi_p0_wrdata[16];
    gw2ddrphy_dq_o_data0[2] <= gw2ddrphy_dfi_p0_wrdata[32];
    gw2ddrphy_dq_o_data0[3] <= gw2ddrphy_dfi_p0_wrdata[48];
    gw2ddrphy_dq_o_data0[4] <= gw2ddrphy_dfi_p1_wrdata[0];
    gw2ddrphy_dq_o_data0[5] <= gw2ddrphy_dfi_p1_wrdata[16];
    gw2ddrphy_dq_o_data0[6] <= gw2ddrphy_dfi_p1_wrdata[32];
    gw2ddrphy_dq_o_data0[7] <= gw2ddrphy_dfi_p1_wrdata[48];
end
assign gw2ddrphy_dq_i_data0 = {gw2ddrphy_bitslip0_o, gw2ddrphy_dq_i_bitslip_o_d0};
always @(*) begin
    gw2ddrphy_dq_o_data1 <= 8'd0;
    gw2ddrphy_dq_o_data1[0] <= gw2ddrphy_dfi_p0_wrdata[1];
    gw2ddrphy_dq_o_data1[1] <= gw2ddrphy_dfi_p0_wrdata[17];
    gw2ddrphy_dq_o_data1[2] <= gw2ddrphy_dfi_p0_wrdata[33];
    gw2ddrphy_dq_o_data1[3] <= gw2ddrphy_dfi_p0_wrdata[49];
    gw2ddrphy_dq_o_data1[4] <= gw2ddrphy_dfi_p1_wrdata[1];
    gw2ddrphy_dq_o_data1[5] <= gw2ddrphy_dfi_p1_wrdata[17];
    gw2ddrphy_dq_o_data1[6] <= gw2ddrphy_dfi_p1_wrdata[33];
    gw2ddrphy_dq_o_data1[7] <= gw2ddrphy_dfi_p1_wrdata[49];
end
assign gw2ddrphy_dq_i_data1 = {gw2ddrphy_bitslip1_o, gw2ddrphy_dq_i_bitslip_o_d1};
always @(*) begin
    gw2ddrphy_dq_o_data2 <= 8'd0;
    gw2ddrphy_dq_o_data2[0] <= gw2ddrphy_dfi_p0_wrdata[2];
    gw2ddrphy_dq_o_data2[1] <= gw2ddrphy_dfi_p0_wrdata[18];
    gw2ddrphy_dq_o_data2[2] <= gw2ddrphy_dfi_p0_wrdata[34];
    gw2ddrphy_dq_o_data2[3] <= gw2ddrphy_dfi_p0_wrdata[50];
    gw2ddrphy_dq_o_data2[4] <= gw2ddrphy_dfi_p1_wrdata[2];
    gw2ddrphy_dq_o_data2[5] <= gw2ddrphy_dfi_p1_wrdata[18];
    gw2ddrphy_dq_o_data2[6] <= gw2ddrphy_dfi_p1_wrdata[34];
    gw2ddrphy_dq_o_data2[7] <= gw2ddrphy_dfi_p1_wrdata[50];
end
assign gw2ddrphy_dq_i_data2 = {gw2ddrphy_bitslip2_o, gw2ddrphy_dq_i_bitslip_o_d2};
always @(*) begin
    gw2ddrphy_dq_o_data3 <= 8'd0;
    gw2ddrphy_dq_o_data3[0] <= gw2ddrphy_dfi_p0_wrdata[3];
    gw2ddrphy_dq_o_data3[1] <= gw2ddrphy_dfi_p0_wrdata[19];
    gw2ddrphy_dq_o_data3[2] <= gw2ddrphy_dfi_p0_wrdata[35];
    gw2ddrphy_dq_o_data3[3] <= gw2ddrphy_dfi_p0_wrdata[51];
    gw2ddrphy_dq_o_data3[4] <= gw2ddrphy_dfi_p1_wrdata[3];
    gw2ddrphy_dq_o_data3[5] <= gw2ddrphy_dfi_p1_wrdata[19];
    gw2ddrphy_dq_o_data3[6] <= gw2ddrphy_dfi_p1_wrdata[35];
    gw2ddrphy_dq_o_data3[7] <= gw2ddrphy_dfi_p1_wrdata[51];
end
assign gw2ddrphy_dq_i_data3 = {gw2ddrphy_bitslip3_o, gw2ddrphy_dq_i_bitslip_o_d3};
always @(*) begin
    gw2ddrphy_dq_o_data4 <= 8'd0;
    gw2ddrphy_dq_o_data4[0] <= gw2ddrphy_dfi_p0_wrdata[4];
    gw2ddrphy_dq_o_data4[1] <= gw2ddrphy_dfi_p0_wrdata[20];
    gw2ddrphy_dq_o_data4[2] <= gw2ddrphy_dfi_p0_wrdata[36];
    gw2ddrphy_dq_o_data4[3] <= gw2ddrphy_dfi_p0_wrdata[52];
    gw2ddrphy_dq_o_data4[4] <= gw2ddrphy_dfi_p1_wrdata[4];
    gw2ddrphy_dq_o_data4[5] <= gw2ddrphy_dfi_p1_wrdata[20];
    gw2ddrphy_dq_o_data4[6] <= gw2ddrphy_dfi_p1_wrdata[36];
    gw2ddrphy_dq_o_data4[7] <= gw2ddrphy_dfi_p1_wrdata[52];
end
assign gw2ddrphy_dq_i_data4 = {gw2ddrphy_bitslip4_o, gw2ddrphy_dq_i_bitslip_o_d4};
always @(*) begin
    gw2ddrphy_dq_o_data5 <= 8'd0;
    gw2ddrphy_dq_o_data5[0] <= gw2ddrphy_dfi_p0_wrdata[5];
    gw2ddrphy_dq_o_data5[1] <= gw2ddrphy_dfi_p0_wrdata[21];
    gw2ddrphy_dq_o_data5[2] <= gw2ddrphy_dfi_p0_wrdata[37];
    gw2ddrphy_dq_o_data5[3] <= gw2ddrphy_dfi_p0_wrdata[53];
    gw2ddrphy_dq_o_data5[4] <= gw2ddrphy_dfi_p1_wrdata[5];
    gw2ddrphy_dq_o_data5[5] <= gw2ddrphy_dfi_p1_wrdata[21];
    gw2ddrphy_dq_o_data5[6] <= gw2ddrphy_dfi_p1_wrdata[37];
    gw2ddrphy_dq_o_data5[7] <= gw2ddrphy_dfi_p1_wrdata[53];
end
assign gw2ddrphy_dq_i_data5 = {gw2ddrphy_bitslip5_o, gw2ddrphy_dq_i_bitslip_o_d5};
always @(*) begin
    gw2ddrphy_dq_o_data6 <= 8'd0;
    gw2ddrphy_dq_o_data6[0] <= gw2ddrphy_dfi_p0_wrdata[6];
    gw2ddrphy_dq_o_data6[1] <= gw2ddrphy_dfi_p0_wrdata[22];
    gw2ddrphy_dq_o_data6[2] <= gw2ddrphy_dfi_p0_wrdata[38];
    gw2ddrphy_dq_o_data6[3] <= gw2ddrphy_dfi_p0_wrdata[54];
    gw2ddrphy_dq_o_data6[4] <= gw2ddrphy_dfi_p1_wrdata[6];
    gw2ddrphy_dq_o_data6[5] <= gw2ddrphy_dfi_p1_wrdata[22];
    gw2ddrphy_dq_o_data6[6] <= gw2ddrphy_dfi_p1_wrdata[38];
    gw2ddrphy_dq_o_data6[7] <= gw2ddrphy_dfi_p1_wrdata[54];
end
assign gw2ddrphy_dq_i_data6 = {gw2ddrphy_bitslip6_o, gw2ddrphy_dq_i_bitslip_o_d6};
always @(*) begin
    gw2ddrphy_dq_o_data7 <= 8'd0;
    gw2ddrphy_dq_o_data7[0] <= gw2ddrphy_dfi_p0_wrdata[7];
    gw2ddrphy_dq_o_data7[1] <= gw2ddrphy_dfi_p0_wrdata[23];
    gw2ddrphy_dq_o_data7[2] <= gw2ddrphy_dfi_p0_wrdata[39];
    gw2ddrphy_dq_o_data7[3] <= gw2ddrphy_dfi_p0_wrdata[55];
    gw2ddrphy_dq_o_data7[4] <= gw2ddrphy_dfi_p1_wrdata[7];
    gw2ddrphy_dq_o_data7[5] <= gw2ddrphy_dfi_p1_wrdata[23];
    gw2ddrphy_dq_o_data7[6] <= gw2ddrphy_dfi_p1_wrdata[39];
    gw2ddrphy_dq_o_data7[7] <= gw2ddrphy_dfi_p1_wrdata[55];
end
assign gw2ddrphy_dq_i_data7 = {gw2ddrphy_bitslip7_o, gw2ddrphy_dq_i_bitslip_o_d7};
always @(*) begin
    gw2ddrphy_dm_o_data1 <= 8'd0;
    gw2ddrphy_dm_o_data1[0] <= gw2ddrphy_dfi_p0_wrdata_mask[1];
    gw2ddrphy_dm_o_data1[1] <= gw2ddrphy_dfi_p0_wrdata_mask[3];
    gw2ddrphy_dm_o_data1[2] <= gw2ddrphy_dfi_p0_wrdata_mask[5];
    gw2ddrphy_dm_o_data1[3] <= gw2ddrphy_dfi_p0_wrdata_mask[7];
    gw2ddrphy_dm_o_data1[4] <= gw2ddrphy_dfi_p1_wrdata_mask[1];
    gw2ddrphy_dm_o_data1[5] <= gw2ddrphy_dfi_p1_wrdata_mask[3];
    gw2ddrphy_dm_o_data1[6] <= gw2ddrphy_dfi_p1_wrdata_mask[5];
    gw2ddrphy_dm_o_data1[7] <= gw2ddrphy_dfi_p1_wrdata_mask[7];
end
always @(*) begin
    gw2ddrphy_dq_o_data8 <= 8'd0;
    gw2ddrphy_dq_o_data8[0] <= gw2ddrphy_dfi_p0_wrdata[8];
    gw2ddrphy_dq_o_data8[1] <= gw2ddrphy_dfi_p0_wrdata[24];
    gw2ddrphy_dq_o_data8[2] <= gw2ddrphy_dfi_p0_wrdata[40];
    gw2ddrphy_dq_o_data8[3] <= gw2ddrphy_dfi_p0_wrdata[56];
    gw2ddrphy_dq_o_data8[4] <= gw2ddrphy_dfi_p1_wrdata[8];
    gw2ddrphy_dq_o_data8[5] <= gw2ddrphy_dfi_p1_wrdata[24];
    gw2ddrphy_dq_o_data8[6] <= gw2ddrphy_dfi_p1_wrdata[40];
    gw2ddrphy_dq_o_data8[7] <= gw2ddrphy_dfi_p1_wrdata[56];
end
assign gw2ddrphy_dq_i_data8 = {gw2ddrphy_bitslip8_o, gw2ddrphy_dq_i_bitslip_o_d8};
always @(*) begin
    gw2ddrphy_dq_o_data9 <= 8'd0;
    gw2ddrphy_dq_o_data9[0] <= gw2ddrphy_dfi_p0_wrdata[9];
    gw2ddrphy_dq_o_data9[1] <= gw2ddrphy_dfi_p0_wrdata[25];
    gw2ddrphy_dq_o_data9[2] <= gw2ddrphy_dfi_p0_wrdata[41];
    gw2ddrphy_dq_o_data9[3] <= gw2ddrphy_dfi_p0_wrdata[57];
    gw2ddrphy_dq_o_data9[4] <= gw2ddrphy_dfi_p1_wrdata[9];
    gw2ddrphy_dq_o_data9[5] <= gw2ddrphy_dfi_p1_wrdata[25];
    gw2ddrphy_dq_o_data9[6] <= gw2ddrphy_dfi_p1_wrdata[41];
    gw2ddrphy_dq_o_data9[7] <= gw2ddrphy_dfi_p1_wrdata[57];
end
assign gw2ddrphy_dq_i_data9 = {gw2ddrphy_bitslip9_o, gw2ddrphy_dq_i_bitslip_o_d9};
always @(*) begin
    gw2ddrphy_dq_o_data10 <= 8'd0;
    gw2ddrphy_dq_o_data10[0] <= gw2ddrphy_dfi_p0_wrdata[10];
    gw2ddrphy_dq_o_data10[1] <= gw2ddrphy_dfi_p0_wrdata[26];
    gw2ddrphy_dq_o_data10[2] <= gw2ddrphy_dfi_p0_wrdata[42];
    gw2ddrphy_dq_o_data10[3] <= gw2ddrphy_dfi_p0_wrdata[58];
    gw2ddrphy_dq_o_data10[4] <= gw2ddrphy_dfi_p1_wrdata[10];
    gw2ddrphy_dq_o_data10[5] <= gw2ddrphy_dfi_p1_wrdata[26];
    gw2ddrphy_dq_o_data10[6] <= gw2ddrphy_dfi_p1_wrdata[42];
    gw2ddrphy_dq_o_data10[7] <= gw2ddrphy_dfi_p1_wrdata[58];
end
assign gw2ddrphy_dq_i_data10 = {gw2ddrphy_bitslip10_o, gw2ddrphy_dq_i_bitslip_o_d10};
always @(*) begin
    gw2ddrphy_dq_o_data11 <= 8'd0;
    gw2ddrphy_dq_o_data11[0] <= gw2ddrphy_dfi_p0_wrdata[11];
    gw2ddrphy_dq_o_data11[1] <= gw2ddrphy_dfi_p0_wrdata[27];
    gw2ddrphy_dq_o_data11[2] <= gw2ddrphy_dfi_p0_wrdata[43];
    gw2ddrphy_dq_o_data11[3] <= gw2ddrphy_dfi_p0_wrdata[59];
    gw2ddrphy_dq_o_data11[4] <= gw2ddrphy_dfi_p1_wrdata[11];
    gw2ddrphy_dq_o_data11[5] <= gw2ddrphy_dfi_p1_wrdata[27];
    gw2ddrphy_dq_o_data11[6] <= gw2ddrphy_dfi_p1_wrdata[43];
    gw2ddrphy_dq_o_data11[7] <= gw2ddrphy_dfi_p1_wrdata[59];
end
assign gw2ddrphy_dq_i_data11 = {gw2ddrphy_bitslip11_o, gw2ddrphy_dq_i_bitslip_o_d11};
always @(*) begin
    gw2ddrphy_dq_o_data12 <= 8'd0;
    gw2ddrphy_dq_o_data12[0] <= gw2ddrphy_dfi_p0_wrdata[12];
    gw2ddrphy_dq_o_data12[1] <= gw2ddrphy_dfi_p0_wrdata[28];
    gw2ddrphy_dq_o_data12[2] <= gw2ddrphy_dfi_p0_wrdata[44];
    gw2ddrphy_dq_o_data12[3] <= gw2ddrphy_dfi_p0_wrdata[60];
    gw2ddrphy_dq_o_data12[4] <= gw2ddrphy_dfi_p1_wrdata[12];
    gw2ddrphy_dq_o_data12[5] <= gw2ddrphy_dfi_p1_wrdata[28];
    gw2ddrphy_dq_o_data12[6] <= gw2ddrphy_dfi_p1_wrdata[44];
    gw2ddrphy_dq_o_data12[7] <= gw2ddrphy_dfi_p1_wrdata[60];
end
assign gw2ddrphy_dq_i_data12 = {gw2ddrphy_bitslip12_o, gw2ddrphy_dq_i_bitslip_o_d12};
always @(*) begin
    gw2ddrphy_dq_o_data13 <= 8'd0;
    gw2ddrphy_dq_o_data13[0] <= gw2ddrphy_dfi_p0_wrdata[13];
    gw2ddrphy_dq_o_data13[1] <= gw2ddrphy_dfi_p0_wrdata[29];
    gw2ddrphy_dq_o_data13[2] <= gw2ddrphy_dfi_p0_wrdata[45];
    gw2ddrphy_dq_o_data13[3] <= gw2ddrphy_dfi_p0_wrdata[61];
    gw2ddrphy_dq_o_data13[4] <= gw2ddrphy_dfi_p1_wrdata[13];
    gw2ddrphy_dq_o_data13[5] <= gw2ddrphy_dfi_p1_wrdata[29];
    gw2ddrphy_dq_o_data13[6] <= gw2ddrphy_dfi_p1_wrdata[45];
    gw2ddrphy_dq_o_data13[7] <= gw2ddrphy_dfi_p1_wrdata[61];
end
assign gw2ddrphy_dq_i_data13 = {gw2ddrphy_bitslip13_o, gw2ddrphy_dq_i_bitslip_o_d13};
always @(*) begin
    gw2ddrphy_dq_o_data14 <= 8'd0;
    gw2ddrphy_dq_o_data14[0] <= gw2ddrphy_dfi_p0_wrdata[14];
    gw2ddrphy_dq_o_data14[1] <= gw2ddrphy_dfi_p0_wrdata[30];
    gw2ddrphy_dq_o_data14[2] <= gw2ddrphy_dfi_p0_wrdata[46];
    gw2ddrphy_dq_o_data14[3] <= gw2ddrphy_dfi_p0_wrdata[62];
    gw2ddrphy_dq_o_data14[4] <= gw2ddrphy_dfi_p1_wrdata[14];
    gw2ddrphy_dq_o_data14[5] <= gw2ddrphy_dfi_p1_wrdata[30];
    gw2ddrphy_dq_o_data14[6] <= gw2ddrphy_dfi_p1_wrdata[46];
    gw2ddrphy_dq_o_data14[7] <= gw2ddrphy_dfi_p1_wrdata[62];
end
assign gw2ddrphy_dq_i_data14 = {gw2ddrphy_bitslip14_o, gw2ddrphy_dq_i_bitslip_o_d14};
always @(*) begin
    gw2ddrphy_dq_o_data15 <= 8'd0;
    gw2ddrphy_dq_o_data15[0] <= gw2ddrphy_dfi_p0_wrdata[15];
    gw2ddrphy_dq_o_data15[1] <= gw2ddrphy_dfi_p0_wrdata[31];
    gw2ddrphy_dq_o_data15[2] <= gw2ddrphy_dfi_p0_wrdata[47];
    gw2ddrphy_dq_o_data15[3] <= gw2ddrphy_dfi_p0_wrdata[63];
    gw2ddrphy_dq_o_data15[4] <= gw2ddrphy_dfi_p1_wrdata[15];
    gw2ddrphy_dq_o_data15[5] <= gw2ddrphy_dfi_p1_wrdata[31];
    gw2ddrphy_dq_o_data15[6] <= gw2ddrphy_dfi_p1_wrdata[47];
    gw2ddrphy_dq_o_data15[7] <= gw2ddrphy_dfi_p1_wrdata[63];
end
assign gw2ddrphy_dq_i_data15 = {gw2ddrphy_bitslip15_o, gw2ddrphy_dq_i_bitslip_o_d15};
always @(*) begin
    gw2ddrphy_dfi_p0_rddata <= 64'd0;
    gw2ddrphy_dfi_p0_rddata[0] <= gw2ddrphy_dq_i_data0[0];
    gw2ddrphy_dfi_p0_rddata[16] <= gw2ddrphy_dq_i_data0[1];
    gw2ddrphy_dfi_p0_rddata[32] <= gw2ddrphy_dq_i_data0[2];
    gw2ddrphy_dfi_p0_rddata[48] <= gw2ddrphy_dq_i_data0[3];
    gw2ddrphy_dfi_p0_rddata[1] <= gw2ddrphy_dq_i_data1[0];
    gw2ddrphy_dfi_p0_rddata[17] <= gw2ddrphy_dq_i_data1[1];
    gw2ddrphy_dfi_p0_rddata[33] <= gw2ddrphy_dq_i_data1[2];
    gw2ddrphy_dfi_p0_rddata[49] <= gw2ddrphy_dq_i_data1[3];
    gw2ddrphy_dfi_p0_rddata[2] <= gw2ddrphy_dq_i_data2[0];
    gw2ddrphy_dfi_p0_rddata[18] <= gw2ddrphy_dq_i_data2[1];
    gw2ddrphy_dfi_p0_rddata[34] <= gw2ddrphy_dq_i_data2[2];
    gw2ddrphy_dfi_p0_rddata[50] <= gw2ddrphy_dq_i_data2[3];
    gw2ddrphy_dfi_p0_rddata[3] <= gw2ddrphy_dq_i_data3[0];
    gw2ddrphy_dfi_p0_rddata[19] <= gw2ddrphy_dq_i_data3[1];
    gw2ddrphy_dfi_p0_rddata[35] <= gw2ddrphy_dq_i_data3[2];
    gw2ddrphy_dfi_p0_rddata[51] <= gw2ddrphy_dq_i_data3[3];
    gw2ddrphy_dfi_p0_rddata[4] <= gw2ddrphy_dq_i_data4[0];
    gw2ddrphy_dfi_p0_rddata[20] <= gw2ddrphy_dq_i_data4[1];
    gw2ddrphy_dfi_p0_rddata[36] <= gw2ddrphy_dq_i_data4[2];
    gw2ddrphy_dfi_p0_rddata[52] <= gw2ddrphy_dq_i_data4[3];
    gw2ddrphy_dfi_p0_rddata[5] <= gw2ddrphy_dq_i_data5[0];
    gw2ddrphy_dfi_p0_rddata[21] <= gw2ddrphy_dq_i_data5[1];
    gw2ddrphy_dfi_p0_rddata[37] <= gw2ddrphy_dq_i_data5[2];
    gw2ddrphy_dfi_p0_rddata[53] <= gw2ddrphy_dq_i_data5[3];
    gw2ddrphy_dfi_p0_rddata[6] <= gw2ddrphy_dq_i_data6[0];
    gw2ddrphy_dfi_p0_rddata[22] <= gw2ddrphy_dq_i_data6[1];
    gw2ddrphy_dfi_p0_rddata[38] <= gw2ddrphy_dq_i_data6[2];
    gw2ddrphy_dfi_p0_rddata[54] <= gw2ddrphy_dq_i_data6[3];
    gw2ddrphy_dfi_p0_rddata[7] <= gw2ddrphy_dq_i_data7[0];
    gw2ddrphy_dfi_p0_rddata[23] <= gw2ddrphy_dq_i_data7[1];
    gw2ddrphy_dfi_p0_rddata[39] <= gw2ddrphy_dq_i_data7[2];
    gw2ddrphy_dfi_p0_rddata[55] <= gw2ddrphy_dq_i_data7[3];
    gw2ddrphy_dfi_p0_rddata[8] <= gw2ddrphy_dq_i_data8[0];
    gw2ddrphy_dfi_p0_rddata[24] <= gw2ddrphy_dq_i_data8[1];
    gw2ddrphy_dfi_p0_rddata[40] <= gw2ddrphy_dq_i_data8[2];
    gw2ddrphy_dfi_p0_rddata[56] <= gw2ddrphy_dq_i_data8[3];
    gw2ddrphy_dfi_p0_rddata[9] <= gw2ddrphy_dq_i_data9[0];
    gw2ddrphy_dfi_p0_rddata[25] <= gw2ddrphy_dq_i_data9[1];
    gw2ddrphy_dfi_p0_rddata[41] <= gw2ddrphy_dq_i_data9[2];
    gw2ddrphy_dfi_p0_rddata[57] <= gw2ddrphy_dq_i_data9[3];
    gw2ddrphy_dfi_p0_rddata[10] <= gw2ddrphy_dq_i_data10[0];
    gw2ddrphy_dfi_p0_rddata[26] <= gw2ddrphy_dq_i_data10[1];
    gw2ddrphy_dfi_p0_rddata[42] <= gw2ddrphy_dq_i_data10[2];
    gw2ddrphy_dfi_p0_rddata[58] <= gw2ddrphy_dq_i_data10[3];
    gw2ddrphy_dfi_p0_rddata[11] <= gw2ddrphy_dq_i_data11[0];
    gw2ddrphy_dfi_p0_rddata[27] <= gw2ddrphy_dq_i_data11[1];
    gw2ddrphy_dfi_p0_rddata[43] <= gw2ddrphy_dq_i_data11[2];
    gw2ddrphy_dfi_p0_rddata[59] <= gw2ddrphy_dq_i_data11[3];
    gw2ddrphy_dfi_p0_rddata[12] <= gw2ddrphy_dq_i_data12[0];
    gw2ddrphy_dfi_p0_rddata[28] <= gw2ddrphy_dq_i_data12[1];
    gw2ddrphy_dfi_p0_rddata[44] <= gw2ddrphy_dq_i_data12[2];
    gw2ddrphy_dfi_p0_rddata[60] <= gw2ddrphy_dq_i_data12[3];
    gw2ddrphy_dfi_p0_rddata[13] <= gw2ddrphy_dq_i_data13[0];
    gw2ddrphy_dfi_p0_rddata[29] <= gw2ddrphy_dq_i_data13[1];
    gw2ddrphy_dfi_p0_rddata[45] <= gw2ddrphy_dq_i_data13[2];
    gw2ddrphy_dfi_p0_rddata[61] <= gw2ddrphy_dq_i_data13[3];
    gw2ddrphy_dfi_p0_rddata[14] <= gw2ddrphy_dq_i_data14[0];
    gw2ddrphy_dfi_p0_rddata[30] <= gw2ddrphy_dq_i_data14[1];
    gw2ddrphy_dfi_p0_rddata[46] <= gw2ddrphy_dq_i_data14[2];
    gw2ddrphy_dfi_p0_rddata[62] <= gw2ddrphy_dq_i_data14[3];
    gw2ddrphy_dfi_p0_rddata[15] <= gw2ddrphy_dq_i_data15[0];
    gw2ddrphy_dfi_p0_rddata[31] <= gw2ddrphy_dq_i_data15[1];
    gw2ddrphy_dfi_p0_rddata[47] <= gw2ddrphy_dq_i_data15[2];
    gw2ddrphy_dfi_p0_rddata[63] <= gw2ddrphy_dq_i_data15[3];
end
always @(*) begin
    gw2ddrphy_dfi_p1_rddata <= 64'd0;
    gw2ddrphy_dfi_p1_rddata[0] <= gw2ddrphy_dq_i_data0[4];
    gw2ddrphy_dfi_p1_rddata[16] <= gw2ddrphy_dq_i_data0[5];
    gw2ddrphy_dfi_p1_rddata[32] <= gw2ddrphy_dq_i_data0[6];
    gw2ddrphy_dfi_p1_rddata[48] <= gw2ddrphy_dq_i_data0[7];
    gw2ddrphy_dfi_p1_rddata[1] <= gw2ddrphy_dq_i_data1[4];
    gw2ddrphy_dfi_p1_rddata[17] <= gw2ddrphy_dq_i_data1[5];
    gw2ddrphy_dfi_p1_rddata[33] <= gw2ddrphy_dq_i_data1[6];
    gw2ddrphy_dfi_p1_rddata[49] <= gw2ddrphy_dq_i_data1[7];
    gw2ddrphy_dfi_p1_rddata[2] <= gw2ddrphy_dq_i_data2[4];
    gw2ddrphy_dfi_p1_rddata[18] <= gw2ddrphy_dq_i_data2[5];
    gw2ddrphy_dfi_p1_rddata[34] <= gw2ddrphy_dq_i_data2[6];
    gw2ddrphy_dfi_p1_rddata[50] <= gw2ddrphy_dq_i_data2[7];
    gw2ddrphy_dfi_p1_rddata[3] <= gw2ddrphy_dq_i_data3[4];
    gw2ddrphy_dfi_p1_rddata[19] <= gw2ddrphy_dq_i_data3[5];
    gw2ddrphy_dfi_p1_rddata[35] <= gw2ddrphy_dq_i_data3[6];
    gw2ddrphy_dfi_p1_rddata[51] <= gw2ddrphy_dq_i_data3[7];
    gw2ddrphy_dfi_p1_rddata[4] <= gw2ddrphy_dq_i_data4[4];
    gw2ddrphy_dfi_p1_rddata[20] <= gw2ddrphy_dq_i_data4[5];
    gw2ddrphy_dfi_p1_rddata[36] <= gw2ddrphy_dq_i_data4[6];
    gw2ddrphy_dfi_p1_rddata[52] <= gw2ddrphy_dq_i_data4[7];
    gw2ddrphy_dfi_p1_rddata[5] <= gw2ddrphy_dq_i_data5[4];
    gw2ddrphy_dfi_p1_rddata[21] <= gw2ddrphy_dq_i_data5[5];
    gw2ddrphy_dfi_p1_rddata[37] <= gw2ddrphy_dq_i_data5[6];
    gw2ddrphy_dfi_p1_rddata[53] <= gw2ddrphy_dq_i_data5[7];
    gw2ddrphy_dfi_p1_rddata[6] <= gw2ddrphy_dq_i_data6[4];
    gw2ddrphy_dfi_p1_rddata[22] <= gw2ddrphy_dq_i_data6[5];
    gw2ddrphy_dfi_p1_rddata[38] <= gw2ddrphy_dq_i_data6[6];
    gw2ddrphy_dfi_p1_rddata[54] <= gw2ddrphy_dq_i_data6[7];
    gw2ddrphy_dfi_p1_rddata[7] <= gw2ddrphy_dq_i_data7[4];
    gw2ddrphy_dfi_p1_rddata[23] <= gw2ddrphy_dq_i_data7[5];
    gw2ddrphy_dfi_p1_rddata[39] <= gw2ddrphy_dq_i_data7[6];
    gw2ddrphy_dfi_p1_rddata[55] <= gw2ddrphy_dq_i_data7[7];
    gw2ddrphy_dfi_p1_rddata[8] <= gw2ddrphy_dq_i_data8[4];
    gw2ddrphy_dfi_p1_rddata[24] <= gw2ddrphy_dq_i_data8[5];
    gw2ddrphy_dfi_p1_rddata[40] <= gw2ddrphy_dq_i_data8[6];
    gw2ddrphy_dfi_p1_rddata[56] <= gw2ddrphy_dq_i_data8[7];
    gw2ddrphy_dfi_p1_rddata[9] <= gw2ddrphy_dq_i_data9[4];
    gw2ddrphy_dfi_p1_rddata[25] <= gw2ddrphy_dq_i_data9[5];
    gw2ddrphy_dfi_p1_rddata[41] <= gw2ddrphy_dq_i_data9[6];
    gw2ddrphy_dfi_p1_rddata[57] <= gw2ddrphy_dq_i_data9[7];
    gw2ddrphy_dfi_p1_rddata[10] <= gw2ddrphy_dq_i_data10[4];
    gw2ddrphy_dfi_p1_rddata[26] <= gw2ddrphy_dq_i_data10[5];
    gw2ddrphy_dfi_p1_rddata[42] <= gw2ddrphy_dq_i_data10[6];
    gw2ddrphy_dfi_p1_rddata[58] <= gw2ddrphy_dq_i_data10[7];
    gw2ddrphy_dfi_p1_rddata[11] <= gw2ddrphy_dq_i_data11[4];
    gw2ddrphy_dfi_p1_rddata[27] <= gw2ddrphy_dq_i_data11[5];
    gw2ddrphy_dfi_p1_rddata[43] <= gw2ddrphy_dq_i_data11[6];
    gw2ddrphy_dfi_p1_rddata[59] <= gw2ddrphy_dq_i_data11[7];
    gw2ddrphy_dfi_p1_rddata[12] <= gw2ddrphy_dq_i_data12[4];
    gw2ddrphy_dfi_p1_rddata[28] <= gw2ddrphy_dq_i_data12[5];
    gw2ddrphy_dfi_p1_rddata[44] <= gw2ddrphy_dq_i_data12[6];
    gw2ddrphy_dfi_p1_rddata[60] <= gw2ddrphy_dq_i_data12[7];
    gw2ddrphy_dfi_p1_rddata[13] <= gw2ddrphy_dq_i_data13[4];
    gw2ddrphy_dfi_p1_rddata[29] <= gw2ddrphy_dq_i_data13[5];
    gw2ddrphy_dfi_p1_rddata[45] <= gw2ddrphy_dq_i_data13[6];
    gw2ddrphy_dfi_p1_rddata[61] <= gw2ddrphy_dq_i_data13[7];
    gw2ddrphy_dfi_p1_rddata[14] <= gw2ddrphy_dq_i_data14[4];
    gw2ddrphy_dfi_p1_rddata[30] <= gw2ddrphy_dq_i_data14[5];
    gw2ddrphy_dfi_p1_rddata[46] <= gw2ddrphy_dq_i_data14[6];
    gw2ddrphy_dfi_p1_rddata[62] <= gw2ddrphy_dq_i_data14[7];
    gw2ddrphy_dfi_p1_rddata[15] <= gw2ddrphy_dq_i_data15[4];
    gw2ddrphy_dfi_p1_rddata[31] <= gw2ddrphy_dq_i_data15[5];
    gw2ddrphy_dfi_p1_rddata[47] <= gw2ddrphy_dq_i_data15[6];
    gw2ddrphy_dfi_p1_rddata[63] <= gw2ddrphy_dq_i_data15[7];
end
assign gw2ddrphy_dfi_p0_rddata_valid = gw2ddrphy_rddata_en_tappeddelayline11;
assign gw2ddrphy_dfi_p1_rddata_valid = gw2ddrphy_rddata_en_tappeddelayline11;
assign gw2ddrphy_dqs_re = (gw2ddrphy_rddata_en_tappeddelayline2 | gw2ddrphy_rddata_en_tappeddelayline3);
assign gw2ddrphy_dq_oe = (gw2ddrphy_wrdata_en_tappeddelayline2 | gw2ddrphy_wrdata_en_tappeddelayline3);
assign gw2ddrphy_bl8_chunk = gw2ddrphy_wrdata_en_tappeddelayline2;
assign gw2ddrphy_dqs_oe = gw2ddrphy_dq_oe;
assign gw2ddrphy_dqs_preamble = (gw2ddrphy_wrdata_en_tappeddelayline1 & (~gw2ddrphy_wrdata_en_tappeddelayline2));
assign gw2ddrphy_dqs_postamble = (gw2ddrphy_wrdata_en_tappeddelayline4 & (~gw2ddrphy_wrdata_en_tappeddelayline3));
assign gw2ddrphy_new_lock = (gw2ddrphy_lock1 & (~gw2ddrphy_lock_d));
assign gw2ddrphy_pause0 = gw2ddrphy_pause1;
assign gw2ddrphy_stop0 = gw2ddrphy_stop1;
assign gw2ddrphy_delay0 = gw2ddrphy_delay1;
assign gw2ddrphy_reset0 = gw2ddrphy_reset1;
always @(*) begin
    gw2ddrphy_bitslip0_o <= 4'd0;
    case (gw2ddrphy_bitslip0_value)
        1'd0: begin
            gw2ddrphy_bitslip0_o <= gw2ddrphy_bitslip0_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip0_o <= gw2ddrphy_bitslip0_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip0_o <= gw2ddrphy_bitslip0_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip0_o <= gw2ddrphy_bitslip0_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip1_o <= 4'd0;
    case (gw2ddrphy_bitslip1_value)
        1'd0: begin
            gw2ddrphy_bitslip1_o <= gw2ddrphy_bitslip1_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip1_o <= gw2ddrphy_bitslip1_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip1_o <= gw2ddrphy_bitslip1_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip1_o <= gw2ddrphy_bitslip1_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip2_o <= 4'd0;
    case (gw2ddrphy_bitslip2_value)
        1'd0: begin
            gw2ddrphy_bitslip2_o <= gw2ddrphy_bitslip2_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip2_o <= gw2ddrphy_bitslip2_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip2_o <= gw2ddrphy_bitslip2_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip2_o <= gw2ddrphy_bitslip2_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip3_o <= 4'd0;
    case (gw2ddrphy_bitslip3_value)
        1'd0: begin
            gw2ddrphy_bitslip3_o <= gw2ddrphy_bitslip3_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip3_o <= gw2ddrphy_bitslip3_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip3_o <= gw2ddrphy_bitslip3_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip3_o <= gw2ddrphy_bitslip3_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip4_o <= 4'd0;
    case (gw2ddrphy_bitslip4_value)
        1'd0: begin
            gw2ddrphy_bitslip4_o <= gw2ddrphy_bitslip4_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip4_o <= gw2ddrphy_bitslip4_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip4_o <= gw2ddrphy_bitslip4_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip4_o <= gw2ddrphy_bitslip4_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip5_o <= 4'd0;
    case (gw2ddrphy_bitslip5_value)
        1'd0: begin
            gw2ddrphy_bitslip5_o <= gw2ddrphy_bitslip5_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip5_o <= gw2ddrphy_bitslip5_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip5_o <= gw2ddrphy_bitslip5_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip5_o <= gw2ddrphy_bitslip5_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip6_o <= 4'd0;
    case (gw2ddrphy_bitslip6_value)
        1'd0: begin
            gw2ddrphy_bitslip6_o <= gw2ddrphy_bitslip6_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip6_o <= gw2ddrphy_bitslip6_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip6_o <= gw2ddrphy_bitslip6_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip6_o <= gw2ddrphy_bitslip6_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip7_o <= 4'd0;
    case (gw2ddrphy_bitslip7_value)
        1'd0: begin
            gw2ddrphy_bitslip7_o <= gw2ddrphy_bitslip7_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip7_o <= gw2ddrphy_bitslip7_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip7_o <= gw2ddrphy_bitslip7_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip7_o <= gw2ddrphy_bitslip7_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip8_o <= 4'd0;
    case (gw2ddrphy_bitslip8_value)
        1'd0: begin
            gw2ddrphy_bitslip8_o <= gw2ddrphy_bitslip8_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip8_o <= gw2ddrphy_bitslip8_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip8_o <= gw2ddrphy_bitslip8_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip8_o <= gw2ddrphy_bitslip8_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip9_o <= 4'd0;
    case (gw2ddrphy_bitslip9_value)
        1'd0: begin
            gw2ddrphy_bitslip9_o <= gw2ddrphy_bitslip9_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip9_o <= gw2ddrphy_bitslip9_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip9_o <= gw2ddrphy_bitslip9_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip9_o <= gw2ddrphy_bitslip9_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip10_o <= 4'd0;
    case (gw2ddrphy_bitslip10_value)
        1'd0: begin
            gw2ddrphy_bitslip10_o <= gw2ddrphy_bitslip10_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip10_o <= gw2ddrphy_bitslip10_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip10_o <= gw2ddrphy_bitslip10_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip10_o <= gw2ddrphy_bitslip10_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip11_o <= 4'd0;
    case (gw2ddrphy_bitslip11_value)
        1'd0: begin
            gw2ddrphy_bitslip11_o <= gw2ddrphy_bitslip11_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip11_o <= gw2ddrphy_bitslip11_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip11_o <= gw2ddrphy_bitslip11_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip11_o <= gw2ddrphy_bitslip11_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip12_o <= 4'd0;
    case (gw2ddrphy_bitslip12_value)
        1'd0: begin
            gw2ddrphy_bitslip12_o <= gw2ddrphy_bitslip12_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip12_o <= gw2ddrphy_bitslip12_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip12_o <= gw2ddrphy_bitslip12_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip12_o <= gw2ddrphy_bitslip12_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip13_o <= 4'd0;
    case (gw2ddrphy_bitslip13_value)
        1'd0: begin
            gw2ddrphy_bitslip13_o <= gw2ddrphy_bitslip13_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip13_o <= gw2ddrphy_bitslip13_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip13_o <= gw2ddrphy_bitslip13_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip13_o <= gw2ddrphy_bitslip13_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip14_o <= 4'd0;
    case (gw2ddrphy_bitslip14_value)
        1'd0: begin
            gw2ddrphy_bitslip14_o <= gw2ddrphy_bitslip14_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip14_o <= gw2ddrphy_bitslip14_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip14_o <= gw2ddrphy_bitslip14_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip14_o <= gw2ddrphy_bitslip14_r[6:3];
        end
    endcase
end
always @(*) begin
    gw2ddrphy_bitslip15_o <= 4'd0;
    case (gw2ddrphy_bitslip15_value)
        1'd0: begin
            gw2ddrphy_bitslip15_o <= gw2ddrphy_bitslip15_r[3:0];
        end
        1'd1: begin
            gw2ddrphy_bitslip15_o <= gw2ddrphy_bitslip15_r[4:1];
        end
        2'd2: begin
            gw2ddrphy_bitslip15_o <= gw2ddrphy_bitslip15_r[5:2];
        end
        2'd3: begin
            gw2ddrphy_bitslip15_o <= gw2ddrphy_bitslip15_r[6:3];
        end
    endcase
end
assign gw2ddrphy_dfi_p0_address = basesoc_sdram_master_p0_address;
assign gw2ddrphy_dfi_p0_bank = basesoc_sdram_master_p0_bank;
assign gw2ddrphy_dfi_p0_cas_n = basesoc_sdram_master_p0_cas_n;
assign gw2ddrphy_dfi_p0_cs_n = basesoc_sdram_master_p0_cs_n;
assign gw2ddrphy_dfi_p0_ras_n = basesoc_sdram_master_p0_ras_n;
assign gw2ddrphy_dfi_p0_we_n = basesoc_sdram_master_p0_we_n;
assign gw2ddrphy_dfi_p0_cke = basesoc_sdram_master_p0_cke;
assign gw2ddrphy_dfi_p0_odt = basesoc_sdram_master_p0_odt;
assign gw2ddrphy_dfi_p0_reset_n = basesoc_sdram_master_p0_reset_n;
assign gw2ddrphy_dfi_p0_act_n = basesoc_sdram_master_p0_act_n;
assign gw2ddrphy_dfi_p0_wrdata = basesoc_sdram_master_p0_wrdata;
assign gw2ddrphy_dfi_p0_wrdata_en = basesoc_sdram_master_p0_wrdata_en;
assign gw2ddrphy_dfi_p0_wrdata_mask = basesoc_sdram_master_p0_wrdata_mask;
assign gw2ddrphy_dfi_p0_rddata_en = basesoc_sdram_master_p0_rddata_en;
assign basesoc_sdram_master_p0_rddata = gw2ddrphy_dfi_p0_rddata;
assign basesoc_sdram_master_p0_rddata_valid = gw2ddrphy_dfi_p0_rddata_valid;
assign gw2ddrphy_dfi_p1_address = basesoc_sdram_master_p1_address;
assign gw2ddrphy_dfi_p1_bank = basesoc_sdram_master_p1_bank;
assign gw2ddrphy_dfi_p1_cas_n = basesoc_sdram_master_p1_cas_n;
assign gw2ddrphy_dfi_p1_cs_n = basesoc_sdram_master_p1_cs_n;
assign gw2ddrphy_dfi_p1_ras_n = basesoc_sdram_master_p1_ras_n;
assign gw2ddrphy_dfi_p1_we_n = basesoc_sdram_master_p1_we_n;
assign gw2ddrphy_dfi_p1_cke = basesoc_sdram_master_p1_cke;
assign gw2ddrphy_dfi_p1_odt = basesoc_sdram_master_p1_odt;
assign gw2ddrphy_dfi_p1_reset_n = basesoc_sdram_master_p1_reset_n;
assign gw2ddrphy_dfi_p1_act_n = basesoc_sdram_master_p1_act_n;
assign gw2ddrphy_dfi_p1_wrdata = basesoc_sdram_master_p1_wrdata;
assign gw2ddrphy_dfi_p1_wrdata_en = basesoc_sdram_master_p1_wrdata_en;
assign gw2ddrphy_dfi_p1_wrdata_mask = basesoc_sdram_master_p1_wrdata_mask;
assign gw2ddrphy_dfi_p1_rddata_en = basesoc_sdram_master_p1_rddata_en;
assign basesoc_sdram_master_p1_rddata = gw2ddrphy_dfi_p1_rddata;
assign basesoc_sdram_master_p1_rddata_valid = gw2ddrphy_dfi_p1_rddata_valid;
assign basesoc_sdram_slave_p0_address = basesoc_sdram_dfi_p0_address;
assign basesoc_sdram_slave_p0_bank = basesoc_sdram_dfi_p0_bank;
assign basesoc_sdram_slave_p0_cas_n = basesoc_sdram_dfi_p0_cas_n;
assign basesoc_sdram_slave_p0_cs_n = basesoc_sdram_dfi_p0_cs_n;
assign basesoc_sdram_slave_p0_ras_n = basesoc_sdram_dfi_p0_ras_n;
assign basesoc_sdram_slave_p0_we_n = basesoc_sdram_dfi_p0_we_n;
assign basesoc_sdram_slave_p0_cke = basesoc_sdram_dfi_p0_cke;
assign basesoc_sdram_slave_p0_odt = basesoc_sdram_dfi_p0_odt;
assign basesoc_sdram_slave_p0_reset_n = basesoc_sdram_dfi_p0_reset_n;
assign basesoc_sdram_slave_p0_act_n = basesoc_sdram_dfi_p0_act_n;
assign basesoc_sdram_slave_p0_wrdata = basesoc_sdram_dfi_p0_wrdata;
assign basesoc_sdram_slave_p0_wrdata_en = basesoc_sdram_dfi_p0_wrdata_en;
assign basesoc_sdram_slave_p0_wrdata_mask = basesoc_sdram_dfi_p0_wrdata_mask;
assign basesoc_sdram_slave_p0_rddata_en = basesoc_sdram_dfi_p0_rddata_en;
assign basesoc_sdram_dfi_p0_rddata = basesoc_sdram_slave_p0_rddata;
assign basesoc_sdram_dfi_p0_rddata_valid = basesoc_sdram_slave_p0_rddata_valid;
assign basesoc_sdram_slave_p1_address = basesoc_sdram_dfi_p1_address;
assign basesoc_sdram_slave_p1_bank = basesoc_sdram_dfi_p1_bank;
assign basesoc_sdram_slave_p1_cas_n = basesoc_sdram_dfi_p1_cas_n;
assign basesoc_sdram_slave_p1_cs_n = basesoc_sdram_dfi_p1_cs_n;
assign basesoc_sdram_slave_p1_ras_n = basesoc_sdram_dfi_p1_ras_n;
assign basesoc_sdram_slave_p1_we_n = basesoc_sdram_dfi_p1_we_n;
assign basesoc_sdram_slave_p1_cke = basesoc_sdram_dfi_p1_cke;
assign basesoc_sdram_slave_p1_odt = basesoc_sdram_dfi_p1_odt;
assign basesoc_sdram_slave_p1_reset_n = basesoc_sdram_dfi_p1_reset_n;
assign basesoc_sdram_slave_p1_act_n = basesoc_sdram_dfi_p1_act_n;
assign basesoc_sdram_slave_p1_wrdata = basesoc_sdram_dfi_p1_wrdata;
assign basesoc_sdram_slave_p1_wrdata_en = basesoc_sdram_dfi_p1_wrdata_en;
assign basesoc_sdram_slave_p1_wrdata_mask = basesoc_sdram_dfi_p1_wrdata_mask;
assign basesoc_sdram_slave_p1_rddata_en = basesoc_sdram_dfi_p1_rddata_en;
assign basesoc_sdram_dfi_p1_rddata = basesoc_sdram_slave_p1_rddata;
assign basesoc_sdram_dfi_p1_rddata_valid = basesoc_sdram_slave_p1_rddata_valid;
always @(*) begin
    basesoc_sdram_csr_dfi_p0_rddata <= 64'd0;
    basesoc_sdram_csr_dfi_p0_rddata_valid <= 1'd0;
    basesoc_sdram_csr_dfi_p1_rddata <= 64'd0;
    basesoc_sdram_csr_dfi_p1_rddata_valid <= 1'd0;
    basesoc_sdram_ext_dfi_p0_rddata <= 64'd0;
    basesoc_sdram_ext_dfi_p0_rddata_valid <= 1'd0;
    basesoc_sdram_ext_dfi_p1_rddata <= 64'd0;
    basesoc_sdram_ext_dfi_p1_rddata_valid <= 1'd0;
    basesoc_sdram_master_p0_act_n <= 1'd1;
    basesoc_sdram_master_p0_address <= 13'd0;
    basesoc_sdram_master_p0_bank <= 3'd0;
    basesoc_sdram_master_p0_cas_n <= 1'd1;
    basesoc_sdram_master_p0_cke <= 1'd0;
    basesoc_sdram_master_p0_cs_n <= 1'd1;
    basesoc_sdram_master_p0_odt <= 1'd0;
    basesoc_sdram_master_p0_ras_n <= 1'd1;
    basesoc_sdram_master_p0_rddata_en <= 1'd0;
    basesoc_sdram_master_p0_reset_n <= 1'd0;
    basesoc_sdram_master_p0_we_n <= 1'd1;
    basesoc_sdram_master_p0_wrdata <= 64'd0;
    basesoc_sdram_master_p0_wrdata_en <= 1'd0;
    basesoc_sdram_master_p0_wrdata_mask <= 8'd0;
    basesoc_sdram_master_p1_act_n <= 1'd1;
    basesoc_sdram_master_p1_address <= 13'd0;
    basesoc_sdram_master_p1_bank <= 3'd0;
    basesoc_sdram_master_p1_cas_n <= 1'd1;
    basesoc_sdram_master_p1_cke <= 1'd0;
    basesoc_sdram_master_p1_cs_n <= 1'd1;
    basesoc_sdram_master_p1_odt <= 1'd0;
    basesoc_sdram_master_p1_ras_n <= 1'd1;
    basesoc_sdram_master_p1_rddata_en <= 1'd0;
    basesoc_sdram_master_p1_reset_n <= 1'd0;
    basesoc_sdram_master_p1_we_n <= 1'd1;
    basesoc_sdram_master_p1_wrdata <= 64'd0;
    basesoc_sdram_master_p1_wrdata_en <= 1'd0;
    basesoc_sdram_master_p1_wrdata_mask <= 8'd0;
    basesoc_sdram_slave_p0_rddata <= 64'd0;
    basesoc_sdram_slave_p0_rddata_valid <= 1'd0;
    basesoc_sdram_slave_p1_rddata <= 64'd0;
    basesoc_sdram_slave_p1_rddata_valid <= 1'd0;
    if (basesoc_sdram_sel) begin
        if (basesoc_sdram_ext_dfi_sel) begin
            basesoc_sdram_master_p0_address <= basesoc_sdram_ext_dfi_p0_address;
            basesoc_sdram_master_p0_bank <= basesoc_sdram_ext_dfi_p0_bank;
            basesoc_sdram_master_p0_cas_n <= basesoc_sdram_ext_dfi_p0_cas_n;
            basesoc_sdram_master_p0_cs_n <= basesoc_sdram_ext_dfi_p0_cs_n;
            basesoc_sdram_master_p0_ras_n <= basesoc_sdram_ext_dfi_p0_ras_n;
            basesoc_sdram_master_p0_we_n <= basesoc_sdram_ext_dfi_p0_we_n;
            basesoc_sdram_master_p0_cke <= basesoc_sdram_ext_dfi_p0_cke;
            basesoc_sdram_master_p0_odt <= basesoc_sdram_ext_dfi_p0_odt;
            basesoc_sdram_master_p0_reset_n <= basesoc_sdram_ext_dfi_p0_reset_n;
            basesoc_sdram_master_p0_act_n <= basesoc_sdram_ext_dfi_p0_act_n;
            basesoc_sdram_master_p0_wrdata <= basesoc_sdram_ext_dfi_p0_wrdata;
            basesoc_sdram_master_p0_wrdata_en <= basesoc_sdram_ext_dfi_p0_wrdata_en;
            basesoc_sdram_master_p0_wrdata_mask <= basesoc_sdram_ext_dfi_p0_wrdata_mask;
            basesoc_sdram_master_p0_rddata_en <= basesoc_sdram_ext_dfi_p0_rddata_en;
            basesoc_sdram_ext_dfi_p0_rddata <= basesoc_sdram_master_p0_rddata;
            basesoc_sdram_ext_dfi_p0_rddata_valid <= basesoc_sdram_master_p0_rddata_valid;
            basesoc_sdram_master_p1_address <= basesoc_sdram_ext_dfi_p1_address;
            basesoc_sdram_master_p1_bank <= basesoc_sdram_ext_dfi_p1_bank;
            basesoc_sdram_master_p1_cas_n <= basesoc_sdram_ext_dfi_p1_cas_n;
            basesoc_sdram_master_p1_cs_n <= basesoc_sdram_ext_dfi_p1_cs_n;
            basesoc_sdram_master_p1_ras_n <= basesoc_sdram_ext_dfi_p1_ras_n;
            basesoc_sdram_master_p1_we_n <= basesoc_sdram_ext_dfi_p1_we_n;
            basesoc_sdram_master_p1_cke <= basesoc_sdram_ext_dfi_p1_cke;
            basesoc_sdram_master_p1_odt <= basesoc_sdram_ext_dfi_p1_odt;
            basesoc_sdram_master_p1_reset_n <= basesoc_sdram_ext_dfi_p1_reset_n;
            basesoc_sdram_master_p1_act_n <= basesoc_sdram_ext_dfi_p1_act_n;
            basesoc_sdram_master_p1_wrdata <= basesoc_sdram_ext_dfi_p1_wrdata;
            basesoc_sdram_master_p1_wrdata_en <= basesoc_sdram_ext_dfi_p1_wrdata_en;
            basesoc_sdram_master_p1_wrdata_mask <= basesoc_sdram_ext_dfi_p1_wrdata_mask;
            basesoc_sdram_master_p1_rddata_en <= basesoc_sdram_ext_dfi_p1_rddata_en;
            basesoc_sdram_ext_dfi_p1_rddata <= basesoc_sdram_master_p1_rddata;
            basesoc_sdram_ext_dfi_p1_rddata_valid <= basesoc_sdram_master_p1_rddata_valid;
        end else begin
            basesoc_sdram_master_p0_address <= basesoc_sdram_slave_p0_address;
            basesoc_sdram_master_p0_bank <= basesoc_sdram_slave_p0_bank;
            basesoc_sdram_master_p0_cas_n <= basesoc_sdram_slave_p0_cas_n;
            basesoc_sdram_master_p0_cs_n <= basesoc_sdram_slave_p0_cs_n;
            basesoc_sdram_master_p0_ras_n <= basesoc_sdram_slave_p0_ras_n;
            basesoc_sdram_master_p0_we_n <= basesoc_sdram_slave_p0_we_n;
            basesoc_sdram_master_p0_cke <= basesoc_sdram_slave_p0_cke;
            basesoc_sdram_master_p0_odt <= basesoc_sdram_slave_p0_odt;
            basesoc_sdram_master_p0_reset_n <= basesoc_sdram_slave_p0_reset_n;
            basesoc_sdram_master_p0_act_n <= basesoc_sdram_slave_p0_act_n;
            basesoc_sdram_master_p0_wrdata <= basesoc_sdram_slave_p0_wrdata;
            basesoc_sdram_master_p0_wrdata_en <= basesoc_sdram_slave_p0_wrdata_en;
            basesoc_sdram_master_p0_wrdata_mask <= basesoc_sdram_slave_p0_wrdata_mask;
            basesoc_sdram_master_p0_rddata_en <= basesoc_sdram_slave_p0_rddata_en;
            basesoc_sdram_slave_p0_rddata <= basesoc_sdram_master_p0_rddata;
            basesoc_sdram_slave_p0_rddata_valid <= basesoc_sdram_master_p0_rddata_valid;
            basesoc_sdram_master_p1_address <= basesoc_sdram_slave_p1_address;
            basesoc_sdram_master_p1_bank <= basesoc_sdram_slave_p1_bank;
            basesoc_sdram_master_p1_cas_n <= basesoc_sdram_slave_p1_cas_n;
            basesoc_sdram_master_p1_cs_n <= basesoc_sdram_slave_p1_cs_n;
            basesoc_sdram_master_p1_ras_n <= basesoc_sdram_slave_p1_ras_n;
            basesoc_sdram_master_p1_we_n <= basesoc_sdram_slave_p1_we_n;
            basesoc_sdram_master_p1_cke <= basesoc_sdram_slave_p1_cke;
            basesoc_sdram_master_p1_odt <= basesoc_sdram_slave_p1_odt;
            basesoc_sdram_master_p1_reset_n <= basesoc_sdram_slave_p1_reset_n;
            basesoc_sdram_master_p1_act_n <= basesoc_sdram_slave_p1_act_n;
            basesoc_sdram_master_p1_wrdata <= basesoc_sdram_slave_p1_wrdata;
            basesoc_sdram_master_p1_wrdata_en <= basesoc_sdram_slave_p1_wrdata_en;
            basesoc_sdram_master_p1_wrdata_mask <= basesoc_sdram_slave_p1_wrdata_mask;
            basesoc_sdram_master_p1_rddata_en <= basesoc_sdram_slave_p1_rddata_en;
            basesoc_sdram_slave_p1_rddata <= basesoc_sdram_master_p1_rddata;
            basesoc_sdram_slave_p1_rddata_valid <= basesoc_sdram_master_p1_rddata_valid;
            if (1'd0) begin
                basesoc_sdram_master_p0_cs_n <= {2{basesoc_sdram_slave_p0_cs_n}};
                basesoc_sdram_master_p1_cs_n <= {2{basesoc_sdram_slave_p1_cs_n}};
            end
        end
    end else begin
        basesoc_sdram_master_p0_address <= basesoc_sdram_csr_dfi_p0_address;
        basesoc_sdram_master_p0_bank <= basesoc_sdram_csr_dfi_p0_bank;
        basesoc_sdram_master_p0_cas_n <= basesoc_sdram_csr_dfi_p0_cas_n;
        basesoc_sdram_master_p0_cs_n <= basesoc_sdram_csr_dfi_p0_cs_n;
        basesoc_sdram_master_p0_ras_n <= basesoc_sdram_csr_dfi_p0_ras_n;
        basesoc_sdram_master_p0_we_n <= basesoc_sdram_csr_dfi_p0_we_n;
        basesoc_sdram_master_p0_cke <= basesoc_sdram_csr_dfi_p0_cke;
        basesoc_sdram_master_p0_odt <= basesoc_sdram_csr_dfi_p0_odt;
        basesoc_sdram_master_p0_reset_n <= basesoc_sdram_csr_dfi_p0_reset_n;
        basesoc_sdram_master_p0_act_n <= basesoc_sdram_csr_dfi_p0_act_n;
        basesoc_sdram_master_p0_wrdata <= basesoc_sdram_csr_dfi_p0_wrdata;
        basesoc_sdram_master_p0_wrdata_en <= basesoc_sdram_csr_dfi_p0_wrdata_en;
        basesoc_sdram_master_p0_wrdata_mask <= basesoc_sdram_csr_dfi_p0_wrdata_mask;
        basesoc_sdram_master_p0_rddata_en <= basesoc_sdram_csr_dfi_p0_rddata_en;
        basesoc_sdram_csr_dfi_p0_rddata <= basesoc_sdram_master_p0_rddata;
        basesoc_sdram_csr_dfi_p0_rddata_valid <= basesoc_sdram_master_p0_rddata_valid;
        basesoc_sdram_master_p1_address <= basesoc_sdram_csr_dfi_p1_address;
        basesoc_sdram_master_p1_bank <= basesoc_sdram_csr_dfi_p1_bank;
        basesoc_sdram_master_p1_cas_n <= basesoc_sdram_csr_dfi_p1_cas_n;
        basesoc_sdram_master_p1_cs_n <= basesoc_sdram_csr_dfi_p1_cs_n;
        basesoc_sdram_master_p1_ras_n <= basesoc_sdram_csr_dfi_p1_ras_n;
        basesoc_sdram_master_p1_we_n <= basesoc_sdram_csr_dfi_p1_we_n;
        basesoc_sdram_master_p1_cke <= basesoc_sdram_csr_dfi_p1_cke;
        basesoc_sdram_master_p1_odt <= basesoc_sdram_csr_dfi_p1_odt;
        basesoc_sdram_master_p1_reset_n <= basesoc_sdram_csr_dfi_p1_reset_n;
        basesoc_sdram_master_p1_act_n <= basesoc_sdram_csr_dfi_p1_act_n;
        basesoc_sdram_master_p1_wrdata <= basesoc_sdram_csr_dfi_p1_wrdata;
        basesoc_sdram_master_p1_wrdata_en <= basesoc_sdram_csr_dfi_p1_wrdata_en;
        basesoc_sdram_master_p1_wrdata_mask <= basesoc_sdram_csr_dfi_p1_wrdata_mask;
        basesoc_sdram_master_p1_rddata_en <= basesoc_sdram_csr_dfi_p1_rddata_en;
        basesoc_sdram_csr_dfi_p1_rddata <= basesoc_sdram_master_p1_rddata;
        basesoc_sdram_csr_dfi_p1_rddata_valid <= basesoc_sdram_master_p1_rddata_valid;
    end
end
always @(*) begin
    basesoc_sdram_csr_dfi_p0_cke <= 1'd0;
    basesoc_sdram_csr_dfi_p0_cke <= basesoc_sdram_cke;
end
always @(*) begin
    basesoc_sdram_csr_dfi_p1_cke <= 1'd0;
    basesoc_sdram_csr_dfi_p1_cke <= basesoc_sdram_cke;
end
always @(*) begin
    basesoc_sdram_csr_dfi_p0_odt <= 1'd0;
    basesoc_sdram_csr_dfi_p0_odt <= basesoc_sdram_odt;
end
always @(*) begin
    basesoc_sdram_csr_dfi_p1_odt <= 1'd0;
    basesoc_sdram_csr_dfi_p1_odt <= basesoc_sdram_odt;
end
assign basesoc_sdram_csr_dfi_p0_reset_n = basesoc_sdram_reset_n;
assign basesoc_sdram_csr_dfi_p1_reset_n = basesoc_sdram_reset_n;
always @(*) begin
    basesoc_sdram_csr_dfi_p0_cas_n <= 1'd1;
    basesoc_sdram_csr_dfi_p0_cs_n <= 1'd1;
    basesoc_sdram_csr_dfi_p0_ras_n <= 1'd1;
    basesoc_sdram_csr_dfi_p0_we_n <= 1'd1;
    if (basesoc_sdram_phaseinjector0_command_issue_re) begin
        if (basesoc_sdram_phaseinjector0_csrfield_cs_top) begin
            basesoc_sdram_csr_dfi_p0_cs_n <= 2'd2;
        end else begin
            if (basesoc_sdram_phaseinjector0_csrfield_cs_bottom) begin
                basesoc_sdram_csr_dfi_p0_cs_n <= 1'd1;
            end else begin
                basesoc_sdram_csr_dfi_p0_cs_n <= {1{(~basesoc_sdram_phaseinjector0_csrfield_cs)}};
            end
        end
        basesoc_sdram_csr_dfi_p0_we_n <= (~basesoc_sdram_phaseinjector0_csrfield_we);
        basesoc_sdram_csr_dfi_p0_cas_n <= (~basesoc_sdram_phaseinjector0_csrfield_cas);
        basesoc_sdram_csr_dfi_p0_ras_n <= (~basesoc_sdram_phaseinjector0_csrfield_ras);
    end else begin
        basesoc_sdram_csr_dfi_p0_cs_n <= {1{1'd1}};
        basesoc_sdram_csr_dfi_p0_we_n <= 1'd1;
        basesoc_sdram_csr_dfi_p0_cas_n <= 1'd1;
        basesoc_sdram_csr_dfi_p0_ras_n <= 1'd1;
    end
end
assign basesoc_sdram_csr_dfi_p0_address = basesoc_sdram_phaseinjector0_address_storage;
assign basesoc_sdram_csr_dfi_p0_bank = basesoc_sdram_phaseinjector0_baddress_storage;
assign basesoc_sdram_csr_dfi_p0_wrdata_en = (basesoc_sdram_phaseinjector0_command_issue_re & basesoc_sdram_phaseinjector0_csrfield_wren);
assign basesoc_sdram_csr_dfi_p0_rddata_en = (basesoc_sdram_phaseinjector0_command_issue_re & basesoc_sdram_phaseinjector0_csrfield_rden);
assign basesoc_sdram_csr_dfi_p0_wrdata = basesoc_sdram_phaseinjector0_wrdata_storage;
assign basesoc_sdram_csr_dfi_p0_wrdata_mask = 1'd0;
always @(*) begin
    basesoc_sdram_csr_dfi_p1_cas_n <= 1'd1;
    basesoc_sdram_csr_dfi_p1_cs_n <= 1'd1;
    basesoc_sdram_csr_dfi_p1_ras_n <= 1'd1;
    basesoc_sdram_csr_dfi_p1_we_n <= 1'd1;
    if (basesoc_sdram_phaseinjector1_command_issue_re) begin
        if (basesoc_sdram_phaseinjector1_csrfield_cs_top) begin
            basesoc_sdram_csr_dfi_p1_cs_n <= 2'd2;
        end else begin
            if (basesoc_sdram_phaseinjector1_csrfield_cs_bottom) begin
                basesoc_sdram_csr_dfi_p1_cs_n <= 1'd1;
            end else begin
                basesoc_sdram_csr_dfi_p1_cs_n <= {1{(~basesoc_sdram_phaseinjector1_csrfield_cs)}};
            end
        end
        basesoc_sdram_csr_dfi_p1_we_n <= (~basesoc_sdram_phaseinjector1_csrfield_we);
        basesoc_sdram_csr_dfi_p1_cas_n <= (~basesoc_sdram_phaseinjector1_csrfield_cas);
        basesoc_sdram_csr_dfi_p1_ras_n <= (~basesoc_sdram_phaseinjector1_csrfield_ras);
    end else begin
        basesoc_sdram_csr_dfi_p1_cs_n <= {1{1'd1}};
        basesoc_sdram_csr_dfi_p1_we_n <= 1'd1;
        basesoc_sdram_csr_dfi_p1_cas_n <= 1'd1;
        basesoc_sdram_csr_dfi_p1_ras_n <= 1'd1;
    end
end
assign basesoc_sdram_csr_dfi_p1_address = basesoc_sdram_phaseinjector1_address_storage;
assign basesoc_sdram_csr_dfi_p1_bank = basesoc_sdram_phaseinjector1_baddress_storage;
assign basesoc_sdram_csr_dfi_p1_wrdata_en = (basesoc_sdram_phaseinjector1_command_issue_re & basesoc_sdram_phaseinjector1_csrfield_wren);
assign basesoc_sdram_csr_dfi_p1_rddata_en = (basesoc_sdram_phaseinjector1_command_issue_re & basesoc_sdram_phaseinjector1_csrfield_rden);
assign basesoc_sdram_csr_dfi_p1_wrdata = basesoc_sdram_phaseinjector1_wrdata_storage;
assign basesoc_sdram_csr_dfi_p1_wrdata_mask = 1'd0;
assign basesoc_sdram_bankmachine0_req_valid = basesoc_sdram_interface_bank0_valid;
assign basesoc_sdram_interface_bank0_ready = basesoc_sdram_bankmachine0_req_ready;
assign basesoc_sdram_bankmachine0_req_we = basesoc_sdram_interface_bank0_we;
assign basesoc_sdram_bankmachine0_req_addr = basesoc_sdram_interface_bank0_addr;
assign basesoc_sdram_interface_bank0_lock = basesoc_sdram_bankmachine0_req_lock;
assign basesoc_sdram_interface_bank0_wdata_ready = basesoc_sdram_bankmachine0_req_wdata_ready;
assign basesoc_sdram_interface_bank0_rdata_valid = basesoc_sdram_bankmachine0_req_rdata_valid;
assign basesoc_sdram_bankmachine1_req_valid = basesoc_sdram_interface_bank1_valid;
assign basesoc_sdram_interface_bank1_ready = basesoc_sdram_bankmachine1_req_ready;
assign basesoc_sdram_bankmachine1_req_we = basesoc_sdram_interface_bank1_we;
assign basesoc_sdram_bankmachine1_req_addr = basesoc_sdram_interface_bank1_addr;
assign basesoc_sdram_interface_bank1_lock = basesoc_sdram_bankmachine1_req_lock;
assign basesoc_sdram_interface_bank1_wdata_ready = basesoc_sdram_bankmachine1_req_wdata_ready;
assign basesoc_sdram_interface_bank1_rdata_valid = basesoc_sdram_bankmachine1_req_rdata_valid;
assign basesoc_sdram_bankmachine2_req_valid = basesoc_sdram_interface_bank2_valid;
assign basesoc_sdram_interface_bank2_ready = basesoc_sdram_bankmachine2_req_ready;
assign basesoc_sdram_bankmachine2_req_we = basesoc_sdram_interface_bank2_we;
assign basesoc_sdram_bankmachine2_req_addr = basesoc_sdram_interface_bank2_addr;
assign basesoc_sdram_interface_bank2_lock = basesoc_sdram_bankmachine2_req_lock;
assign basesoc_sdram_interface_bank2_wdata_ready = basesoc_sdram_bankmachine2_req_wdata_ready;
assign basesoc_sdram_interface_bank2_rdata_valid = basesoc_sdram_bankmachine2_req_rdata_valid;
assign basesoc_sdram_bankmachine3_req_valid = basesoc_sdram_interface_bank3_valid;
assign basesoc_sdram_interface_bank3_ready = basesoc_sdram_bankmachine3_req_ready;
assign basesoc_sdram_bankmachine3_req_we = basesoc_sdram_interface_bank3_we;
assign basesoc_sdram_bankmachine3_req_addr = basesoc_sdram_interface_bank3_addr;
assign basesoc_sdram_interface_bank3_lock = basesoc_sdram_bankmachine3_req_lock;
assign basesoc_sdram_interface_bank3_wdata_ready = basesoc_sdram_bankmachine3_req_wdata_ready;
assign basesoc_sdram_interface_bank3_rdata_valid = basesoc_sdram_bankmachine3_req_rdata_valid;
assign basesoc_sdram_bankmachine4_req_valid = basesoc_sdram_interface_bank4_valid;
assign basesoc_sdram_interface_bank4_ready = basesoc_sdram_bankmachine4_req_ready;
assign basesoc_sdram_bankmachine4_req_we = basesoc_sdram_interface_bank4_we;
assign basesoc_sdram_bankmachine4_req_addr = basesoc_sdram_interface_bank4_addr;
assign basesoc_sdram_interface_bank4_lock = basesoc_sdram_bankmachine4_req_lock;
assign basesoc_sdram_interface_bank4_wdata_ready = basesoc_sdram_bankmachine4_req_wdata_ready;
assign basesoc_sdram_interface_bank4_rdata_valid = basesoc_sdram_bankmachine4_req_rdata_valid;
assign basesoc_sdram_bankmachine5_req_valid = basesoc_sdram_interface_bank5_valid;
assign basesoc_sdram_interface_bank5_ready = basesoc_sdram_bankmachine5_req_ready;
assign basesoc_sdram_bankmachine5_req_we = basesoc_sdram_interface_bank5_we;
assign basesoc_sdram_bankmachine5_req_addr = basesoc_sdram_interface_bank5_addr;
assign basesoc_sdram_interface_bank5_lock = basesoc_sdram_bankmachine5_req_lock;
assign basesoc_sdram_interface_bank5_wdata_ready = basesoc_sdram_bankmachine5_req_wdata_ready;
assign basesoc_sdram_interface_bank5_rdata_valid = basesoc_sdram_bankmachine5_req_rdata_valid;
assign basesoc_sdram_bankmachine6_req_valid = basesoc_sdram_interface_bank6_valid;
assign basesoc_sdram_interface_bank6_ready = basesoc_sdram_bankmachine6_req_ready;
assign basesoc_sdram_bankmachine6_req_we = basesoc_sdram_interface_bank6_we;
assign basesoc_sdram_bankmachine6_req_addr = basesoc_sdram_interface_bank6_addr;
assign basesoc_sdram_interface_bank6_lock = basesoc_sdram_bankmachine6_req_lock;
assign basesoc_sdram_interface_bank6_wdata_ready = basesoc_sdram_bankmachine6_req_wdata_ready;
assign basesoc_sdram_interface_bank6_rdata_valid = basesoc_sdram_bankmachine6_req_rdata_valid;
assign basesoc_sdram_bankmachine7_req_valid = basesoc_sdram_interface_bank7_valid;
assign basesoc_sdram_interface_bank7_ready = basesoc_sdram_bankmachine7_req_ready;
assign basesoc_sdram_bankmachine7_req_we = basesoc_sdram_interface_bank7_we;
assign basesoc_sdram_bankmachine7_req_addr = basesoc_sdram_interface_bank7_addr;
assign basesoc_sdram_interface_bank7_lock = basesoc_sdram_bankmachine7_req_lock;
assign basesoc_sdram_interface_bank7_wdata_ready = basesoc_sdram_bankmachine7_req_wdata_ready;
assign basesoc_sdram_interface_bank7_rdata_valid = basesoc_sdram_bankmachine7_req_rdata_valid;
assign basesoc_sdram_timer_wait = (~basesoc_sdram_timer_done0);
assign basesoc_sdram_postponer_req_i = basesoc_sdram_timer_done0;
assign basesoc_sdram_wants_refresh = basesoc_sdram_postponer_req_o;
assign basesoc_sdram_wants_zqcs = basesoc_sdram_zqcs_timer_done0;
assign basesoc_sdram_zqcs_timer_wait = (~basesoc_sdram_zqcs_executer_done);
assign basesoc_sdram_timer_done1 = (basesoc_sdram_timer_count1 == 1'd0);
assign basesoc_sdram_timer_done0 = basesoc_sdram_timer_done1;
assign basesoc_sdram_timer_count0 = basesoc_sdram_timer_count1;
assign basesoc_sdram_sequencer_start1 = (basesoc_sdram_sequencer_start0 | (basesoc_sdram_sequencer_count != 1'd0));
assign basesoc_sdram_sequencer_done0 = (basesoc_sdram_sequencer_done1 & (basesoc_sdram_sequencer_count == 1'd0));
assign basesoc_sdram_zqcs_timer_done1 = (basesoc_sdram_zqcs_timer_count1 == 1'd0);
assign basesoc_sdram_zqcs_timer_done0 = basesoc_sdram_zqcs_timer_done1;
assign basesoc_sdram_zqcs_timer_count0 = basesoc_sdram_zqcs_timer_count1;
always @(*) begin
    basesoc_sdram_cmd_last <= 1'd0;
    basesoc_sdram_cmd_valid <= 1'd0;
    basesoc_sdram_sequencer_start0 <= 1'd0;
    basesoc_sdram_zqcs_executer_start <= 1'd0;
    refresher_next_state <= 2'd0;
    refresher_next_state <= refresher_state;
    case (refresher_state)
        1'd1: begin
            basesoc_sdram_cmd_valid <= 1'd1;
            if (basesoc_sdram_cmd_ready) begin
                basesoc_sdram_sequencer_start0 <= 1'd1;
                refresher_next_state <= 2'd2;
            end
        end
        2'd2: begin
            basesoc_sdram_cmd_valid <= 1'd1;
            if (basesoc_sdram_sequencer_done0) begin
                if (basesoc_sdram_wants_zqcs) begin
                    basesoc_sdram_zqcs_executer_start <= 1'd1;
                    refresher_next_state <= 2'd3;
                end else begin
                    basesoc_sdram_cmd_valid <= 1'd0;
                    basesoc_sdram_cmd_last <= 1'd1;
                    refresher_next_state <= 1'd0;
                end
            end
        end
        2'd3: begin
            basesoc_sdram_cmd_valid <= 1'd1;
            if (basesoc_sdram_zqcs_executer_done) begin
                basesoc_sdram_cmd_valid <= 1'd0;
                basesoc_sdram_cmd_last <= 1'd1;
                refresher_next_state <= 1'd0;
            end
        end
        default: begin
            if (1'd1) begin
                if (basesoc_sdram_wants_refresh) begin
                    refresher_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign basesoc_sdram_bankmachine0_sink_valid = basesoc_sdram_bankmachine0_req_valid;
assign basesoc_sdram_bankmachine0_req_ready = basesoc_sdram_bankmachine0_sink_ready;
assign basesoc_sdram_bankmachine0_sink_payload_we = basesoc_sdram_bankmachine0_req_we;
assign basesoc_sdram_bankmachine0_sink_payload_addr = basesoc_sdram_bankmachine0_req_addr;
assign basesoc_sdram_bankmachine0_sink_sink_valid = basesoc_sdram_bankmachine0_source_valid;
assign basesoc_sdram_bankmachine0_source_ready = basesoc_sdram_bankmachine0_sink_sink_ready;
assign basesoc_sdram_bankmachine0_sink_sink_first = basesoc_sdram_bankmachine0_source_first;
assign basesoc_sdram_bankmachine0_sink_sink_last = basesoc_sdram_bankmachine0_source_last;
assign basesoc_sdram_bankmachine0_sink_sink_payload_we = basesoc_sdram_bankmachine0_source_payload_we;
assign basesoc_sdram_bankmachine0_sink_sink_payload_addr = basesoc_sdram_bankmachine0_source_payload_addr;
assign basesoc_sdram_bankmachine0_source_source_ready = (basesoc_sdram_bankmachine0_req_wdata_ready | basesoc_sdram_bankmachine0_req_rdata_valid);
assign basesoc_sdram_bankmachine0_req_lock = (basesoc_sdram_bankmachine0_source_valid | basesoc_sdram_bankmachine0_source_source_valid);
assign basesoc_sdram_bankmachine0_row_hit = (basesoc_sdram_bankmachine0_row == basesoc_sdram_bankmachine0_source_source_payload_addr[19:7]);
assign basesoc_sdram_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
    basesoc_sdram_bankmachine0_cmd_payload_a <= 13'd0;
    if (basesoc_sdram_bankmachine0_row_col_n_addr_sel) begin
        basesoc_sdram_bankmachine0_cmd_payload_a <= basesoc_sdram_bankmachine0_source_source_payload_addr[19:7];
    end else begin
        basesoc_sdram_bankmachine0_cmd_payload_a <= ((basesoc_sdram_bankmachine0_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine0_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_sdram_bankmachine0_twtpcon_valid = ((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_ready) & basesoc_sdram_bankmachine0_cmd_payload_is_write);
assign basesoc_sdram_bankmachine0_trccon_valid = ((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_ready) & basesoc_sdram_bankmachine0_row_open);
assign basesoc_sdram_bankmachine0_trascon_valid = ((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_ready) & basesoc_sdram_bankmachine0_row_open);
always @(*) begin
    basesoc_sdram_bankmachine0_auto_precharge <= 1'd0;
    if ((basesoc_sdram_bankmachine0_source_valid & basesoc_sdram_bankmachine0_source_source_valid)) begin
        if ((basesoc_sdram_bankmachine0_source_payload_addr[19:7] != basesoc_sdram_bankmachine0_source_source_payload_addr[19:7])) begin
            basesoc_sdram_bankmachine0_auto_precharge <= (basesoc_sdram_bankmachine0_row_close == 1'd0);
        end
    end
end
assign basesoc_sdram_bankmachine0_syncfifo0_din = {basesoc_sdram_bankmachine0_fifo_in_last, basesoc_sdram_bankmachine0_fifo_in_first, basesoc_sdram_bankmachine0_fifo_in_payload_addr, basesoc_sdram_bankmachine0_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine0_fifo_out_last, basesoc_sdram_bankmachine0_fifo_out_first, basesoc_sdram_bankmachine0_fifo_out_payload_addr, basesoc_sdram_bankmachine0_fifo_out_payload_we} = basesoc_sdram_bankmachine0_syncfifo0_dout;
assign basesoc_sdram_bankmachine0_sink_ready = basesoc_sdram_bankmachine0_syncfifo0_writable;
assign basesoc_sdram_bankmachine0_syncfifo0_we = basesoc_sdram_bankmachine0_sink_valid;
assign basesoc_sdram_bankmachine0_fifo_in_first = basesoc_sdram_bankmachine0_sink_first;
assign basesoc_sdram_bankmachine0_fifo_in_last = basesoc_sdram_bankmachine0_sink_last;
assign basesoc_sdram_bankmachine0_fifo_in_payload_we = basesoc_sdram_bankmachine0_sink_payload_we;
assign basesoc_sdram_bankmachine0_fifo_in_payload_addr = basesoc_sdram_bankmachine0_sink_payload_addr;
assign basesoc_sdram_bankmachine0_source_valid = basesoc_sdram_bankmachine0_syncfifo0_readable;
assign basesoc_sdram_bankmachine0_source_first = basesoc_sdram_bankmachine0_fifo_out_first;
assign basesoc_sdram_bankmachine0_source_last = basesoc_sdram_bankmachine0_fifo_out_last;
assign basesoc_sdram_bankmachine0_source_payload_we = basesoc_sdram_bankmachine0_fifo_out_payload_we;
assign basesoc_sdram_bankmachine0_source_payload_addr = basesoc_sdram_bankmachine0_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine0_syncfifo0_re = basesoc_sdram_bankmachine0_source_ready;
always @(*) begin
    basesoc_sdram_bankmachine0_wrport_adr <= 3'd0;
    if (basesoc_sdram_bankmachine0_replace) begin
        basesoc_sdram_bankmachine0_wrport_adr <= (basesoc_sdram_bankmachine0_produce - 1'd1);
    end else begin
        basesoc_sdram_bankmachine0_wrport_adr <= basesoc_sdram_bankmachine0_produce;
    end
end
assign basesoc_sdram_bankmachine0_wrport_dat_w = basesoc_sdram_bankmachine0_syncfifo0_din;
assign basesoc_sdram_bankmachine0_wrport_we = (basesoc_sdram_bankmachine0_syncfifo0_we & (basesoc_sdram_bankmachine0_syncfifo0_writable | basesoc_sdram_bankmachine0_replace));
assign basesoc_sdram_bankmachine0_do_read = (basesoc_sdram_bankmachine0_syncfifo0_readable & basesoc_sdram_bankmachine0_syncfifo0_re);
assign basesoc_sdram_bankmachine0_rdport_adr = basesoc_sdram_bankmachine0_consume;
assign basesoc_sdram_bankmachine0_syncfifo0_dout = basesoc_sdram_bankmachine0_rdport_dat_r;
assign basesoc_sdram_bankmachine0_syncfifo0_writable = (basesoc_sdram_bankmachine0_level != 4'd8);
assign basesoc_sdram_bankmachine0_syncfifo0_readable = (basesoc_sdram_bankmachine0_level != 1'd0);
assign basesoc_sdram_bankmachine0_pipe_valid_sink_ready = ((~basesoc_sdram_bankmachine0_pipe_valid_source_valid) | basesoc_sdram_bankmachine0_pipe_valid_source_ready);
assign basesoc_sdram_bankmachine0_pipe_valid_sink_valid = basesoc_sdram_bankmachine0_sink_sink_valid;
assign basesoc_sdram_bankmachine0_sink_sink_ready = basesoc_sdram_bankmachine0_pipe_valid_sink_ready;
assign basesoc_sdram_bankmachine0_pipe_valid_sink_first = basesoc_sdram_bankmachine0_sink_sink_first;
assign basesoc_sdram_bankmachine0_pipe_valid_sink_last = basesoc_sdram_bankmachine0_sink_sink_last;
assign basesoc_sdram_bankmachine0_pipe_valid_sink_payload_we = basesoc_sdram_bankmachine0_sink_sink_payload_we;
assign basesoc_sdram_bankmachine0_pipe_valid_sink_payload_addr = basesoc_sdram_bankmachine0_sink_sink_payload_addr;
assign basesoc_sdram_bankmachine0_source_source_valid = basesoc_sdram_bankmachine0_pipe_valid_source_valid;
assign basesoc_sdram_bankmachine0_pipe_valid_source_ready = basesoc_sdram_bankmachine0_source_source_ready;
assign basesoc_sdram_bankmachine0_source_source_first = basesoc_sdram_bankmachine0_pipe_valid_source_first;
assign basesoc_sdram_bankmachine0_source_source_last = basesoc_sdram_bankmachine0_pipe_valid_source_last;
assign basesoc_sdram_bankmachine0_source_source_payload_we = basesoc_sdram_bankmachine0_pipe_valid_source_payload_we;
assign basesoc_sdram_bankmachine0_source_source_payload_addr = basesoc_sdram_bankmachine0_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine0_next_state <= 3'd0;
    basesoc_sdram_bankmachine0_cmd_payload_cas <= 1'd0;
    basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd0;
    basesoc_sdram_bankmachine0_cmd_payload_is_read <= 1'd0;
    basesoc_sdram_bankmachine0_cmd_payload_is_write <= 1'd0;
    basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd0;
    basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd0;
    basesoc_sdram_bankmachine0_cmd_valid <= 1'd0;
    basesoc_sdram_bankmachine0_refresh_gnt <= 1'd0;
    basesoc_sdram_bankmachine0_req_rdata_valid <= 1'd0;
    basesoc_sdram_bankmachine0_req_wdata_ready <= 1'd0;
    basesoc_sdram_bankmachine0_row_close <= 1'd0;
    basesoc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd0;
    basesoc_sdram_bankmachine0_row_open <= 1'd0;
    bankmachine0_next_state <= bankmachine0_state;
    case (bankmachine0_state)
        1'd1: begin
            if ((basesoc_sdram_bankmachine0_twtpcon_ready & basesoc_sdram_bankmachine0_trascon_ready)) begin
                basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
                if (basesoc_sdram_bankmachine0_cmd_ready) begin
                    bankmachine0_next_state <= 3'd5;
                end
                basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
                basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
                basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_sdram_bankmachine0_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_sdram_bankmachine0_twtpcon_ready & basesoc_sdram_bankmachine0_trascon_ready)) begin
                bankmachine0_next_state <= 3'd5;
            end
            basesoc_sdram_bankmachine0_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_sdram_bankmachine0_trccon_ready) begin
                basesoc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd1;
                basesoc_sdram_bankmachine0_row_open <= 1'd1;
                basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
                basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_sdram_bankmachine0_cmd_ready) begin
                    bankmachine0_next_state <= 3'd6;
                end
                basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_sdram_bankmachine0_twtpcon_ready) begin
                basesoc_sdram_bankmachine0_refresh_gnt <= 1'd1;
            end
            basesoc_sdram_bankmachine0_row_close <= 1'd1;
            basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_sdram_bankmachine0_refresh_req)) begin
                bankmachine0_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine0_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine0_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_sdram_bankmachine0_refresh_req) begin
                bankmachine0_next_state <= 3'd4;
            end else begin
                if (basesoc_sdram_bankmachine0_source_source_valid) begin
                    if (basesoc_sdram_bankmachine0_row_opened) begin
                        if (basesoc_sdram_bankmachine0_row_hit) begin
                            basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
                            if (basesoc_sdram_bankmachine0_source_source_payload_we) begin
                                basesoc_sdram_bankmachine0_req_wdata_ready <= basesoc_sdram_bankmachine0_cmd_ready;
                                basesoc_sdram_bankmachine0_cmd_payload_is_write <= 1'd1;
                                basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_sdram_bankmachine0_req_rdata_valid <= basesoc_sdram_bankmachine0_cmd_ready;
                                basesoc_sdram_bankmachine0_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_sdram_bankmachine0_cmd_payload_cas <= 1'd1;
                            if ((basesoc_sdram_bankmachine0_cmd_ready & basesoc_sdram_bankmachine0_auto_precharge)) begin
                                bankmachine0_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine0_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine0_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_sdram_bankmachine1_sink_valid = basesoc_sdram_bankmachine1_req_valid;
assign basesoc_sdram_bankmachine1_req_ready = basesoc_sdram_bankmachine1_sink_ready;
assign basesoc_sdram_bankmachine1_sink_payload_we = basesoc_sdram_bankmachine1_req_we;
assign basesoc_sdram_bankmachine1_sink_payload_addr = basesoc_sdram_bankmachine1_req_addr;
assign basesoc_sdram_bankmachine1_sink_sink_valid = basesoc_sdram_bankmachine1_source_valid;
assign basesoc_sdram_bankmachine1_source_ready = basesoc_sdram_bankmachine1_sink_sink_ready;
assign basesoc_sdram_bankmachine1_sink_sink_first = basesoc_sdram_bankmachine1_source_first;
assign basesoc_sdram_bankmachine1_sink_sink_last = basesoc_sdram_bankmachine1_source_last;
assign basesoc_sdram_bankmachine1_sink_sink_payload_we = basesoc_sdram_bankmachine1_source_payload_we;
assign basesoc_sdram_bankmachine1_sink_sink_payload_addr = basesoc_sdram_bankmachine1_source_payload_addr;
assign basesoc_sdram_bankmachine1_source_source_ready = (basesoc_sdram_bankmachine1_req_wdata_ready | basesoc_sdram_bankmachine1_req_rdata_valid);
assign basesoc_sdram_bankmachine1_req_lock = (basesoc_sdram_bankmachine1_source_valid | basesoc_sdram_bankmachine1_source_source_valid);
assign basesoc_sdram_bankmachine1_row_hit = (basesoc_sdram_bankmachine1_row == basesoc_sdram_bankmachine1_source_source_payload_addr[19:7]);
assign basesoc_sdram_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
    basesoc_sdram_bankmachine1_cmd_payload_a <= 13'd0;
    if (basesoc_sdram_bankmachine1_row_col_n_addr_sel) begin
        basesoc_sdram_bankmachine1_cmd_payload_a <= basesoc_sdram_bankmachine1_source_source_payload_addr[19:7];
    end else begin
        basesoc_sdram_bankmachine1_cmd_payload_a <= ((basesoc_sdram_bankmachine1_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine1_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_sdram_bankmachine1_twtpcon_valid = ((basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_ready) & basesoc_sdram_bankmachine1_cmd_payload_is_write);
assign basesoc_sdram_bankmachine1_trccon_valid = ((basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_ready) & basesoc_sdram_bankmachine1_row_open);
assign basesoc_sdram_bankmachine1_trascon_valid = ((basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_ready) & basesoc_sdram_bankmachine1_row_open);
always @(*) begin
    basesoc_sdram_bankmachine1_auto_precharge <= 1'd0;
    if ((basesoc_sdram_bankmachine1_source_valid & basesoc_sdram_bankmachine1_source_source_valid)) begin
        if ((basesoc_sdram_bankmachine1_source_payload_addr[19:7] != basesoc_sdram_bankmachine1_source_source_payload_addr[19:7])) begin
            basesoc_sdram_bankmachine1_auto_precharge <= (basesoc_sdram_bankmachine1_row_close == 1'd0);
        end
    end
end
assign basesoc_sdram_bankmachine1_syncfifo1_din = {basesoc_sdram_bankmachine1_fifo_in_last, basesoc_sdram_bankmachine1_fifo_in_first, basesoc_sdram_bankmachine1_fifo_in_payload_addr, basesoc_sdram_bankmachine1_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine1_fifo_out_last, basesoc_sdram_bankmachine1_fifo_out_first, basesoc_sdram_bankmachine1_fifo_out_payload_addr, basesoc_sdram_bankmachine1_fifo_out_payload_we} = basesoc_sdram_bankmachine1_syncfifo1_dout;
assign basesoc_sdram_bankmachine1_sink_ready = basesoc_sdram_bankmachine1_syncfifo1_writable;
assign basesoc_sdram_bankmachine1_syncfifo1_we = basesoc_sdram_bankmachine1_sink_valid;
assign basesoc_sdram_bankmachine1_fifo_in_first = basesoc_sdram_bankmachine1_sink_first;
assign basesoc_sdram_bankmachine1_fifo_in_last = basesoc_sdram_bankmachine1_sink_last;
assign basesoc_sdram_bankmachine1_fifo_in_payload_we = basesoc_sdram_bankmachine1_sink_payload_we;
assign basesoc_sdram_bankmachine1_fifo_in_payload_addr = basesoc_sdram_bankmachine1_sink_payload_addr;
assign basesoc_sdram_bankmachine1_source_valid = basesoc_sdram_bankmachine1_syncfifo1_readable;
assign basesoc_sdram_bankmachine1_source_first = basesoc_sdram_bankmachine1_fifo_out_first;
assign basesoc_sdram_bankmachine1_source_last = basesoc_sdram_bankmachine1_fifo_out_last;
assign basesoc_sdram_bankmachine1_source_payload_we = basesoc_sdram_bankmachine1_fifo_out_payload_we;
assign basesoc_sdram_bankmachine1_source_payload_addr = basesoc_sdram_bankmachine1_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine1_syncfifo1_re = basesoc_sdram_bankmachine1_source_ready;
always @(*) begin
    basesoc_sdram_bankmachine1_wrport_adr <= 3'd0;
    if (basesoc_sdram_bankmachine1_replace) begin
        basesoc_sdram_bankmachine1_wrport_adr <= (basesoc_sdram_bankmachine1_produce - 1'd1);
    end else begin
        basesoc_sdram_bankmachine1_wrport_adr <= basesoc_sdram_bankmachine1_produce;
    end
end
assign basesoc_sdram_bankmachine1_wrport_dat_w = basesoc_sdram_bankmachine1_syncfifo1_din;
assign basesoc_sdram_bankmachine1_wrport_we = (basesoc_sdram_bankmachine1_syncfifo1_we & (basesoc_sdram_bankmachine1_syncfifo1_writable | basesoc_sdram_bankmachine1_replace));
assign basesoc_sdram_bankmachine1_do_read = (basesoc_sdram_bankmachine1_syncfifo1_readable & basesoc_sdram_bankmachine1_syncfifo1_re);
assign basesoc_sdram_bankmachine1_rdport_adr = basesoc_sdram_bankmachine1_consume;
assign basesoc_sdram_bankmachine1_syncfifo1_dout = basesoc_sdram_bankmachine1_rdport_dat_r;
assign basesoc_sdram_bankmachine1_syncfifo1_writable = (basesoc_sdram_bankmachine1_level != 4'd8);
assign basesoc_sdram_bankmachine1_syncfifo1_readable = (basesoc_sdram_bankmachine1_level != 1'd0);
assign basesoc_sdram_bankmachine1_pipe_valid_sink_ready = ((~basesoc_sdram_bankmachine1_pipe_valid_source_valid) | basesoc_sdram_bankmachine1_pipe_valid_source_ready);
assign basesoc_sdram_bankmachine1_pipe_valid_sink_valid = basesoc_sdram_bankmachine1_sink_sink_valid;
assign basesoc_sdram_bankmachine1_sink_sink_ready = basesoc_sdram_bankmachine1_pipe_valid_sink_ready;
assign basesoc_sdram_bankmachine1_pipe_valid_sink_first = basesoc_sdram_bankmachine1_sink_sink_first;
assign basesoc_sdram_bankmachine1_pipe_valid_sink_last = basesoc_sdram_bankmachine1_sink_sink_last;
assign basesoc_sdram_bankmachine1_pipe_valid_sink_payload_we = basesoc_sdram_bankmachine1_sink_sink_payload_we;
assign basesoc_sdram_bankmachine1_pipe_valid_sink_payload_addr = basesoc_sdram_bankmachine1_sink_sink_payload_addr;
assign basesoc_sdram_bankmachine1_source_source_valid = basesoc_sdram_bankmachine1_pipe_valid_source_valid;
assign basesoc_sdram_bankmachine1_pipe_valid_source_ready = basesoc_sdram_bankmachine1_source_source_ready;
assign basesoc_sdram_bankmachine1_source_source_first = basesoc_sdram_bankmachine1_pipe_valid_source_first;
assign basesoc_sdram_bankmachine1_source_source_last = basesoc_sdram_bankmachine1_pipe_valid_source_last;
assign basesoc_sdram_bankmachine1_source_source_payload_we = basesoc_sdram_bankmachine1_pipe_valid_source_payload_we;
assign basesoc_sdram_bankmachine1_source_source_payload_addr = basesoc_sdram_bankmachine1_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine1_next_state <= 3'd0;
    basesoc_sdram_bankmachine1_cmd_payload_cas <= 1'd0;
    basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd0;
    basesoc_sdram_bankmachine1_cmd_payload_is_read <= 1'd0;
    basesoc_sdram_bankmachine1_cmd_payload_is_write <= 1'd0;
    basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd0;
    basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd0;
    basesoc_sdram_bankmachine1_cmd_valid <= 1'd0;
    basesoc_sdram_bankmachine1_refresh_gnt <= 1'd0;
    basesoc_sdram_bankmachine1_req_rdata_valid <= 1'd0;
    basesoc_sdram_bankmachine1_req_wdata_ready <= 1'd0;
    basesoc_sdram_bankmachine1_row_close <= 1'd0;
    basesoc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd0;
    basesoc_sdram_bankmachine1_row_open <= 1'd0;
    bankmachine1_next_state <= bankmachine1_state;
    case (bankmachine1_state)
        1'd1: begin
            if ((basesoc_sdram_bankmachine1_twtpcon_ready & basesoc_sdram_bankmachine1_trascon_ready)) begin
                basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
                if (basesoc_sdram_bankmachine1_cmd_ready) begin
                    bankmachine1_next_state <= 3'd5;
                end
                basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
                basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
                basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_sdram_bankmachine1_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_sdram_bankmachine1_twtpcon_ready & basesoc_sdram_bankmachine1_trascon_ready)) begin
                bankmachine1_next_state <= 3'd5;
            end
            basesoc_sdram_bankmachine1_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_sdram_bankmachine1_trccon_ready) begin
                basesoc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd1;
                basesoc_sdram_bankmachine1_row_open <= 1'd1;
                basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
                basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_sdram_bankmachine1_cmd_ready) begin
                    bankmachine1_next_state <= 3'd6;
                end
                basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_sdram_bankmachine1_twtpcon_ready) begin
                basesoc_sdram_bankmachine1_refresh_gnt <= 1'd1;
            end
            basesoc_sdram_bankmachine1_row_close <= 1'd1;
            basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_sdram_bankmachine1_refresh_req)) begin
                bankmachine1_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine1_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine1_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_sdram_bankmachine1_refresh_req) begin
                bankmachine1_next_state <= 3'd4;
            end else begin
                if (basesoc_sdram_bankmachine1_source_source_valid) begin
                    if (basesoc_sdram_bankmachine1_row_opened) begin
                        if (basesoc_sdram_bankmachine1_row_hit) begin
                            basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
                            if (basesoc_sdram_bankmachine1_source_source_payload_we) begin
                                basesoc_sdram_bankmachine1_req_wdata_ready <= basesoc_sdram_bankmachine1_cmd_ready;
                                basesoc_sdram_bankmachine1_cmd_payload_is_write <= 1'd1;
                                basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_sdram_bankmachine1_req_rdata_valid <= basesoc_sdram_bankmachine1_cmd_ready;
                                basesoc_sdram_bankmachine1_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_sdram_bankmachine1_cmd_payload_cas <= 1'd1;
                            if ((basesoc_sdram_bankmachine1_cmd_ready & basesoc_sdram_bankmachine1_auto_precharge)) begin
                                bankmachine1_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine1_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine1_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_sdram_bankmachine2_sink_valid = basesoc_sdram_bankmachine2_req_valid;
assign basesoc_sdram_bankmachine2_req_ready = basesoc_sdram_bankmachine2_sink_ready;
assign basesoc_sdram_bankmachine2_sink_payload_we = basesoc_sdram_bankmachine2_req_we;
assign basesoc_sdram_bankmachine2_sink_payload_addr = basesoc_sdram_bankmachine2_req_addr;
assign basesoc_sdram_bankmachine2_sink_sink_valid = basesoc_sdram_bankmachine2_source_valid;
assign basesoc_sdram_bankmachine2_source_ready = basesoc_sdram_bankmachine2_sink_sink_ready;
assign basesoc_sdram_bankmachine2_sink_sink_first = basesoc_sdram_bankmachine2_source_first;
assign basesoc_sdram_bankmachine2_sink_sink_last = basesoc_sdram_bankmachine2_source_last;
assign basesoc_sdram_bankmachine2_sink_sink_payload_we = basesoc_sdram_bankmachine2_source_payload_we;
assign basesoc_sdram_bankmachine2_sink_sink_payload_addr = basesoc_sdram_bankmachine2_source_payload_addr;
assign basesoc_sdram_bankmachine2_source_source_ready = (basesoc_sdram_bankmachine2_req_wdata_ready | basesoc_sdram_bankmachine2_req_rdata_valid);
assign basesoc_sdram_bankmachine2_req_lock = (basesoc_sdram_bankmachine2_source_valid | basesoc_sdram_bankmachine2_source_source_valid);
assign basesoc_sdram_bankmachine2_row_hit = (basesoc_sdram_bankmachine2_row == basesoc_sdram_bankmachine2_source_source_payload_addr[19:7]);
assign basesoc_sdram_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
    basesoc_sdram_bankmachine2_cmd_payload_a <= 13'd0;
    if (basesoc_sdram_bankmachine2_row_col_n_addr_sel) begin
        basesoc_sdram_bankmachine2_cmd_payload_a <= basesoc_sdram_bankmachine2_source_source_payload_addr[19:7];
    end else begin
        basesoc_sdram_bankmachine2_cmd_payload_a <= ((basesoc_sdram_bankmachine2_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine2_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_sdram_bankmachine2_twtpcon_valid = ((basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_ready) & basesoc_sdram_bankmachine2_cmd_payload_is_write);
assign basesoc_sdram_bankmachine2_trccon_valid = ((basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_ready) & basesoc_sdram_bankmachine2_row_open);
assign basesoc_sdram_bankmachine2_trascon_valid = ((basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_ready) & basesoc_sdram_bankmachine2_row_open);
always @(*) begin
    basesoc_sdram_bankmachine2_auto_precharge <= 1'd0;
    if ((basesoc_sdram_bankmachine2_source_valid & basesoc_sdram_bankmachine2_source_source_valid)) begin
        if ((basesoc_sdram_bankmachine2_source_payload_addr[19:7] != basesoc_sdram_bankmachine2_source_source_payload_addr[19:7])) begin
            basesoc_sdram_bankmachine2_auto_precharge <= (basesoc_sdram_bankmachine2_row_close == 1'd0);
        end
    end
end
assign basesoc_sdram_bankmachine2_syncfifo2_din = {basesoc_sdram_bankmachine2_fifo_in_last, basesoc_sdram_bankmachine2_fifo_in_first, basesoc_sdram_bankmachine2_fifo_in_payload_addr, basesoc_sdram_bankmachine2_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine2_fifo_out_last, basesoc_sdram_bankmachine2_fifo_out_first, basesoc_sdram_bankmachine2_fifo_out_payload_addr, basesoc_sdram_bankmachine2_fifo_out_payload_we} = basesoc_sdram_bankmachine2_syncfifo2_dout;
assign basesoc_sdram_bankmachine2_sink_ready = basesoc_sdram_bankmachine2_syncfifo2_writable;
assign basesoc_sdram_bankmachine2_syncfifo2_we = basesoc_sdram_bankmachine2_sink_valid;
assign basesoc_sdram_bankmachine2_fifo_in_first = basesoc_sdram_bankmachine2_sink_first;
assign basesoc_sdram_bankmachine2_fifo_in_last = basesoc_sdram_bankmachine2_sink_last;
assign basesoc_sdram_bankmachine2_fifo_in_payload_we = basesoc_sdram_bankmachine2_sink_payload_we;
assign basesoc_sdram_bankmachine2_fifo_in_payload_addr = basesoc_sdram_bankmachine2_sink_payload_addr;
assign basesoc_sdram_bankmachine2_source_valid = basesoc_sdram_bankmachine2_syncfifo2_readable;
assign basesoc_sdram_bankmachine2_source_first = basesoc_sdram_bankmachine2_fifo_out_first;
assign basesoc_sdram_bankmachine2_source_last = basesoc_sdram_bankmachine2_fifo_out_last;
assign basesoc_sdram_bankmachine2_source_payload_we = basesoc_sdram_bankmachine2_fifo_out_payload_we;
assign basesoc_sdram_bankmachine2_source_payload_addr = basesoc_sdram_bankmachine2_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine2_syncfifo2_re = basesoc_sdram_bankmachine2_source_ready;
always @(*) begin
    basesoc_sdram_bankmachine2_wrport_adr <= 3'd0;
    if (basesoc_sdram_bankmachine2_replace) begin
        basesoc_sdram_bankmachine2_wrport_adr <= (basesoc_sdram_bankmachine2_produce - 1'd1);
    end else begin
        basesoc_sdram_bankmachine2_wrport_adr <= basesoc_sdram_bankmachine2_produce;
    end
end
assign basesoc_sdram_bankmachine2_wrport_dat_w = basesoc_sdram_bankmachine2_syncfifo2_din;
assign basesoc_sdram_bankmachine2_wrport_we = (basesoc_sdram_bankmachine2_syncfifo2_we & (basesoc_sdram_bankmachine2_syncfifo2_writable | basesoc_sdram_bankmachine2_replace));
assign basesoc_sdram_bankmachine2_do_read = (basesoc_sdram_bankmachine2_syncfifo2_readable & basesoc_sdram_bankmachine2_syncfifo2_re);
assign basesoc_sdram_bankmachine2_rdport_adr = basesoc_sdram_bankmachine2_consume;
assign basesoc_sdram_bankmachine2_syncfifo2_dout = basesoc_sdram_bankmachine2_rdport_dat_r;
assign basesoc_sdram_bankmachine2_syncfifo2_writable = (basesoc_sdram_bankmachine2_level != 4'd8);
assign basesoc_sdram_bankmachine2_syncfifo2_readable = (basesoc_sdram_bankmachine2_level != 1'd0);
assign basesoc_sdram_bankmachine2_pipe_valid_sink_ready = ((~basesoc_sdram_bankmachine2_pipe_valid_source_valid) | basesoc_sdram_bankmachine2_pipe_valid_source_ready);
assign basesoc_sdram_bankmachine2_pipe_valid_sink_valid = basesoc_sdram_bankmachine2_sink_sink_valid;
assign basesoc_sdram_bankmachine2_sink_sink_ready = basesoc_sdram_bankmachine2_pipe_valid_sink_ready;
assign basesoc_sdram_bankmachine2_pipe_valid_sink_first = basesoc_sdram_bankmachine2_sink_sink_first;
assign basesoc_sdram_bankmachine2_pipe_valid_sink_last = basesoc_sdram_bankmachine2_sink_sink_last;
assign basesoc_sdram_bankmachine2_pipe_valid_sink_payload_we = basesoc_sdram_bankmachine2_sink_sink_payload_we;
assign basesoc_sdram_bankmachine2_pipe_valid_sink_payload_addr = basesoc_sdram_bankmachine2_sink_sink_payload_addr;
assign basesoc_sdram_bankmachine2_source_source_valid = basesoc_sdram_bankmachine2_pipe_valid_source_valid;
assign basesoc_sdram_bankmachine2_pipe_valid_source_ready = basesoc_sdram_bankmachine2_source_source_ready;
assign basesoc_sdram_bankmachine2_source_source_first = basesoc_sdram_bankmachine2_pipe_valid_source_first;
assign basesoc_sdram_bankmachine2_source_source_last = basesoc_sdram_bankmachine2_pipe_valid_source_last;
assign basesoc_sdram_bankmachine2_source_source_payload_we = basesoc_sdram_bankmachine2_pipe_valid_source_payload_we;
assign basesoc_sdram_bankmachine2_source_source_payload_addr = basesoc_sdram_bankmachine2_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine2_next_state <= 3'd0;
    basesoc_sdram_bankmachine2_cmd_payload_cas <= 1'd0;
    basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd0;
    basesoc_sdram_bankmachine2_cmd_payload_is_read <= 1'd0;
    basesoc_sdram_bankmachine2_cmd_payload_is_write <= 1'd0;
    basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd0;
    basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd0;
    basesoc_sdram_bankmachine2_cmd_valid <= 1'd0;
    basesoc_sdram_bankmachine2_refresh_gnt <= 1'd0;
    basesoc_sdram_bankmachine2_req_rdata_valid <= 1'd0;
    basesoc_sdram_bankmachine2_req_wdata_ready <= 1'd0;
    basesoc_sdram_bankmachine2_row_close <= 1'd0;
    basesoc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd0;
    basesoc_sdram_bankmachine2_row_open <= 1'd0;
    bankmachine2_next_state <= bankmachine2_state;
    case (bankmachine2_state)
        1'd1: begin
            if ((basesoc_sdram_bankmachine2_twtpcon_ready & basesoc_sdram_bankmachine2_trascon_ready)) begin
                basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
                if (basesoc_sdram_bankmachine2_cmd_ready) begin
                    bankmachine2_next_state <= 3'd5;
                end
                basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
                basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
                basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_sdram_bankmachine2_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_sdram_bankmachine2_twtpcon_ready & basesoc_sdram_bankmachine2_trascon_ready)) begin
                bankmachine2_next_state <= 3'd5;
            end
            basesoc_sdram_bankmachine2_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_sdram_bankmachine2_trccon_ready) begin
                basesoc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd1;
                basesoc_sdram_bankmachine2_row_open <= 1'd1;
                basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
                basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_sdram_bankmachine2_cmd_ready) begin
                    bankmachine2_next_state <= 3'd6;
                end
                basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_sdram_bankmachine2_twtpcon_ready) begin
                basesoc_sdram_bankmachine2_refresh_gnt <= 1'd1;
            end
            basesoc_sdram_bankmachine2_row_close <= 1'd1;
            basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_sdram_bankmachine2_refresh_req)) begin
                bankmachine2_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine2_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine2_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_sdram_bankmachine2_refresh_req) begin
                bankmachine2_next_state <= 3'd4;
            end else begin
                if (basesoc_sdram_bankmachine2_source_source_valid) begin
                    if (basesoc_sdram_bankmachine2_row_opened) begin
                        if (basesoc_sdram_bankmachine2_row_hit) begin
                            basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
                            if (basesoc_sdram_bankmachine2_source_source_payload_we) begin
                                basesoc_sdram_bankmachine2_req_wdata_ready <= basesoc_sdram_bankmachine2_cmd_ready;
                                basesoc_sdram_bankmachine2_cmd_payload_is_write <= 1'd1;
                                basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_sdram_bankmachine2_req_rdata_valid <= basesoc_sdram_bankmachine2_cmd_ready;
                                basesoc_sdram_bankmachine2_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_sdram_bankmachine2_cmd_payload_cas <= 1'd1;
                            if ((basesoc_sdram_bankmachine2_cmd_ready & basesoc_sdram_bankmachine2_auto_precharge)) begin
                                bankmachine2_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine2_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine2_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_sdram_bankmachine3_sink_valid = basesoc_sdram_bankmachine3_req_valid;
assign basesoc_sdram_bankmachine3_req_ready = basesoc_sdram_bankmachine3_sink_ready;
assign basesoc_sdram_bankmachine3_sink_payload_we = basesoc_sdram_bankmachine3_req_we;
assign basesoc_sdram_bankmachine3_sink_payload_addr = basesoc_sdram_bankmachine3_req_addr;
assign basesoc_sdram_bankmachine3_sink_sink_valid = basesoc_sdram_bankmachine3_source_valid;
assign basesoc_sdram_bankmachine3_source_ready = basesoc_sdram_bankmachine3_sink_sink_ready;
assign basesoc_sdram_bankmachine3_sink_sink_first = basesoc_sdram_bankmachine3_source_first;
assign basesoc_sdram_bankmachine3_sink_sink_last = basesoc_sdram_bankmachine3_source_last;
assign basesoc_sdram_bankmachine3_sink_sink_payload_we = basesoc_sdram_bankmachine3_source_payload_we;
assign basesoc_sdram_bankmachine3_sink_sink_payload_addr = basesoc_sdram_bankmachine3_source_payload_addr;
assign basesoc_sdram_bankmachine3_source_source_ready = (basesoc_sdram_bankmachine3_req_wdata_ready | basesoc_sdram_bankmachine3_req_rdata_valid);
assign basesoc_sdram_bankmachine3_req_lock = (basesoc_sdram_bankmachine3_source_valid | basesoc_sdram_bankmachine3_source_source_valid);
assign basesoc_sdram_bankmachine3_row_hit = (basesoc_sdram_bankmachine3_row == basesoc_sdram_bankmachine3_source_source_payload_addr[19:7]);
assign basesoc_sdram_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
    basesoc_sdram_bankmachine3_cmd_payload_a <= 13'd0;
    if (basesoc_sdram_bankmachine3_row_col_n_addr_sel) begin
        basesoc_sdram_bankmachine3_cmd_payload_a <= basesoc_sdram_bankmachine3_source_source_payload_addr[19:7];
    end else begin
        basesoc_sdram_bankmachine3_cmd_payload_a <= ((basesoc_sdram_bankmachine3_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine3_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_sdram_bankmachine3_twtpcon_valid = ((basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_ready) & basesoc_sdram_bankmachine3_cmd_payload_is_write);
assign basesoc_sdram_bankmachine3_trccon_valid = ((basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_ready) & basesoc_sdram_bankmachine3_row_open);
assign basesoc_sdram_bankmachine3_trascon_valid = ((basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_ready) & basesoc_sdram_bankmachine3_row_open);
always @(*) begin
    basesoc_sdram_bankmachine3_auto_precharge <= 1'd0;
    if ((basesoc_sdram_bankmachine3_source_valid & basesoc_sdram_bankmachine3_source_source_valid)) begin
        if ((basesoc_sdram_bankmachine3_source_payload_addr[19:7] != basesoc_sdram_bankmachine3_source_source_payload_addr[19:7])) begin
            basesoc_sdram_bankmachine3_auto_precharge <= (basesoc_sdram_bankmachine3_row_close == 1'd0);
        end
    end
end
assign basesoc_sdram_bankmachine3_syncfifo3_din = {basesoc_sdram_bankmachine3_fifo_in_last, basesoc_sdram_bankmachine3_fifo_in_first, basesoc_sdram_bankmachine3_fifo_in_payload_addr, basesoc_sdram_bankmachine3_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine3_fifo_out_last, basesoc_sdram_bankmachine3_fifo_out_first, basesoc_sdram_bankmachine3_fifo_out_payload_addr, basesoc_sdram_bankmachine3_fifo_out_payload_we} = basesoc_sdram_bankmachine3_syncfifo3_dout;
assign basesoc_sdram_bankmachine3_sink_ready = basesoc_sdram_bankmachine3_syncfifo3_writable;
assign basesoc_sdram_bankmachine3_syncfifo3_we = basesoc_sdram_bankmachine3_sink_valid;
assign basesoc_sdram_bankmachine3_fifo_in_first = basesoc_sdram_bankmachine3_sink_first;
assign basesoc_sdram_bankmachine3_fifo_in_last = basesoc_sdram_bankmachine3_sink_last;
assign basesoc_sdram_bankmachine3_fifo_in_payload_we = basesoc_sdram_bankmachine3_sink_payload_we;
assign basesoc_sdram_bankmachine3_fifo_in_payload_addr = basesoc_sdram_bankmachine3_sink_payload_addr;
assign basesoc_sdram_bankmachine3_source_valid = basesoc_sdram_bankmachine3_syncfifo3_readable;
assign basesoc_sdram_bankmachine3_source_first = basesoc_sdram_bankmachine3_fifo_out_first;
assign basesoc_sdram_bankmachine3_source_last = basesoc_sdram_bankmachine3_fifo_out_last;
assign basesoc_sdram_bankmachine3_source_payload_we = basesoc_sdram_bankmachine3_fifo_out_payload_we;
assign basesoc_sdram_bankmachine3_source_payload_addr = basesoc_sdram_bankmachine3_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine3_syncfifo3_re = basesoc_sdram_bankmachine3_source_ready;
always @(*) begin
    basesoc_sdram_bankmachine3_wrport_adr <= 3'd0;
    if (basesoc_sdram_bankmachine3_replace) begin
        basesoc_sdram_bankmachine3_wrport_adr <= (basesoc_sdram_bankmachine3_produce - 1'd1);
    end else begin
        basesoc_sdram_bankmachine3_wrport_adr <= basesoc_sdram_bankmachine3_produce;
    end
end
assign basesoc_sdram_bankmachine3_wrport_dat_w = basesoc_sdram_bankmachine3_syncfifo3_din;
assign basesoc_sdram_bankmachine3_wrport_we = (basesoc_sdram_bankmachine3_syncfifo3_we & (basesoc_sdram_bankmachine3_syncfifo3_writable | basesoc_sdram_bankmachine3_replace));
assign basesoc_sdram_bankmachine3_do_read = (basesoc_sdram_bankmachine3_syncfifo3_readable & basesoc_sdram_bankmachine3_syncfifo3_re);
assign basesoc_sdram_bankmachine3_rdport_adr = basesoc_sdram_bankmachine3_consume;
assign basesoc_sdram_bankmachine3_syncfifo3_dout = basesoc_sdram_bankmachine3_rdport_dat_r;
assign basesoc_sdram_bankmachine3_syncfifo3_writable = (basesoc_sdram_bankmachine3_level != 4'd8);
assign basesoc_sdram_bankmachine3_syncfifo3_readable = (basesoc_sdram_bankmachine3_level != 1'd0);
assign basesoc_sdram_bankmachine3_pipe_valid_sink_ready = ((~basesoc_sdram_bankmachine3_pipe_valid_source_valid) | basesoc_sdram_bankmachine3_pipe_valid_source_ready);
assign basesoc_sdram_bankmachine3_pipe_valid_sink_valid = basesoc_sdram_bankmachine3_sink_sink_valid;
assign basesoc_sdram_bankmachine3_sink_sink_ready = basesoc_sdram_bankmachine3_pipe_valid_sink_ready;
assign basesoc_sdram_bankmachine3_pipe_valid_sink_first = basesoc_sdram_bankmachine3_sink_sink_first;
assign basesoc_sdram_bankmachine3_pipe_valid_sink_last = basesoc_sdram_bankmachine3_sink_sink_last;
assign basesoc_sdram_bankmachine3_pipe_valid_sink_payload_we = basesoc_sdram_bankmachine3_sink_sink_payload_we;
assign basesoc_sdram_bankmachine3_pipe_valid_sink_payload_addr = basesoc_sdram_bankmachine3_sink_sink_payload_addr;
assign basesoc_sdram_bankmachine3_source_source_valid = basesoc_sdram_bankmachine3_pipe_valid_source_valid;
assign basesoc_sdram_bankmachine3_pipe_valid_source_ready = basesoc_sdram_bankmachine3_source_source_ready;
assign basesoc_sdram_bankmachine3_source_source_first = basesoc_sdram_bankmachine3_pipe_valid_source_first;
assign basesoc_sdram_bankmachine3_source_source_last = basesoc_sdram_bankmachine3_pipe_valid_source_last;
assign basesoc_sdram_bankmachine3_source_source_payload_we = basesoc_sdram_bankmachine3_pipe_valid_source_payload_we;
assign basesoc_sdram_bankmachine3_source_source_payload_addr = basesoc_sdram_bankmachine3_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine3_next_state <= 3'd0;
    basesoc_sdram_bankmachine3_cmd_payload_cas <= 1'd0;
    basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd0;
    basesoc_sdram_bankmachine3_cmd_payload_is_read <= 1'd0;
    basesoc_sdram_bankmachine3_cmd_payload_is_write <= 1'd0;
    basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd0;
    basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd0;
    basesoc_sdram_bankmachine3_cmd_valid <= 1'd0;
    basesoc_sdram_bankmachine3_refresh_gnt <= 1'd0;
    basesoc_sdram_bankmachine3_req_rdata_valid <= 1'd0;
    basesoc_sdram_bankmachine3_req_wdata_ready <= 1'd0;
    basesoc_sdram_bankmachine3_row_close <= 1'd0;
    basesoc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd0;
    basesoc_sdram_bankmachine3_row_open <= 1'd0;
    bankmachine3_next_state <= bankmachine3_state;
    case (bankmachine3_state)
        1'd1: begin
            if ((basesoc_sdram_bankmachine3_twtpcon_ready & basesoc_sdram_bankmachine3_trascon_ready)) begin
                basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
                if (basesoc_sdram_bankmachine3_cmd_ready) begin
                    bankmachine3_next_state <= 3'd5;
                end
                basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
                basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
                basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_sdram_bankmachine3_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_sdram_bankmachine3_twtpcon_ready & basesoc_sdram_bankmachine3_trascon_ready)) begin
                bankmachine3_next_state <= 3'd5;
            end
            basesoc_sdram_bankmachine3_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_sdram_bankmachine3_trccon_ready) begin
                basesoc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd1;
                basesoc_sdram_bankmachine3_row_open <= 1'd1;
                basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
                basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_sdram_bankmachine3_cmd_ready) begin
                    bankmachine3_next_state <= 3'd6;
                end
                basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_sdram_bankmachine3_twtpcon_ready) begin
                basesoc_sdram_bankmachine3_refresh_gnt <= 1'd1;
            end
            basesoc_sdram_bankmachine3_row_close <= 1'd1;
            basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_sdram_bankmachine3_refresh_req)) begin
                bankmachine3_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine3_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine3_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_sdram_bankmachine3_refresh_req) begin
                bankmachine3_next_state <= 3'd4;
            end else begin
                if (basesoc_sdram_bankmachine3_source_source_valid) begin
                    if (basesoc_sdram_bankmachine3_row_opened) begin
                        if (basesoc_sdram_bankmachine3_row_hit) begin
                            basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
                            if (basesoc_sdram_bankmachine3_source_source_payload_we) begin
                                basesoc_sdram_bankmachine3_req_wdata_ready <= basesoc_sdram_bankmachine3_cmd_ready;
                                basesoc_sdram_bankmachine3_cmd_payload_is_write <= 1'd1;
                                basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_sdram_bankmachine3_req_rdata_valid <= basesoc_sdram_bankmachine3_cmd_ready;
                                basesoc_sdram_bankmachine3_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_sdram_bankmachine3_cmd_payload_cas <= 1'd1;
                            if ((basesoc_sdram_bankmachine3_cmd_ready & basesoc_sdram_bankmachine3_auto_precharge)) begin
                                bankmachine3_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine3_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine3_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_sdram_bankmachine4_sink_valid = basesoc_sdram_bankmachine4_req_valid;
assign basesoc_sdram_bankmachine4_req_ready = basesoc_sdram_bankmachine4_sink_ready;
assign basesoc_sdram_bankmachine4_sink_payload_we = basesoc_sdram_bankmachine4_req_we;
assign basesoc_sdram_bankmachine4_sink_payload_addr = basesoc_sdram_bankmachine4_req_addr;
assign basesoc_sdram_bankmachine4_sink_sink_valid = basesoc_sdram_bankmachine4_source_valid;
assign basesoc_sdram_bankmachine4_source_ready = basesoc_sdram_bankmachine4_sink_sink_ready;
assign basesoc_sdram_bankmachine4_sink_sink_first = basesoc_sdram_bankmachine4_source_first;
assign basesoc_sdram_bankmachine4_sink_sink_last = basesoc_sdram_bankmachine4_source_last;
assign basesoc_sdram_bankmachine4_sink_sink_payload_we = basesoc_sdram_bankmachine4_source_payload_we;
assign basesoc_sdram_bankmachine4_sink_sink_payload_addr = basesoc_sdram_bankmachine4_source_payload_addr;
assign basesoc_sdram_bankmachine4_source_source_ready = (basesoc_sdram_bankmachine4_req_wdata_ready | basesoc_sdram_bankmachine4_req_rdata_valid);
assign basesoc_sdram_bankmachine4_req_lock = (basesoc_sdram_bankmachine4_source_valid | basesoc_sdram_bankmachine4_source_source_valid);
assign basesoc_sdram_bankmachine4_row_hit = (basesoc_sdram_bankmachine4_row == basesoc_sdram_bankmachine4_source_source_payload_addr[19:7]);
assign basesoc_sdram_bankmachine4_cmd_payload_ba = 3'd4;
always @(*) begin
    basesoc_sdram_bankmachine4_cmd_payload_a <= 13'd0;
    if (basesoc_sdram_bankmachine4_row_col_n_addr_sel) begin
        basesoc_sdram_bankmachine4_cmd_payload_a <= basesoc_sdram_bankmachine4_source_source_payload_addr[19:7];
    end else begin
        basesoc_sdram_bankmachine4_cmd_payload_a <= ((basesoc_sdram_bankmachine4_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine4_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_sdram_bankmachine4_twtpcon_valid = ((basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_ready) & basesoc_sdram_bankmachine4_cmd_payload_is_write);
assign basesoc_sdram_bankmachine4_trccon_valid = ((basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_ready) & basesoc_sdram_bankmachine4_row_open);
assign basesoc_sdram_bankmachine4_trascon_valid = ((basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_ready) & basesoc_sdram_bankmachine4_row_open);
always @(*) begin
    basesoc_sdram_bankmachine4_auto_precharge <= 1'd0;
    if ((basesoc_sdram_bankmachine4_source_valid & basesoc_sdram_bankmachine4_source_source_valid)) begin
        if ((basesoc_sdram_bankmachine4_source_payload_addr[19:7] != basesoc_sdram_bankmachine4_source_source_payload_addr[19:7])) begin
            basesoc_sdram_bankmachine4_auto_precharge <= (basesoc_sdram_bankmachine4_row_close == 1'd0);
        end
    end
end
assign basesoc_sdram_bankmachine4_syncfifo4_din = {basesoc_sdram_bankmachine4_fifo_in_last, basesoc_sdram_bankmachine4_fifo_in_first, basesoc_sdram_bankmachine4_fifo_in_payload_addr, basesoc_sdram_bankmachine4_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine4_fifo_out_last, basesoc_sdram_bankmachine4_fifo_out_first, basesoc_sdram_bankmachine4_fifo_out_payload_addr, basesoc_sdram_bankmachine4_fifo_out_payload_we} = basesoc_sdram_bankmachine4_syncfifo4_dout;
assign basesoc_sdram_bankmachine4_sink_ready = basesoc_sdram_bankmachine4_syncfifo4_writable;
assign basesoc_sdram_bankmachine4_syncfifo4_we = basesoc_sdram_bankmachine4_sink_valid;
assign basesoc_sdram_bankmachine4_fifo_in_first = basesoc_sdram_bankmachine4_sink_first;
assign basesoc_sdram_bankmachine4_fifo_in_last = basesoc_sdram_bankmachine4_sink_last;
assign basesoc_sdram_bankmachine4_fifo_in_payload_we = basesoc_sdram_bankmachine4_sink_payload_we;
assign basesoc_sdram_bankmachine4_fifo_in_payload_addr = basesoc_sdram_bankmachine4_sink_payload_addr;
assign basesoc_sdram_bankmachine4_source_valid = basesoc_sdram_bankmachine4_syncfifo4_readable;
assign basesoc_sdram_bankmachine4_source_first = basesoc_sdram_bankmachine4_fifo_out_first;
assign basesoc_sdram_bankmachine4_source_last = basesoc_sdram_bankmachine4_fifo_out_last;
assign basesoc_sdram_bankmachine4_source_payload_we = basesoc_sdram_bankmachine4_fifo_out_payload_we;
assign basesoc_sdram_bankmachine4_source_payload_addr = basesoc_sdram_bankmachine4_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine4_syncfifo4_re = basesoc_sdram_bankmachine4_source_ready;
always @(*) begin
    basesoc_sdram_bankmachine4_wrport_adr <= 3'd0;
    if (basesoc_sdram_bankmachine4_replace) begin
        basesoc_sdram_bankmachine4_wrport_adr <= (basesoc_sdram_bankmachine4_produce - 1'd1);
    end else begin
        basesoc_sdram_bankmachine4_wrport_adr <= basesoc_sdram_bankmachine4_produce;
    end
end
assign basesoc_sdram_bankmachine4_wrport_dat_w = basesoc_sdram_bankmachine4_syncfifo4_din;
assign basesoc_sdram_bankmachine4_wrport_we = (basesoc_sdram_bankmachine4_syncfifo4_we & (basesoc_sdram_bankmachine4_syncfifo4_writable | basesoc_sdram_bankmachine4_replace));
assign basesoc_sdram_bankmachine4_do_read = (basesoc_sdram_bankmachine4_syncfifo4_readable & basesoc_sdram_bankmachine4_syncfifo4_re);
assign basesoc_sdram_bankmachine4_rdport_adr = basesoc_sdram_bankmachine4_consume;
assign basesoc_sdram_bankmachine4_syncfifo4_dout = basesoc_sdram_bankmachine4_rdport_dat_r;
assign basesoc_sdram_bankmachine4_syncfifo4_writable = (basesoc_sdram_bankmachine4_level != 4'd8);
assign basesoc_sdram_bankmachine4_syncfifo4_readable = (basesoc_sdram_bankmachine4_level != 1'd0);
assign basesoc_sdram_bankmachine4_pipe_valid_sink_ready = ((~basesoc_sdram_bankmachine4_pipe_valid_source_valid) | basesoc_sdram_bankmachine4_pipe_valid_source_ready);
assign basesoc_sdram_bankmachine4_pipe_valid_sink_valid = basesoc_sdram_bankmachine4_sink_sink_valid;
assign basesoc_sdram_bankmachine4_sink_sink_ready = basesoc_sdram_bankmachine4_pipe_valid_sink_ready;
assign basesoc_sdram_bankmachine4_pipe_valid_sink_first = basesoc_sdram_bankmachine4_sink_sink_first;
assign basesoc_sdram_bankmachine4_pipe_valid_sink_last = basesoc_sdram_bankmachine4_sink_sink_last;
assign basesoc_sdram_bankmachine4_pipe_valid_sink_payload_we = basesoc_sdram_bankmachine4_sink_sink_payload_we;
assign basesoc_sdram_bankmachine4_pipe_valid_sink_payload_addr = basesoc_sdram_bankmachine4_sink_sink_payload_addr;
assign basesoc_sdram_bankmachine4_source_source_valid = basesoc_sdram_bankmachine4_pipe_valid_source_valid;
assign basesoc_sdram_bankmachine4_pipe_valid_source_ready = basesoc_sdram_bankmachine4_source_source_ready;
assign basesoc_sdram_bankmachine4_source_source_first = basesoc_sdram_bankmachine4_pipe_valid_source_first;
assign basesoc_sdram_bankmachine4_source_source_last = basesoc_sdram_bankmachine4_pipe_valid_source_last;
assign basesoc_sdram_bankmachine4_source_source_payload_we = basesoc_sdram_bankmachine4_pipe_valid_source_payload_we;
assign basesoc_sdram_bankmachine4_source_source_payload_addr = basesoc_sdram_bankmachine4_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine4_next_state <= 3'd0;
    basesoc_sdram_bankmachine4_cmd_payload_cas <= 1'd0;
    basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd0;
    basesoc_sdram_bankmachine4_cmd_payload_is_read <= 1'd0;
    basesoc_sdram_bankmachine4_cmd_payload_is_write <= 1'd0;
    basesoc_sdram_bankmachine4_cmd_payload_ras <= 1'd0;
    basesoc_sdram_bankmachine4_cmd_payload_we <= 1'd0;
    basesoc_sdram_bankmachine4_cmd_valid <= 1'd0;
    basesoc_sdram_bankmachine4_refresh_gnt <= 1'd0;
    basesoc_sdram_bankmachine4_req_rdata_valid <= 1'd0;
    basesoc_sdram_bankmachine4_req_wdata_ready <= 1'd0;
    basesoc_sdram_bankmachine4_row_close <= 1'd0;
    basesoc_sdram_bankmachine4_row_col_n_addr_sel <= 1'd0;
    basesoc_sdram_bankmachine4_row_open <= 1'd0;
    bankmachine4_next_state <= bankmachine4_state;
    case (bankmachine4_state)
        1'd1: begin
            if ((basesoc_sdram_bankmachine4_twtpcon_ready & basesoc_sdram_bankmachine4_trascon_ready)) begin
                basesoc_sdram_bankmachine4_cmd_valid <= 1'd1;
                if (basesoc_sdram_bankmachine4_cmd_ready) begin
                    bankmachine4_next_state <= 3'd5;
                end
                basesoc_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
                basesoc_sdram_bankmachine4_cmd_payload_we <= 1'd1;
                basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_sdram_bankmachine4_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_sdram_bankmachine4_twtpcon_ready & basesoc_sdram_bankmachine4_trascon_ready)) begin
                bankmachine4_next_state <= 3'd5;
            end
            basesoc_sdram_bankmachine4_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_sdram_bankmachine4_trccon_ready) begin
                basesoc_sdram_bankmachine4_row_col_n_addr_sel <= 1'd1;
                basesoc_sdram_bankmachine4_row_open <= 1'd1;
                basesoc_sdram_bankmachine4_cmd_valid <= 1'd1;
                basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_sdram_bankmachine4_cmd_ready) begin
                    bankmachine4_next_state <= 3'd6;
                end
                basesoc_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_sdram_bankmachine4_twtpcon_ready) begin
                basesoc_sdram_bankmachine4_refresh_gnt <= 1'd1;
            end
            basesoc_sdram_bankmachine4_row_close <= 1'd1;
            basesoc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_sdram_bankmachine4_refresh_req)) begin
                bankmachine4_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine4_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine4_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_sdram_bankmachine4_refresh_req) begin
                bankmachine4_next_state <= 3'd4;
            end else begin
                if (basesoc_sdram_bankmachine4_source_source_valid) begin
                    if (basesoc_sdram_bankmachine4_row_opened) begin
                        if (basesoc_sdram_bankmachine4_row_hit) begin
                            basesoc_sdram_bankmachine4_cmd_valid <= 1'd1;
                            if (basesoc_sdram_bankmachine4_source_source_payload_we) begin
                                basesoc_sdram_bankmachine4_req_wdata_ready <= basesoc_sdram_bankmachine4_cmd_ready;
                                basesoc_sdram_bankmachine4_cmd_payload_is_write <= 1'd1;
                                basesoc_sdram_bankmachine4_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_sdram_bankmachine4_req_rdata_valid <= basesoc_sdram_bankmachine4_cmd_ready;
                                basesoc_sdram_bankmachine4_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_sdram_bankmachine4_cmd_payload_cas <= 1'd1;
                            if ((basesoc_sdram_bankmachine4_cmd_ready & basesoc_sdram_bankmachine4_auto_precharge)) begin
                                bankmachine4_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine4_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine4_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_sdram_bankmachine5_sink_valid = basesoc_sdram_bankmachine5_req_valid;
assign basesoc_sdram_bankmachine5_req_ready = basesoc_sdram_bankmachine5_sink_ready;
assign basesoc_sdram_bankmachine5_sink_payload_we = basesoc_sdram_bankmachine5_req_we;
assign basesoc_sdram_bankmachine5_sink_payload_addr = basesoc_sdram_bankmachine5_req_addr;
assign basesoc_sdram_bankmachine5_sink_sink_valid = basesoc_sdram_bankmachine5_source_valid;
assign basesoc_sdram_bankmachine5_source_ready = basesoc_sdram_bankmachine5_sink_sink_ready;
assign basesoc_sdram_bankmachine5_sink_sink_first = basesoc_sdram_bankmachine5_source_first;
assign basesoc_sdram_bankmachine5_sink_sink_last = basesoc_sdram_bankmachine5_source_last;
assign basesoc_sdram_bankmachine5_sink_sink_payload_we = basesoc_sdram_bankmachine5_source_payload_we;
assign basesoc_sdram_bankmachine5_sink_sink_payload_addr = basesoc_sdram_bankmachine5_source_payload_addr;
assign basesoc_sdram_bankmachine5_source_source_ready = (basesoc_sdram_bankmachine5_req_wdata_ready | basesoc_sdram_bankmachine5_req_rdata_valid);
assign basesoc_sdram_bankmachine5_req_lock = (basesoc_sdram_bankmachine5_source_valid | basesoc_sdram_bankmachine5_source_source_valid);
assign basesoc_sdram_bankmachine5_row_hit = (basesoc_sdram_bankmachine5_row == basesoc_sdram_bankmachine5_source_source_payload_addr[19:7]);
assign basesoc_sdram_bankmachine5_cmd_payload_ba = 3'd5;
always @(*) begin
    basesoc_sdram_bankmachine5_cmd_payload_a <= 13'd0;
    if (basesoc_sdram_bankmachine5_row_col_n_addr_sel) begin
        basesoc_sdram_bankmachine5_cmd_payload_a <= basesoc_sdram_bankmachine5_source_source_payload_addr[19:7];
    end else begin
        basesoc_sdram_bankmachine5_cmd_payload_a <= ((basesoc_sdram_bankmachine5_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine5_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_sdram_bankmachine5_twtpcon_valid = ((basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_ready) & basesoc_sdram_bankmachine5_cmd_payload_is_write);
assign basesoc_sdram_bankmachine5_trccon_valid = ((basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_ready) & basesoc_sdram_bankmachine5_row_open);
assign basesoc_sdram_bankmachine5_trascon_valid = ((basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_ready) & basesoc_sdram_bankmachine5_row_open);
always @(*) begin
    basesoc_sdram_bankmachine5_auto_precharge <= 1'd0;
    if ((basesoc_sdram_bankmachine5_source_valid & basesoc_sdram_bankmachine5_source_source_valid)) begin
        if ((basesoc_sdram_bankmachine5_source_payload_addr[19:7] != basesoc_sdram_bankmachine5_source_source_payload_addr[19:7])) begin
            basesoc_sdram_bankmachine5_auto_precharge <= (basesoc_sdram_bankmachine5_row_close == 1'd0);
        end
    end
end
assign basesoc_sdram_bankmachine5_syncfifo5_din = {basesoc_sdram_bankmachine5_fifo_in_last, basesoc_sdram_bankmachine5_fifo_in_first, basesoc_sdram_bankmachine5_fifo_in_payload_addr, basesoc_sdram_bankmachine5_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine5_fifo_out_last, basesoc_sdram_bankmachine5_fifo_out_first, basesoc_sdram_bankmachine5_fifo_out_payload_addr, basesoc_sdram_bankmachine5_fifo_out_payload_we} = basesoc_sdram_bankmachine5_syncfifo5_dout;
assign basesoc_sdram_bankmachine5_sink_ready = basesoc_sdram_bankmachine5_syncfifo5_writable;
assign basesoc_sdram_bankmachine5_syncfifo5_we = basesoc_sdram_bankmachine5_sink_valid;
assign basesoc_sdram_bankmachine5_fifo_in_first = basesoc_sdram_bankmachine5_sink_first;
assign basesoc_sdram_bankmachine5_fifo_in_last = basesoc_sdram_bankmachine5_sink_last;
assign basesoc_sdram_bankmachine5_fifo_in_payload_we = basesoc_sdram_bankmachine5_sink_payload_we;
assign basesoc_sdram_bankmachine5_fifo_in_payload_addr = basesoc_sdram_bankmachine5_sink_payload_addr;
assign basesoc_sdram_bankmachine5_source_valid = basesoc_sdram_bankmachine5_syncfifo5_readable;
assign basesoc_sdram_bankmachine5_source_first = basesoc_sdram_bankmachine5_fifo_out_first;
assign basesoc_sdram_bankmachine5_source_last = basesoc_sdram_bankmachine5_fifo_out_last;
assign basesoc_sdram_bankmachine5_source_payload_we = basesoc_sdram_bankmachine5_fifo_out_payload_we;
assign basesoc_sdram_bankmachine5_source_payload_addr = basesoc_sdram_bankmachine5_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine5_syncfifo5_re = basesoc_sdram_bankmachine5_source_ready;
always @(*) begin
    basesoc_sdram_bankmachine5_wrport_adr <= 3'd0;
    if (basesoc_sdram_bankmachine5_replace) begin
        basesoc_sdram_bankmachine5_wrport_adr <= (basesoc_sdram_bankmachine5_produce - 1'd1);
    end else begin
        basesoc_sdram_bankmachine5_wrport_adr <= basesoc_sdram_bankmachine5_produce;
    end
end
assign basesoc_sdram_bankmachine5_wrport_dat_w = basesoc_sdram_bankmachine5_syncfifo5_din;
assign basesoc_sdram_bankmachine5_wrport_we = (basesoc_sdram_bankmachine5_syncfifo5_we & (basesoc_sdram_bankmachine5_syncfifo5_writable | basesoc_sdram_bankmachine5_replace));
assign basesoc_sdram_bankmachine5_do_read = (basesoc_sdram_bankmachine5_syncfifo5_readable & basesoc_sdram_bankmachine5_syncfifo5_re);
assign basesoc_sdram_bankmachine5_rdport_adr = basesoc_sdram_bankmachine5_consume;
assign basesoc_sdram_bankmachine5_syncfifo5_dout = basesoc_sdram_bankmachine5_rdport_dat_r;
assign basesoc_sdram_bankmachine5_syncfifo5_writable = (basesoc_sdram_bankmachine5_level != 4'd8);
assign basesoc_sdram_bankmachine5_syncfifo5_readable = (basesoc_sdram_bankmachine5_level != 1'd0);
assign basesoc_sdram_bankmachine5_pipe_valid_sink_ready = ((~basesoc_sdram_bankmachine5_pipe_valid_source_valid) | basesoc_sdram_bankmachine5_pipe_valid_source_ready);
assign basesoc_sdram_bankmachine5_pipe_valid_sink_valid = basesoc_sdram_bankmachine5_sink_sink_valid;
assign basesoc_sdram_bankmachine5_sink_sink_ready = basesoc_sdram_bankmachine5_pipe_valid_sink_ready;
assign basesoc_sdram_bankmachine5_pipe_valid_sink_first = basesoc_sdram_bankmachine5_sink_sink_first;
assign basesoc_sdram_bankmachine5_pipe_valid_sink_last = basesoc_sdram_bankmachine5_sink_sink_last;
assign basesoc_sdram_bankmachine5_pipe_valid_sink_payload_we = basesoc_sdram_bankmachine5_sink_sink_payload_we;
assign basesoc_sdram_bankmachine5_pipe_valid_sink_payload_addr = basesoc_sdram_bankmachine5_sink_sink_payload_addr;
assign basesoc_sdram_bankmachine5_source_source_valid = basesoc_sdram_bankmachine5_pipe_valid_source_valid;
assign basesoc_sdram_bankmachine5_pipe_valid_source_ready = basesoc_sdram_bankmachine5_source_source_ready;
assign basesoc_sdram_bankmachine5_source_source_first = basesoc_sdram_bankmachine5_pipe_valid_source_first;
assign basesoc_sdram_bankmachine5_source_source_last = basesoc_sdram_bankmachine5_pipe_valid_source_last;
assign basesoc_sdram_bankmachine5_source_source_payload_we = basesoc_sdram_bankmachine5_pipe_valid_source_payload_we;
assign basesoc_sdram_bankmachine5_source_source_payload_addr = basesoc_sdram_bankmachine5_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine5_next_state <= 3'd0;
    basesoc_sdram_bankmachine5_cmd_payload_cas <= 1'd0;
    basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd0;
    basesoc_sdram_bankmachine5_cmd_payload_is_read <= 1'd0;
    basesoc_sdram_bankmachine5_cmd_payload_is_write <= 1'd0;
    basesoc_sdram_bankmachine5_cmd_payload_ras <= 1'd0;
    basesoc_sdram_bankmachine5_cmd_payload_we <= 1'd0;
    basesoc_sdram_bankmachine5_cmd_valid <= 1'd0;
    basesoc_sdram_bankmachine5_refresh_gnt <= 1'd0;
    basesoc_sdram_bankmachine5_req_rdata_valid <= 1'd0;
    basesoc_sdram_bankmachine5_req_wdata_ready <= 1'd0;
    basesoc_sdram_bankmachine5_row_close <= 1'd0;
    basesoc_sdram_bankmachine5_row_col_n_addr_sel <= 1'd0;
    basesoc_sdram_bankmachine5_row_open <= 1'd0;
    bankmachine5_next_state <= bankmachine5_state;
    case (bankmachine5_state)
        1'd1: begin
            if ((basesoc_sdram_bankmachine5_twtpcon_ready & basesoc_sdram_bankmachine5_trascon_ready)) begin
                basesoc_sdram_bankmachine5_cmd_valid <= 1'd1;
                if (basesoc_sdram_bankmachine5_cmd_ready) begin
                    bankmachine5_next_state <= 3'd5;
                end
                basesoc_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
                basesoc_sdram_bankmachine5_cmd_payload_we <= 1'd1;
                basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_sdram_bankmachine5_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_sdram_bankmachine5_twtpcon_ready & basesoc_sdram_bankmachine5_trascon_ready)) begin
                bankmachine5_next_state <= 3'd5;
            end
            basesoc_sdram_bankmachine5_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_sdram_bankmachine5_trccon_ready) begin
                basesoc_sdram_bankmachine5_row_col_n_addr_sel <= 1'd1;
                basesoc_sdram_bankmachine5_row_open <= 1'd1;
                basesoc_sdram_bankmachine5_cmd_valid <= 1'd1;
                basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_sdram_bankmachine5_cmd_ready) begin
                    bankmachine5_next_state <= 3'd6;
                end
                basesoc_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_sdram_bankmachine5_twtpcon_ready) begin
                basesoc_sdram_bankmachine5_refresh_gnt <= 1'd1;
            end
            basesoc_sdram_bankmachine5_row_close <= 1'd1;
            basesoc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_sdram_bankmachine5_refresh_req)) begin
                bankmachine5_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine5_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine5_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_sdram_bankmachine5_refresh_req) begin
                bankmachine5_next_state <= 3'd4;
            end else begin
                if (basesoc_sdram_bankmachine5_source_source_valid) begin
                    if (basesoc_sdram_bankmachine5_row_opened) begin
                        if (basesoc_sdram_bankmachine5_row_hit) begin
                            basesoc_sdram_bankmachine5_cmd_valid <= 1'd1;
                            if (basesoc_sdram_bankmachine5_source_source_payload_we) begin
                                basesoc_sdram_bankmachine5_req_wdata_ready <= basesoc_sdram_bankmachine5_cmd_ready;
                                basesoc_sdram_bankmachine5_cmd_payload_is_write <= 1'd1;
                                basesoc_sdram_bankmachine5_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_sdram_bankmachine5_req_rdata_valid <= basesoc_sdram_bankmachine5_cmd_ready;
                                basesoc_sdram_bankmachine5_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_sdram_bankmachine5_cmd_payload_cas <= 1'd1;
                            if ((basesoc_sdram_bankmachine5_cmd_ready & basesoc_sdram_bankmachine5_auto_precharge)) begin
                                bankmachine5_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine5_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine5_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_sdram_bankmachine6_sink_valid = basesoc_sdram_bankmachine6_req_valid;
assign basesoc_sdram_bankmachine6_req_ready = basesoc_sdram_bankmachine6_sink_ready;
assign basesoc_sdram_bankmachine6_sink_payload_we = basesoc_sdram_bankmachine6_req_we;
assign basesoc_sdram_bankmachine6_sink_payload_addr = basesoc_sdram_bankmachine6_req_addr;
assign basesoc_sdram_bankmachine6_sink_sink_valid = basesoc_sdram_bankmachine6_source_valid;
assign basesoc_sdram_bankmachine6_source_ready = basesoc_sdram_bankmachine6_sink_sink_ready;
assign basesoc_sdram_bankmachine6_sink_sink_first = basesoc_sdram_bankmachine6_source_first;
assign basesoc_sdram_bankmachine6_sink_sink_last = basesoc_sdram_bankmachine6_source_last;
assign basesoc_sdram_bankmachine6_sink_sink_payload_we = basesoc_sdram_bankmachine6_source_payload_we;
assign basesoc_sdram_bankmachine6_sink_sink_payload_addr = basesoc_sdram_bankmachine6_source_payload_addr;
assign basesoc_sdram_bankmachine6_source_source_ready = (basesoc_sdram_bankmachine6_req_wdata_ready | basesoc_sdram_bankmachine6_req_rdata_valid);
assign basesoc_sdram_bankmachine6_req_lock = (basesoc_sdram_bankmachine6_source_valid | basesoc_sdram_bankmachine6_source_source_valid);
assign basesoc_sdram_bankmachine6_row_hit = (basesoc_sdram_bankmachine6_row == basesoc_sdram_bankmachine6_source_source_payload_addr[19:7]);
assign basesoc_sdram_bankmachine6_cmd_payload_ba = 3'd6;
always @(*) begin
    basesoc_sdram_bankmachine6_cmd_payload_a <= 13'd0;
    if (basesoc_sdram_bankmachine6_row_col_n_addr_sel) begin
        basesoc_sdram_bankmachine6_cmd_payload_a <= basesoc_sdram_bankmachine6_source_source_payload_addr[19:7];
    end else begin
        basesoc_sdram_bankmachine6_cmd_payload_a <= ((basesoc_sdram_bankmachine6_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine6_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_sdram_bankmachine6_twtpcon_valid = ((basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_ready) & basesoc_sdram_bankmachine6_cmd_payload_is_write);
assign basesoc_sdram_bankmachine6_trccon_valid = ((basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_ready) & basesoc_sdram_bankmachine6_row_open);
assign basesoc_sdram_bankmachine6_trascon_valid = ((basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_ready) & basesoc_sdram_bankmachine6_row_open);
always @(*) begin
    basesoc_sdram_bankmachine6_auto_precharge <= 1'd0;
    if ((basesoc_sdram_bankmachine6_source_valid & basesoc_sdram_bankmachine6_source_source_valid)) begin
        if ((basesoc_sdram_bankmachine6_source_payload_addr[19:7] != basesoc_sdram_bankmachine6_source_source_payload_addr[19:7])) begin
            basesoc_sdram_bankmachine6_auto_precharge <= (basesoc_sdram_bankmachine6_row_close == 1'd0);
        end
    end
end
assign basesoc_sdram_bankmachine6_syncfifo6_din = {basesoc_sdram_bankmachine6_fifo_in_last, basesoc_sdram_bankmachine6_fifo_in_first, basesoc_sdram_bankmachine6_fifo_in_payload_addr, basesoc_sdram_bankmachine6_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine6_fifo_out_last, basesoc_sdram_bankmachine6_fifo_out_first, basesoc_sdram_bankmachine6_fifo_out_payload_addr, basesoc_sdram_bankmachine6_fifo_out_payload_we} = basesoc_sdram_bankmachine6_syncfifo6_dout;
assign basesoc_sdram_bankmachine6_sink_ready = basesoc_sdram_bankmachine6_syncfifo6_writable;
assign basesoc_sdram_bankmachine6_syncfifo6_we = basesoc_sdram_bankmachine6_sink_valid;
assign basesoc_sdram_bankmachine6_fifo_in_first = basesoc_sdram_bankmachine6_sink_first;
assign basesoc_sdram_bankmachine6_fifo_in_last = basesoc_sdram_bankmachine6_sink_last;
assign basesoc_sdram_bankmachine6_fifo_in_payload_we = basesoc_sdram_bankmachine6_sink_payload_we;
assign basesoc_sdram_bankmachine6_fifo_in_payload_addr = basesoc_sdram_bankmachine6_sink_payload_addr;
assign basesoc_sdram_bankmachine6_source_valid = basesoc_sdram_bankmachine6_syncfifo6_readable;
assign basesoc_sdram_bankmachine6_source_first = basesoc_sdram_bankmachine6_fifo_out_first;
assign basesoc_sdram_bankmachine6_source_last = basesoc_sdram_bankmachine6_fifo_out_last;
assign basesoc_sdram_bankmachine6_source_payload_we = basesoc_sdram_bankmachine6_fifo_out_payload_we;
assign basesoc_sdram_bankmachine6_source_payload_addr = basesoc_sdram_bankmachine6_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine6_syncfifo6_re = basesoc_sdram_bankmachine6_source_ready;
always @(*) begin
    basesoc_sdram_bankmachine6_wrport_adr <= 3'd0;
    if (basesoc_sdram_bankmachine6_replace) begin
        basesoc_sdram_bankmachine6_wrport_adr <= (basesoc_sdram_bankmachine6_produce - 1'd1);
    end else begin
        basesoc_sdram_bankmachine6_wrport_adr <= basesoc_sdram_bankmachine6_produce;
    end
end
assign basesoc_sdram_bankmachine6_wrport_dat_w = basesoc_sdram_bankmachine6_syncfifo6_din;
assign basesoc_sdram_bankmachine6_wrport_we = (basesoc_sdram_bankmachine6_syncfifo6_we & (basesoc_sdram_bankmachine6_syncfifo6_writable | basesoc_sdram_bankmachine6_replace));
assign basesoc_sdram_bankmachine6_do_read = (basesoc_sdram_bankmachine6_syncfifo6_readable & basesoc_sdram_bankmachine6_syncfifo6_re);
assign basesoc_sdram_bankmachine6_rdport_adr = basesoc_sdram_bankmachine6_consume;
assign basesoc_sdram_bankmachine6_syncfifo6_dout = basesoc_sdram_bankmachine6_rdport_dat_r;
assign basesoc_sdram_bankmachine6_syncfifo6_writable = (basesoc_sdram_bankmachine6_level != 4'd8);
assign basesoc_sdram_bankmachine6_syncfifo6_readable = (basesoc_sdram_bankmachine6_level != 1'd0);
assign basesoc_sdram_bankmachine6_pipe_valid_sink_ready = ((~basesoc_sdram_bankmachine6_pipe_valid_source_valid) | basesoc_sdram_bankmachine6_pipe_valid_source_ready);
assign basesoc_sdram_bankmachine6_pipe_valid_sink_valid = basesoc_sdram_bankmachine6_sink_sink_valid;
assign basesoc_sdram_bankmachine6_sink_sink_ready = basesoc_sdram_bankmachine6_pipe_valid_sink_ready;
assign basesoc_sdram_bankmachine6_pipe_valid_sink_first = basesoc_sdram_bankmachine6_sink_sink_first;
assign basesoc_sdram_bankmachine6_pipe_valid_sink_last = basesoc_sdram_bankmachine6_sink_sink_last;
assign basesoc_sdram_bankmachine6_pipe_valid_sink_payload_we = basesoc_sdram_bankmachine6_sink_sink_payload_we;
assign basesoc_sdram_bankmachine6_pipe_valid_sink_payload_addr = basesoc_sdram_bankmachine6_sink_sink_payload_addr;
assign basesoc_sdram_bankmachine6_source_source_valid = basesoc_sdram_bankmachine6_pipe_valid_source_valid;
assign basesoc_sdram_bankmachine6_pipe_valid_source_ready = basesoc_sdram_bankmachine6_source_source_ready;
assign basesoc_sdram_bankmachine6_source_source_first = basesoc_sdram_bankmachine6_pipe_valid_source_first;
assign basesoc_sdram_bankmachine6_source_source_last = basesoc_sdram_bankmachine6_pipe_valid_source_last;
assign basesoc_sdram_bankmachine6_source_source_payload_we = basesoc_sdram_bankmachine6_pipe_valid_source_payload_we;
assign basesoc_sdram_bankmachine6_source_source_payload_addr = basesoc_sdram_bankmachine6_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine6_next_state <= 3'd0;
    basesoc_sdram_bankmachine6_cmd_payload_cas <= 1'd0;
    basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd0;
    basesoc_sdram_bankmachine6_cmd_payload_is_read <= 1'd0;
    basesoc_sdram_bankmachine6_cmd_payload_is_write <= 1'd0;
    basesoc_sdram_bankmachine6_cmd_payload_ras <= 1'd0;
    basesoc_sdram_bankmachine6_cmd_payload_we <= 1'd0;
    basesoc_sdram_bankmachine6_cmd_valid <= 1'd0;
    basesoc_sdram_bankmachine6_refresh_gnt <= 1'd0;
    basesoc_sdram_bankmachine6_req_rdata_valid <= 1'd0;
    basesoc_sdram_bankmachine6_req_wdata_ready <= 1'd0;
    basesoc_sdram_bankmachine6_row_close <= 1'd0;
    basesoc_sdram_bankmachine6_row_col_n_addr_sel <= 1'd0;
    basesoc_sdram_bankmachine6_row_open <= 1'd0;
    bankmachine6_next_state <= bankmachine6_state;
    case (bankmachine6_state)
        1'd1: begin
            if ((basesoc_sdram_bankmachine6_twtpcon_ready & basesoc_sdram_bankmachine6_trascon_ready)) begin
                basesoc_sdram_bankmachine6_cmd_valid <= 1'd1;
                if (basesoc_sdram_bankmachine6_cmd_ready) begin
                    bankmachine6_next_state <= 3'd5;
                end
                basesoc_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
                basesoc_sdram_bankmachine6_cmd_payload_we <= 1'd1;
                basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_sdram_bankmachine6_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_sdram_bankmachine6_twtpcon_ready & basesoc_sdram_bankmachine6_trascon_ready)) begin
                bankmachine6_next_state <= 3'd5;
            end
            basesoc_sdram_bankmachine6_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_sdram_bankmachine6_trccon_ready) begin
                basesoc_sdram_bankmachine6_row_col_n_addr_sel <= 1'd1;
                basesoc_sdram_bankmachine6_row_open <= 1'd1;
                basesoc_sdram_bankmachine6_cmd_valid <= 1'd1;
                basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_sdram_bankmachine6_cmd_ready) begin
                    bankmachine6_next_state <= 3'd6;
                end
                basesoc_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_sdram_bankmachine6_twtpcon_ready) begin
                basesoc_sdram_bankmachine6_refresh_gnt <= 1'd1;
            end
            basesoc_sdram_bankmachine6_row_close <= 1'd1;
            basesoc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_sdram_bankmachine6_refresh_req)) begin
                bankmachine6_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine6_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine6_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_sdram_bankmachine6_refresh_req) begin
                bankmachine6_next_state <= 3'd4;
            end else begin
                if (basesoc_sdram_bankmachine6_source_source_valid) begin
                    if (basesoc_sdram_bankmachine6_row_opened) begin
                        if (basesoc_sdram_bankmachine6_row_hit) begin
                            basesoc_sdram_bankmachine6_cmd_valid <= 1'd1;
                            if (basesoc_sdram_bankmachine6_source_source_payload_we) begin
                                basesoc_sdram_bankmachine6_req_wdata_ready <= basesoc_sdram_bankmachine6_cmd_ready;
                                basesoc_sdram_bankmachine6_cmd_payload_is_write <= 1'd1;
                                basesoc_sdram_bankmachine6_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_sdram_bankmachine6_req_rdata_valid <= basesoc_sdram_bankmachine6_cmd_ready;
                                basesoc_sdram_bankmachine6_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_sdram_bankmachine6_cmd_payload_cas <= 1'd1;
                            if ((basesoc_sdram_bankmachine6_cmd_ready & basesoc_sdram_bankmachine6_auto_precharge)) begin
                                bankmachine6_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine6_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine6_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_sdram_bankmachine7_sink_valid = basesoc_sdram_bankmachine7_req_valid;
assign basesoc_sdram_bankmachine7_req_ready = basesoc_sdram_bankmachine7_sink_ready;
assign basesoc_sdram_bankmachine7_sink_payload_we = basesoc_sdram_bankmachine7_req_we;
assign basesoc_sdram_bankmachine7_sink_payload_addr = basesoc_sdram_bankmachine7_req_addr;
assign basesoc_sdram_bankmachine7_sink_sink_valid = basesoc_sdram_bankmachine7_source_valid;
assign basesoc_sdram_bankmachine7_source_ready = basesoc_sdram_bankmachine7_sink_sink_ready;
assign basesoc_sdram_bankmachine7_sink_sink_first = basesoc_sdram_bankmachine7_source_first;
assign basesoc_sdram_bankmachine7_sink_sink_last = basesoc_sdram_bankmachine7_source_last;
assign basesoc_sdram_bankmachine7_sink_sink_payload_we = basesoc_sdram_bankmachine7_source_payload_we;
assign basesoc_sdram_bankmachine7_sink_sink_payload_addr = basesoc_sdram_bankmachine7_source_payload_addr;
assign basesoc_sdram_bankmachine7_source_source_ready = (basesoc_sdram_bankmachine7_req_wdata_ready | basesoc_sdram_bankmachine7_req_rdata_valid);
assign basesoc_sdram_bankmachine7_req_lock = (basesoc_sdram_bankmachine7_source_valid | basesoc_sdram_bankmachine7_source_source_valid);
assign basesoc_sdram_bankmachine7_row_hit = (basesoc_sdram_bankmachine7_row == basesoc_sdram_bankmachine7_source_source_payload_addr[19:7]);
assign basesoc_sdram_bankmachine7_cmd_payload_ba = 3'd7;
always @(*) begin
    basesoc_sdram_bankmachine7_cmd_payload_a <= 13'd0;
    if (basesoc_sdram_bankmachine7_row_col_n_addr_sel) begin
        basesoc_sdram_bankmachine7_cmd_payload_a <= basesoc_sdram_bankmachine7_source_source_payload_addr[19:7];
    end else begin
        basesoc_sdram_bankmachine7_cmd_payload_a <= ((basesoc_sdram_bankmachine7_auto_precharge <<< 4'd10) | {basesoc_sdram_bankmachine7_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign basesoc_sdram_bankmachine7_twtpcon_valid = ((basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_ready) & basesoc_sdram_bankmachine7_cmd_payload_is_write);
assign basesoc_sdram_bankmachine7_trccon_valid = ((basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_ready) & basesoc_sdram_bankmachine7_row_open);
assign basesoc_sdram_bankmachine7_trascon_valid = ((basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_ready) & basesoc_sdram_bankmachine7_row_open);
always @(*) begin
    basesoc_sdram_bankmachine7_auto_precharge <= 1'd0;
    if ((basesoc_sdram_bankmachine7_source_valid & basesoc_sdram_bankmachine7_source_source_valid)) begin
        if ((basesoc_sdram_bankmachine7_source_payload_addr[19:7] != basesoc_sdram_bankmachine7_source_source_payload_addr[19:7])) begin
            basesoc_sdram_bankmachine7_auto_precharge <= (basesoc_sdram_bankmachine7_row_close == 1'd0);
        end
    end
end
assign basesoc_sdram_bankmachine7_syncfifo7_din = {basesoc_sdram_bankmachine7_fifo_in_last, basesoc_sdram_bankmachine7_fifo_in_first, basesoc_sdram_bankmachine7_fifo_in_payload_addr, basesoc_sdram_bankmachine7_fifo_in_payload_we};
assign {basesoc_sdram_bankmachine7_fifo_out_last, basesoc_sdram_bankmachine7_fifo_out_first, basesoc_sdram_bankmachine7_fifo_out_payload_addr, basesoc_sdram_bankmachine7_fifo_out_payload_we} = basesoc_sdram_bankmachine7_syncfifo7_dout;
assign basesoc_sdram_bankmachine7_sink_ready = basesoc_sdram_bankmachine7_syncfifo7_writable;
assign basesoc_sdram_bankmachine7_syncfifo7_we = basesoc_sdram_bankmachine7_sink_valid;
assign basesoc_sdram_bankmachine7_fifo_in_first = basesoc_sdram_bankmachine7_sink_first;
assign basesoc_sdram_bankmachine7_fifo_in_last = basesoc_sdram_bankmachine7_sink_last;
assign basesoc_sdram_bankmachine7_fifo_in_payload_we = basesoc_sdram_bankmachine7_sink_payload_we;
assign basesoc_sdram_bankmachine7_fifo_in_payload_addr = basesoc_sdram_bankmachine7_sink_payload_addr;
assign basesoc_sdram_bankmachine7_source_valid = basesoc_sdram_bankmachine7_syncfifo7_readable;
assign basesoc_sdram_bankmachine7_source_first = basesoc_sdram_bankmachine7_fifo_out_first;
assign basesoc_sdram_bankmachine7_source_last = basesoc_sdram_bankmachine7_fifo_out_last;
assign basesoc_sdram_bankmachine7_source_payload_we = basesoc_sdram_bankmachine7_fifo_out_payload_we;
assign basesoc_sdram_bankmachine7_source_payload_addr = basesoc_sdram_bankmachine7_fifo_out_payload_addr;
assign basesoc_sdram_bankmachine7_syncfifo7_re = basesoc_sdram_bankmachine7_source_ready;
always @(*) begin
    basesoc_sdram_bankmachine7_wrport_adr <= 3'd0;
    if (basesoc_sdram_bankmachine7_replace) begin
        basesoc_sdram_bankmachine7_wrport_adr <= (basesoc_sdram_bankmachine7_produce - 1'd1);
    end else begin
        basesoc_sdram_bankmachine7_wrport_adr <= basesoc_sdram_bankmachine7_produce;
    end
end
assign basesoc_sdram_bankmachine7_wrport_dat_w = basesoc_sdram_bankmachine7_syncfifo7_din;
assign basesoc_sdram_bankmachine7_wrport_we = (basesoc_sdram_bankmachine7_syncfifo7_we & (basesoc_sdram_bankmachine7_syncfifo7_writable | basesoc_sdram_bankmachine7_replace));
assign basesoc_sdram_bankmachine7_do_read = (basesoc_sdram_bankmachine7_syncfifo7_readable & basesoc_sdram_bankmachine7_syncfifo7_re);
assign basesoc_sdram_bankmachine7_rdport_adr = basesoc_sdram_bankmachine7_consume;
assign basesoc_sdram_bankmachine7_syncfifo7_dout = basesoc_sdram_bankmachine7_rdport_dat_r;
assign basesoc_sdram_bankmachine7_syncfifo7_writable = (basesoc_sdram_bankmachine7_level != 4'd8);
assign basesoc_sdram_bankmachine7_syncfifo7_readable = (basesoc_sdram_bankmachine7_level != 1'd0);
assign basesoc_sdram_bankmachine7_pipe_valid_sink_ready = ((~basesoc_sdram_bankmachine7_pipe_valid_source_valid) | basesoc_sdram_bankmachine7_pipe_valid_source_ready);
assign basesoc_sdram_bankmachine7_pipe_valid_sink_valid = basesoc_sdram_bankmachine7_sink_sink_valid;
assign basesoc_sdram_bankmachine7_sink_sink_ready = basesoc_sdram_bankmachine7_pipe_valid_sink_ready;
assign basesoc_sdram_bankmachine7_pipe_valid_sink_first = basesoc_sdram_bankmachine7_sink_sink_first;
assign basesoc_sdram_bankmachine7_pipe_valid_sink_last = basesoc_sdram_bankmachine7_sink_sink_last;
assign basesoc_sdram_bankmachine7_pipe_valid_sink_payload_we = basesoc_sdram_bankmachine7_sink_sink_payload_we;
assign basesoc_sdram_bankmachine7_pipe_valid_sink_payload_addr = basesoc_sdram_bankmachine7_sink_sink_payload_addr;
assign basesoc_sdram_bankmachine7_source_source_valid = basesoc_sdram_bankmachine7_pipe_valid_source_valid;
assign basesoc_sdram_bankmachine7_pipe_valid_source_ready = basesoc_sdram_bankmachine7_source_source_ready;
assign basesoc_sdram_bankmachine7_source_source_first = basesoc_sdram_bankmachine7_pipe_valid_source_first;
assign basesoc_sdram_bankmachine7_source_source_last = basesoc_sdram_bankmachine7_pipe_valid_source_last;
assign basesoc_sdram_bankmachine7_source_source_payload_we = basesoc_sdram_bankmachine7_pipe_valid_source_payload_we;
assign basesoc_sdram_bankmachine7_source_source_payload_addr = basesoc_sdram_bankmachine7_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine7_next_state <= 3'd0;
    basesoc_sdram_bankmachine7_cmd_payload_cas <= 1'd0;
    basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd0;
    basesoc_sdram_bankmachine7_cmd_payload_is_read <= 1'd0;
    basesoc_sdram_bankmachine7_cmd_payload_is_write <= 1'd0;
    basesoc_sdram_bankmachine7_cmd_payload_ras <= 1'd0;
    basesoc_sdram_bankmachine7_cmd_payload_we <= 1'd0;
    basesoc_sdram_bankmachine7_cmd_valid <= 1'd0;
    basesoc_sdram_bankmachine7_refresh_gnt <= 1'd0;
    basesoc_sdram_bankmachine7_req_rdata_valid <= 1'd0;
    basesoc_sdram_bankmachine7_req_wdata_ready <= 1'd0;
    basesoc_sdram_bankmachine7_row_close <= 1'd0;
    basesoc_sdram_bankmachine7_row_col_n_addr_sel <= 1'd0;
    basesoc_sdram_bankmachine7_row_open <= 1'd0;
    bankmachine7_next_state <= bankmachine7_state;
    case (bankmachine7_state)
        1'd1: begin
            if ((basesoc_sdram_bankmachine7_twtpcon_ready & basesoc_sdram_bankmachine7_trascon_ready)) begin
                basesoc_sdram_bankmachine7_cmd_valid <= 1'd1;
                if (basesoc_sdram_bankmachine7_cmd_ready) begin
                    bankmachine7_next_state <= 3'd5;
                end
                basesoc_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
                basesoc_sdram_bankmachine7_cmd_payload_we <= 1'd1;
                basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            end
            basesoc_sdram_bankmachine7_row_close <= 1'd1;
        end
        2'd2: begin
            if ((basesoc_sdram_bankmachine7_twtpcon_ready & basesoc_sdram_bankmachine7_trascon_ready)) begin
                bankmachine7_next_state <= 3'd5;
            end
            basesoc_sdram_bankmachine7_row_close <= 1'd1;
        end
        2'd3: begin
            if (basesoc_sdram_bankmachine7_trccon_ready) begin
                basesoc_sdram_bankmachine7_row_col_n_addr_sel <= 1'd1;
                basesoc_sdram_bankmachine7_row_open <= 1'd1;
                basesoc_sdram_bankmachine7_cmd_valid <= 1'd1;
                basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
                if (basesoc_sdram_bankmachine7_cmd_ready) begin
                    bankmachine7_next_state <= 3'd6;
                end
                basesoc_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (basesoc_sdram_bankmachine7_twtpcon_ready) begin
                basesoc_sdram_bankmachine7_refresh_gnt <= 1'd1;
            end
            basesoc_sdram_bankmachine7_row_close <= 1'd1;
            basesoc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            if ((~basesoc_sdram_bankmachine7_refresh_req)) begin
                bankmachine7_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine7_next_state <= 2'd3;
        end
        3'd6: begin
            bankmachine7_next_state <= 1'd0;
        end
        default: begin
            if (basesoc_sdram_bankmachine7_refresh_req) begin
                bankmachine7_next_state <= 3'd4;
            end else begin
                if (basesoc_sdram_bankmachine7_source_source_valid) begin
                    if (basesoc_sdram_bankmachine7_row_opened) begin
                        if (basesoc_sdram_bankmachine7_row_hit) begin
                            basesoc_sdram_bankmachine7_cmd_valid <= 1'd1;
                            if (basesoc_sdram_bankmachine7_source_source_payload_we) begin
                                basesoc_sdram_bankmachine7_req_wdata_ready <= basesoc_sdram_bankmachine7_cmd_ready;
                                basesoc_sdram_bankmachine7_cmd_payload_is_write <= 1'd1;
                                basesoc_sdram_bankmachine7_cmd_payload_we <= 1'd1;
                            end else begin
                                basesoc_sdram_bankmachine7_req_rdata_valid <= basesoc_sdram_bankmachine7_cmd_ready;
                                basesoc_sdram_bankmachine7_cmd_payload_is_read <= 1'd1;
                            end
                            basesoc_sdram_bankmachine7_cmd_payload_cas <= 1'd1;
                            if ((basesoc_sdram_bankmachine7_cmd_ready & basesoc_sdram_bankmachine7_auto_precharge)) begin
                                bankmachine7_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine7_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine7_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign basesoc_sdram_trrdcon_valid = ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & ((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we)));
assign basesoc_sdram_tfawcon_valid = ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & ((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we)));
assign basesoc_sdram_ras_allowed = (basesoc_sdram_trrdcon_ready & basesoc_sdram_tfawcon_ready);
assign basesoc_sdram_tccdcon_valid = ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_cmd_payload_is_write | basesoc_sdram_choose_req_cmd_payload_is_read));
assign basesoc_sdram_cas_allowed = basesoc_sdram_tccdcon_ready;
assign basesoc_sdram_twtrcon_valid = ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
assign basesoc_sdram_read_available = ((((((((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_payload_is_read) | (basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_payload_is_read)) | (basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_payload_is_read)) | (basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_payload_is_read)) | (basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_payload_is_read)) | (basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_payload_is_read)) | (basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_payload_is_read)) | (basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_payload_is_read));
assign basesoc_sdram_write_available = ((((((((basesoc_sdram_bankmachine0_cmd_valid & basesoc_sdram_bankmachine0_cmd_payload_is_write) | (basesoc_sdram_bankmachine1_cmd_valid & basesoc_sdram_bankmachine1_cmd_payload_is_write)) | (basesoc_sdram_bankmachine2_cmd_valid & basesoc_sdram_bankmachine2_cmd_payload_is_write)) | (basesoc_sdram_bankmachine3_cmd_valid & basesoc_sdram_bankmachine3_cmd_payload_is_write)) | (basesoc_sdram_bankmachine4_cmd_valid & basesoc_sdram_bankmachine4_cmd_payload_is_write)) | (basesoc_sdram_bankmachine5_cmd_valid & basesoc_sdram_bankmachine5_cmd_payload_is_write)) | (basesoc_sdram_bankmachine6_cmd_valid & basesoc_sdram_bankmachine6_cmd_payload_is_write)) | (basesoc_sdram_bankmachine7_cmd_valid & basesoc_sdram_bankmachine7_cmd_payload_is_write));
assign basesoc_sdram_max_time0 = (basesoc_sdram_time0 == 1'd0);
assign basesoc_sdram_max_time1 = (basesoc_sdram_time1 == 1'd0);
assign basesoc_sdram_bankmachine0_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine1_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine2_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine3_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine4_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine5_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine6_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_bankmachine7_refresh_req = basesoc_sdram_cmd_valid;
assign basesoc_sdram_go_to_refresh = (((((((basesoc_sdram_bankmachine0_refresh_gnt & basesoc_sdram_bankmachine1_refresh_gnt) & basesoc_sdram_bankmachine2_refresh_gnt) & basesoc_sdram_bankmachine3_refresh_gnt) & basesoc_sdram_bankmachine4_refresh_gnt) & basesoc_sdram_bankmachine5_refresh_gnt) & basesoc_sdram_bankmachine6_refresh_gnt) & basesoc_sdram_bankmachine7_refresh_gnt);
assign basesoc_sdram_interface_rdata = {basesoc_sdram_dfi_p1_rddata, basesoc_sdram_dfi_p0_rddata};
assign {basesoc_sdram_dfi_p1_wrdata, basesoc_sdram_dfi_p0_wrdata} = basesoc_sdram_interface_wdata;
assign {basesoc_sdram_dfi_p1_wrdata_mask, basesoc_sdram_dfi_p0_wrdata_mask} = (~basesoc_sdram_interface_wdata_we);
always @(*) begin
    basesoc_sdram_choose_cmd_valids <= 8'd0;
    basesoc_sdram_choose_cmd_valids[0] <= (basesoc_sdram_bankmachine0_cmd_valid & (((basesoc_sdram_bankmachine0_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine0_cmd_payload_ras & (~basesoc_sdram_bankmachine0_cmd_payload_cas)) & (~basesoc_sdram_bankmachine0_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine0_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine0_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
    basesoc_sdram_choose_cmd_valids[1] <= (basesoc_sdram_bankmachine1_cmd_valid & (((basesoc_sdram_bankmachine1_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine1_cmd_payload_ras & (~basesoc_sdram_bankmachine1_cmd_payload_cas)) & (~basesoc_sdram_bankmachine1_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine1_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine1_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
    basesoc_sdram_choose_cmd_valids[2] <= (basesoc_sdram_bankmachine2_cmd_valid & (((basesoc_sdram_bankmachine2_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine2_cmd_payload_ras & (~basesoc_sdram_bankmachine2_cmd_payload_cas)) & (~basesoc_sdram_bankmachine2_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine2_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine2_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
    basesoc_sdram_choose_cmd_valids[3] <= (basesoc_sdram_bankmachine3_cmd_valid & (((basesoc_sdram_bankmachine3_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine3_cmd_payload_ras & (~basesoc_sdram_bankmachine3_cmd_payload_cas)) & (~basesoc_sdram_bankmachine3_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine3_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine3_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
    basesoc_sdram_choose_cmd_valids[4] <= (basesoc_sdram_bankmachine4_cmd_valid & (((basesoc_sdram_bankmachine4_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine4_cmd_payload_ras & (~basesoc_sdram_bankmachine4_cmd_payload_cas)) & (~basesoc_sdram_bankmachine4_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine4_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine4_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
    basesoc_sdram_choose_cmd_valids[5] <= (basesoc_sdram_bankmachine5_cmd_valid & (((basesoc_sdram_bankmachine5_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine5_cmd_payload_ras & (~basesoc_sdram_bankmachine5_cmd_payload_cas)) & (~basesoc_sdram_bankmachine5_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine5_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine5_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
    basesoc_sdram_choose_cmd_valids[6] <= (basesoc_sdram_bankmachine6_cmd_valid & (((basesoc_sdram_bankmachine6_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine6_cmd_payload_ras & (~basesoc_sdram_bankmachine6_cmd_payload_cas)) & (~basesoc_sdram_bankmachine6_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine6_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine6_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
    basesoc_sdram_choose_cmd_valids[7] <= (basesoc_sdram_bankmachine7_cmd_valid & (((basesoc_sdram_bankmachine7_cmd_payload_is_cmd & basesoc_sdram_choose_cmd_want_cmds) & ((~((basesoc_sdram_bankmachine7_cmd_payload_ras & (~basesoc_sdram_bankmachine7_cmd_payload_cas)) & (~basesoc_sdram_bankmachine7_cmd_payload_we))) | basesoc_sdram_choose_cmd_want_activates)) | ((basesoc_sdram_bankmachine7_cmd_payload_is_read == basesoc_sdram_choose_cmd_want_reads) & (basesoc_sdram_bankmachine7_cmd_payload_is_write == basesoc_sdram_choose_cmd_want_writes))));
end
assign basesoc_sdram_choose_cmd_request = basesoc_sdram_choose_cmd_valids;
assign basesoc_sdram_choose_cmd_cmd_valid = rhs_self8;
assign basesoc_sdram_choose_cmd_cmd_payload_a = rhs_self9;
assign basesoc_sdram_choose_cmd_cmd_payload_ba = rhs_self10;
assign basesoc_sdram_choose_cmd_cmd_payload_is_read = rhs_self11;
assign basesoc_sdram_choose_cmd_cmd_payload_is_write = rhs_self12;
assign basesoc_sdram_choose_cmd_cmd_payload_is_cmd = rhs_self13;
always @(*) begin
    basesoc_sdram_choose_cmd_cmd_payload_cas <= 1'd0;
    if (basesoc_sdram_choose_cmd_cmd_valid) begin
        basesoc_sdram_choose_cmd_cmd_payload_cas <= t_self0;
    end
end
always @(*) begin
    basesoc_sdram_choose_cmd_cmd_payload_ras <= 1'd0;
    if (basesoc_sdram_choose_cmd_cmd_valid) begin
        basesoc_sdram_choose_cmd_cmd_payload_ras <= t_self1;
    end
end
always @(*) begin
    basesoc_sdram_choose_cmd_cmd_payload_we <= 1'd0;
    if (basesoc_sdram_choose_cmd_cmd_valid) begin
        basesoc_sdram_choose_cmd_cmd_payload_we <= t_self2;
    end
end
assign basesoc_sdram_choose_cmd_ce = (basesoc_sdram_choose_cmd_cmd_ready | (~basesoc_sdram_choose_cmd_cmd_valid));
always @(*) begin
    basesoc_sdram_choose_req_valids <= 8'd0;
    basesoc_sdram_choose_req_valids[0] <= (basesoc_sdram_bankmachine0_cmd_valid & (((basesoc_sdram_bankmachine0_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine0_cmd_payload_ras & (~basesoc_sdram_bankmachine0_cmd_payload_cas)) & (~basesoc_sdram_bankmachine0_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine0_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine0_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
    basesoc_sdram_choose_req_valids[1] <= (basesoc_sdram_bankmachine1_cmd_valid & (((basesoc_sdram_bankmachine1_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine1_cmd_payload_ras & (~basesoc_sdram_bankmachine1_cmd_payload_cas)) & (~basesoc_sdram_bankmachine1_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine1_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine1_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
    basesoc_sdram_choose_req_valids[2] <= (basesoc_sdram_bankmachine2_cmd_valid & (((basesoc_sdram_bankmachine2_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine2_cmd_payload_ras & (~basesoc_sdram_bankmachine2_cmd_payload_cas)) & (~basesoc_sdram_bankmachine2_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine2_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine2_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
    basesoc_sdram_choose_req_valids[3] <= (basesoc_sdram_bankmachine3_cmd_valid & (((basesoc_sdram_bankmachine3_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine3_cmd_payload_ras & (~basesoc_sdram_bankmachine3_cmd_payload_cas)) & (~basesoc_sdram_bankmachine3_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine3_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine3_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
    basesoc_sdram_choose_req_valids[4] <= (basesoc_sdram_bankmachine4_cmd_valid & (((basesoc_sdram_bankmachine4_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine4_cmd_payload_ras & (~basesoc_sdram_bankmachine4_cmd_payload_cas)) & (~basesoc_sdram_bankmachine4_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine4_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine4_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
    basesoc_sdram_choose_req_valids[5] <= (basesoc_sdram_bankmachine5_cmd_valid & (((basesoc_sdram_bankmachine5_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine5_cmd_payload_ras & (~basesoc_sdram_bankmachine5_cmd_payload_cas)) & (~basesoc_sdram_bankmachine5_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine5_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine5_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
    basesoc_sdram_choose_req_valids[6] <= (basesoc_sdram_bankmachine6_cmd_valid & (((basesoc_sdram_bankmachine6_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine6_cmd_payload_ras & (~basesoc_sdram_bankmachine6_cmd_payload_cas)) & (~basesoc_sdram_bankmachine6_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine6_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine6_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
    basesoc_sdram_choose_req_valids[7] <= (basesoc_sdram_bankmachine7_cmd_valid & (((basesoc_sdram_bankmachine7_cmd_payload_is_cmd & basesoc_sdram_choose_req_want_cmds) & ((~((basesoc_sdram_bankmachine7_cmd_payload_ras & (~basesoc_sdram_bankmachine7_cmd_payload_cas)) & (~basesoc_sdram_bankmachine7_cmd_payload_we))) | basesoc_sdram_choose_req_want_activates)) | ((basesoc_sdram_bankmachine7_cmd_payload_is_read == basesoc_sdram_choose_req_want_reads) & (basesoc_sdram_bankmachine7_cmd_payload_is_write == basesoc_sdram_choose_req_want_writes))));
end
assign basesoc_sdram_choose_req_request = basesoc_sdram_choose_req_valids;
assign basesoc_sdram_choose_req_cmd_valid = rhs_self14;
assign basesoc_sdram_choose_req_cmd_payload_a = rhs_self15;
assign basesoc_sdram_choose_req_cmd_payload_ba = rhs_self16;
assign basesoc_sdram_choose_req_cmd_payload_is_read = rhs_self17;
assign basesoc_sdram_choose_req_cmd_payload_is_write = rhs_self18;
assign basesoc_sdram_choose_req_cmd_payload_is_cmd = rhs_self19;
always @(*) begin
    basesoc_sdram_choose_req_cmd_payload_cas <= 1'd0;
    if (basesoc_sdram_choose_req_cmd_valid) begin
        basesoc_sdram_choose_req_cmd_payload_cas <= t_self3;
    end
end
always @(*) begin
    basesoc_sdram_choose_req_cmd_payload_ras <= 1'd0;
    if (basesoc_sdram_choose_req_cmd_valid) begin
        basesoc_sdram_choose_req_cmd_payload_ras <= t_self4;
    end
end
always @(*) begin
    basesoc_sdram_choose_req_cmd_payload_we <= 1'd0;
    if (basesoc_sdram_choose_req_cmd_valid) begin
        basesoc_sdram_choose_req_cmd_payload_we <= t_self5;
    end
end
always @(*) begin
    basesoc_sdram_bankmachine0_cmd_ready <= 1'd0;
    if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 1'd0))) begin
        basesoc_sdram_bankmachine0_cmd_ready <= 1'd1;
    end
    if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 1'd0))) begin
        basesoc_sdram_bankmachine0_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_sdram_bankmachine1_cmd_ready <= 1'd0;
    if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 1'd1))) begin
        basesoc_sdram_bankmachine1_cmd_ready <= 1'd1;
    end
    if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 1'd1))) begin
        basesoc_sdram_bankmachine1_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_sdram_bankmachine2_cmd_ready <= 1'd0;
    if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 2'd2))) begin
        basesoc_sdram_bankmachine2_cmd_ready <= 1'd1;
    end
    if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 2'd2))) begin
        basesoc_sdram_bankmachine2_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_sdram_bankmachine3_cmd_ready <= 1'd0;
    if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 2'd3))) begin
        basesoc_sdram_bankmachine3_cmd_ready <= 1'd1;
    end
    if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 2'd3))) begin
        basesoc_sdram_bankmachine3_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_sdram_bankmachine4_cmd_ready <= 1'd0;
    if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd4))) begin
        basesoc_sdram_bankmachine4_cmd_ready <= 1'd1;
    end
    if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd4))) begin
        basesoc_sdram_bankmachine4_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_sdram_bankmachine5_cmd_ready <= 1'd0;
    if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd5))) begin
        basesoc_sdram_bankmachine5_cmd_ready <= 1'd1;
    end
    if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd5))) begin
        basesoc_sdram_bankmachine5_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_sdram_bankmachine6_cmd_ready <= 1'd0;
    if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd6))) begin
        basesoc_sdram_bankmachine6_cmd_ready <= 1'd1;
    end
    if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd6))) begin
        basesoc_sdram_bankmachine6_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    basesoc_sdram_bankmachine7_cmd_ready <= 1'd0;
    if (((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & (basesoc_sdram_choose_cmd_grant == 3'd7))) begin
        basesoc_sdram_bankmachine7_cmd_ready <= 1'd1;
    end
    if (((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & (basesoc_sdram_choose_req_grant == 3'd7))) begin
        basesoc_sdram_bankmachine7_cmd_ready <= 1'd1;
    end
end
assign basesoc_sdram_choose_req_ce = (basesoc_sdram_choose_req_cmd_ready | (~basesoc_sdram_choose_req_cmd_valid));
assign basesoc_sdram_dfi_p0_reset_n = 1'd1;
assign basesoc_sdram_dfi_p0_cke = {1{basesoc_sdram_steerer2}};
assign basesoc_sdram_dfi_p0_odt = {1{basesoc_sdram_steerer3}};
assign basesoc_sdram_dfi_p1_reset_n = 1'd1;
assign basesoc_sdram_dfi_p1_cke = {1{basesoc_sdram_steerer4}};
assign basesoc_sdram_dfi_p1_odt = {1{basesoc_sdram_steerer5}};
assign basesoc_sdram_tfawcon_count = ((basesoc_sdram_tfawcon_window[0] + basesoc_sdram_tfawcon_window[1]) + basesoc_sdram_tfawcon_window[2]);
always @(*) begin
    basesoc_sdram_choose_cmd_cmd_ready <= 1'd0;
    basesoc_sdram_choose_cmd_want_activates <= 1'd0;
    basesoc_sdram_choose_req_cmd_ready <= 1'd0;
    basesoc_sdram_choose_req_want_reads <= 1'd0;
    basesoc_sdram_choose_req_want_writes <= 1'd0;
    basesoc_sdram_cmd_ready <= 1'd0;
    basesoc_sdram_en0 <= 1'd0;
    basesoc_sdram_en1 <= 1'd0;
    basesoc_sdram_steerer0 <= 2'd0;
    basesoc_sdram_steerer1 <= 2'd0;
    multiplexer_next_state <= 4'd0;
    multiplexer_next_state <= multiplexer_state;
    case (multiplexer_state)
        1'd1: begin
            basesoc_sdram_en1 <= 1'd1;
            basesoc_sdram_choose_req_want_writes <= 1'd1;
            if (1'd0) begin
                basesoc_sdram_choose_req_cmd_ready <= (basesoc_sdram_cas_allowed & ((~((basesoc_sdram_choose_req_cmd_payload_ras & (~basesoc_sdram_choose_req_cmd_payload_cas)) & (~basesoc_sdram_choose_req_cmd_payload_we))) | basesoc_sdram_ras_allowed));
            end else begin
                basesoc_sdram_choose_cmd_want_activates <= basesoc_sdram_ras_allowed;
                basesoc_sdram_choose_cmd_cmd_ready <= ((~((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we))) | basesoc_sdram_ras_allowed);
                basesoc_sdram_choose_req_cmd_ready <= basesoc_sdram_cas_allowed;
            end
            basesoc_sdram_steerer0 <= 1'd0;
            if (1'd0) begin
                basesoc_sdram_steerer0 <= 2'd2;
            end
            if (1'd1) begin
                basesoc_sdram_steerer0 <= 1'd1;
            end
            basesoc_sdram_steerer1 <= 1'd0;
            if (1'd1) begin
                basesoc_sdram_steerer1 <= 2'd2;
            end
            if (1'd0) begin
                basesoc_sdram_steerer1 <= 1'd1;
            end
            if (basesoc_sdram_read_available) begin
                if (((~basesoc_sdram_write_available) | basesoc_sdram_max_time1)) begin
                    multiplexer_next_state <= 2'd3;
                end
            end
            if (basesoc_sdram_go_to_refresh) begin
                multiplexer_next_state <= 2'd2;
            end
        end
        2'd2: begin
            basesoc_sdram_steerer0 <= 2'd3;
            basesoc_sdram_cmd_ready <= 1'd1;
            if (basesoc_sdram_cmd_last) begin
                multiplexer_next_state <= 1'd0;
            end
        end
        2'd3: begin
            if (basesoc_sdram_twtrcon_ready) begin
                multiplexer_next_state <= 1'd0;
            end
        end
        3'd4: begin
            multiplexer_next_state <= 3'd5;
        end
        3'd5: begin
            multiplexer_next_state <= 3'd6;
        end
        3'd6: begin
            multiplexer_next_state <= 3'd7;
        end
        3'd7: begin
            multiplexer_next_state <= 4'd8;
        end
        4'd8: begin
            multiplexer_next_state <= 4'd9;
        end
        4'd9: begin
            multiplexer_next_state <= 4'd10;
        end
        4'd10: begin
            multiplexer_next_state <= 4'd11;
        end
        4'd11: begin
            multiplexer_next_state <= 4'd12;
        end
        4'd12: begin
            multiplexer_next_state <= 4'd13;
        end
        4'd13: begin
            multiplexer_next_state <= 4'd14;
        end
        4'd14: begin
            multiplexer_next_state <= 1'd1;
        end
        default: begin
            basesoc_sdram_en0 <= 1'd1;
            basesoc_sdram_choose_req_want_reads <= 1'd1;
            if (1'd0) begin
                basesoc_sdram_choose_req_cmd_ready <= (basesoc_sdram_cas_allowed & ((~((basesoc_sdram_choose_req_cmd_payload_ras & (~basesoc_sdram_choose_req_cmd_payload_cas)) & (~basesoc_sdram_choose_req_cmd_payload_we))) | basesoc_sdram_ras_allowed));
            end else begin
                basesoc_sdram_choose_cmd_want_activates <= basesoc_sdram_ras_allowed;
                basesoc_sdram_choose_cmd_cmd_ready <= ((~((basesoc_sdram_choose_cmd_cmd_payload_ras & (~basesoc_sdram_choose_cmd_cmd_payload_cas)) & (~basesoc_sdram_choose_cmd_cmd_payload_we))) | basesoc_sdram_ras_allowed);
                basesoc_sdram_choose_req_cmd_ready <= basesoc_sdram_cas_allowed;
            end
            basesoc_sdram_steerer0 <= 1'd0;
            if (1'd1) begin
                basesoc_sdram_steerer0 <= 2'd2;
            end
            if (1'd0) begin
                basesoc_sdram_steerer0 <= 1'd1;
            end
            basesoc_sdram_steerer1 <= 1'd0;
            if (1'd0) begin
                basesoc_sdram_steerer1 <= 2'd2;
            end
            if (1'd1) begin
                basesoc_sdram_steerer1 <= 1'd1;
            end
            if (basesoc_sdram_write_available) begin
                if (((~basesoc_sdram_read_available) | basesoc_sdram_max_time0)) begin
                    multiplexer_next_state <= 3'd4;
                end
            end
            if (basesoc_sdram_go_to_refresh) begin
                multiplexer_next_state <= 2'd2;
            end
        end
    endcase
end
assign roundrobin0_request = {(((basesoc_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin0_ce = ((~basesoc_sdram_interface_bank0_valid) & (~basesoc_sdram_interface_bank0_lock));
assign basesoc_sdram_interface_bank0_addr = rhs_self20;
assign basesoc_sdram_interface_bank0_we = rhs_self21;
assign basesoc_sdram_interface_bank0_valid = rhs_self22;
assign roundrobin1_request = {(((basesoc_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked1 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin1_ce = ((~basesoc_sdram_interface_bank1_valid) & (~basesoc_sdram_interface_bank1_lock));
assign basesoc_sdram_interface_bank1_addr = rhs_self23;
assign basesoc_sdram_interface_bank1_we = rhs_self24;
assign basesoc_sdram_interface_bank1_valid = rhs_self25;
assign roundrobin2_request = {(((basesoc_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked2 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin2_ce = ((~basesoc_sdram_interface_bank2_valid) & (~basesoc_sdram_interface_bank2_lock));
assign basesoc_sdram_interface_bank2_addr = rhs_self26;
assign basesoc_sdram_interface_bank2_we = rhs_self27;
assign basesoc_sdram_interface_bank2_valid = rhs_self28;
assign roundrobin3_request = {(((basesoc_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked3 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin3_ce = ((~basesoc_sdram_interface_bank3_valid) & (~basesoc_sdram_interface_bank3_lock));
assign basesoc_sdram_interface_bank3_addr = rhs_self29;
assign basesoc_sdram_interface_bank3_we = rhs_self30;
assign basesoc_sdram_interface_bank3_valid = rhs_self31;
assign roundrobin4_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked4 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin4_ce = ((~basesoc_sdram_interface_bank4_valid) & (~basesoc_sdram_interface_bank4_lock));
assign basesoc_sdram_interface_bank4_addr = rhs_self32;
assign basesoc_sdram_interface_bank4_we = rhs_self33;
assign basesoc_sdram_interface_bank4_valid = rhs_self34;
assign roundrobin5_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked5 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin5_ce = ((~basesoc_sdram_interface_bank5_valid) & (~basesoc_sdram_interface_bank5_lock));
assign basesoc_sdram_interface_bank5_addr = rhs_self35;
assign basesoc_sdram_interface_bank5_we = rhs_self36;
assign basesoc_sdram_interface_bank5_valid = rhs_self37;
assign roundrobin6_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked6 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin6_ce = ((~basesoc_sdram_interface_bank6_valid) & (~basesoc_sdram_interface_bank6_lock));
assign basesoc_sdram_interface_bank6_addr = rhs_self38;
assign basesoc_sdram_interface_bank6_we = rhs_self39;
assign basesoc_sdram_interface_bank6_valid = rhs_self40;
assign roundrobin7_request = {(((basesoc_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked7 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))))) & basesoc_port_cmd_valid)};
assign roundrobin7_ce = ((~basesoc_sdram_interface_bank7_valid) & (~basesoc_sdram_interface_bank7_lock));
assign basesoc_sdram_interface_bank7_addr = rhs_self41;
assign basesoc_sdram_interface_bank7_we = rhs_self42;
assign basesoc_sdram_interface_bank7_valid = rhs_self43;
assign basesoc_port_cmd_ready = ((((((((1'd0 | (((roundrobin0_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank0_ready)) | (((roundrobin1_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked1 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank1_ready)) | (((roundrobin2_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked2 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank2_ready)) | (((roundrobin3_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked3 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank3_ready)) | (((roundrobin4_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked4 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank4_ready)) | (((roundrobin5_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked5 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank5_ready)) | (((roundrobin6_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked6 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & basesoc_sdram_interface_bank6_ready)) | (((roundrobin7_grant == 1'd0) & ((basesoc_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked7 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0)))))) & basesoc_sdram_interface_bank7_ready));
assign basesoc_port_wdata_ready = new_master_wdata_ready2;
assign basesoc_port_rdata_valid = new_master_rdata_valid12;
always @(*) begin
    basesoc_sdram_interface_wdata <= 128'd0;
    basesoc_sdram_interface_wdata_we <= 16'd0;
    case ({new_master_wdata_ready2})
        1'd1: begin
            basesoc_sdram_interface_wdata <= basesoc_port_wdata_payload_data;
            basesoc_sdram_interface_wdata_we <= basesoc_port_wdata_payload_we;
        end
        default: begin
            basesoc_sdram_interface_wdata <= 1'd0;
            basesoc_sdram_interface_wdata_we <= 1'd0;
        end
    endcase
end
assign basesoc_port_rdata_payload_data = basesoc_sdram_interface_rdata;
assign roundrobin0_grant = 1'd0;
assign roundrobin1_grant = 1'd0;
assign roundrobin2_grant = 1'd0;
assign roundrobin3_grant = 1'd0;
assign roundrobin4_grant = 1'd0;
assign roundrobin5_grant = 1'd0;
assign roundrobin6_grant = 1'd0;
assign roundrobin7_grant = 1'd0;
assign basesoc_data_port_adr = basesoc_wb_sdram_adr[10:2];
always @(*) begin
    basesoc_data_port_dat_w <= 128'd0;
    basesoc_data_port_we <= 16'd0;
    if (basesoc_write_from_slave) begin
        basesoc_data_port_dat_w <= basesoc_interface_dat_r;
        basesoc_data_port_we <= {16{1'd1}};
    end else begin
        basesoc_data_port_dat_w <= {4{basesoc_wb_sdram_dat_w}};
        if ((((basesoc_wb_sdram_cyc & basesoc_wb_sdram_stb) & basesoc_wb_sdram_we) & basesoc_wb_sdram_ack)) begin
            basesoc_data_port_we <= {({4{(basesoc_wb_sdram_adr[1:0] == 2'd3)}} & basesoc_wb_sdram_sel), ({4{(basesoc_wb_sdram_adr[1:0] == 2'd2)}} & basesoc_wb_sdram_sel), ({4{(basesoc_wb_sdram_adr[1:0] == 1'd1)}} & basesoc_wb_sdram_sel), ({4{(basesoc_wb_sdram_adr[1:0] == 1'd0)}} & basesoc_wb_sdram_sel)};
        end
    end
end
assign basesoc_interface_dat_w = basesoc_data_port_dat_r;
assign basesoc_interface_sel = 16'd65535;
always @(*) begin
    basesoc_wb_sdram_dat_r <= 32'd0;
    case (basesoc_adr_offset_r)
        1'd0: begin
            basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[31:0];
        end
        1'd1: begin
            basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[63:32];
        end
        2'd2: begin
            basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[95:64];
        end
        default: begin
            basesoc_wb_sdram_dat_r <= basesoc_data_port_dat_r[127:96];
        end
    endcase
end
assign {basesoc_tag_do_dirty, basesoc_tag_do_tag} = basesoc_tag_port_dat_r;
assign basesoc_tag_port_dat_w = {basesoc_tag_di_dirty, basesoc_tag_di_tag};
assign basesoc_tag_port_adr = basesoc_wb_sdram_adr[10:2];
assign basesoc_tag_di_tag = basesoc_wb_sdram_adr[29:11];
assign basesoc_interface_adr = {basesoc_tag_do_tag, basesoc_wb_sdram_adr[10:2]};
always @(*) begin
    basesoc_interface_cyc <= 1'd0;
    basesoc_interface_stb <= 1'd0;
    basesoc_interface_we <= 1'd0;
    basesoc_tag_di_dirty <= 1'd0;
    basesoc_tag_port_we <= 1'd0;
    basesoc_wb_sdram_ack <= 1'd0;
    basesoc_word_clr <= 1'd0;
    basesoc_word_inc <= 1'd0;
    basesoc_write_from_slave <= 1'd0;
    fullmemorywe_next_state <= 2'd0;
    fullmemorywe_next_state <= fullmemorywe_state;
    case (fullmemorywe_state)
        1'd1: begin
            basesoc_word_clr <= 1'd1;
            if ((basesoc_tag_do_tag == basesoc_wb_sdram_adr[29:11])) begin
                basesoc_wb_sdram_ack <= 1'd1;
                if (basesoc_wb_sdram_we) begin
                    basesoc_tag_di_dirty <= 1'd1;
                    basesoc_tag_port_we <= 1'd1;
                end
                fullmemorywe_next_state <= 1'd0;
            end else begin
                if (basesoc_tag_do_dirty) begin
                    fullmemorywe_next_state <= 2'd2;
                end else begin
                    basesoc_tag_port_we <= 1'd1;
                    basesoc_word_clr <= 1'd1;
                    fullmemorywe_next_state <= 2'd3;
                end
            end
        end
        2'd2: begin
            basesoc_interface_stb <= 1'd1;
            basesoc_interface_cyc <= 1'd1;
            basesoc_interface_we <= 1'd1;
            if (basesoc_interface_ack) begin
                basesoc_word_inc <= 1'd1;
                if (1'd1) begin
                    basesoc_tag_port_we <= 1'd1;
                    basesoc_word_clr <= 1'd1;
                    fullmemorywe_next_state <= 2'd3;
                end
            end
        end
        2'd3: begin
            basesoc_interface_stb <= 1'd1;
            basesoc_interface_cyc <= 1'd1;
            basesoc_interface_we <= 1'd0;
            if (basesoc_interface_ack) begin
                basesoc_write_from_slave <= 1'd1;
                basesoc_word_inc <= 1'd1;
                if (1'd1) begin
                    fullmemorywe_next_state <= 1'd1;
                end else begin
                    fullmemorywe_next_state <= 2'd3;
                end
            end
        end
        default: begin
            if ((basesoc_wb_sdram_cyc & basesoc_wb_sdram_stb)) begin
                fullmemorywe_next_state <= 1'd1;
            end
        end
    endcase
end
assign basesoc_port_cmd_payload_addr = (basesoc_interface_adr - 27'd67108864);
assign basesoc_port_cmd_payload_we = basesoc_interface_we;
assign basesoc_port_cmd_last = (~basesoc_interface_we);
assign basesoc_port_flush = (~basesoc_interface_cyc);
always @(*) begin
    basesoc_port_wdata_valid <= 1'd0;
    basesoc_port_wdata_valid <= (basesoc_interface_stb & basesoc_interface_we);
    if (1'd1) begin
        if ((~basesoc_is_ongoing)) begin
            basesoc_port_wdata_valid <= 1'd0;
        end
    end
end
assign basesoc_port_wdata_payload_data = basesoc_interface_dat_w;
assign basesoc_port_wdata_payload_we = basesoc_interface_sel;
assign basesoc_port_rdata_ready = 1'd1;
always @(*) begin
    basesoc_aborted_litedramwishbone2native_next_value <= 1'd0;
    basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd0;
    basesoc_interface_ack <= 1'd0;
    basesoc_interface_dat_r <= 128'd0;
    basesoc_is_ongoing <= 1'd0;
    basesoc_port_cmd_valid <= 1'd0;
    litedramwishbone2native_next_state <= 2'd0;
    litedramwishbone2native_next_state <= litedramwishbone2native_state;
    case (litedramwishbone2native_state)
        1'd1: begin
            basesoc_is_ongoing <= 1'd1;
            basesoc_aborted_litedramwishbone2native_next_value <= ((~basesoc_interface_cyc) | basesoc_aborted);
            basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if ((basesoc_port_wdata_valid & basesoc_port_wdata_ready)) begin
                basesoc_interface_ack <= (basesoc_interface_cyc & (~basesoc_aborted));
                litedramwishbone2native_next_state <= 1'd0;
            end
        end
        2'd2: begin
            basesoc_aborted_litedramwishbone2native_next_value <= ((~basesoc_interface_cyc) | basesoc_aborted);
            basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if (basesoc_port_rdata_valid) begin
                basesoc_interface_ack <= (basesoc_interface_cyc & (~basesoc_aborted));
                basesoc_interface_dat_r <= basesoc_port_rdata_payload_data;
                litedramwishbone2native_next_state <= 1'd0;
            end
        end
        default: begin
            basesoc_port_cmd_valid <= (basesoc_interface_cyc & basesoc_interface_stb);
            if (((basesoc_port_cmd_valid & basesoc_port_cmd_ready) & basesoc_interface_we)) begin
                litedramwishbone2native_next_state <= 1'd1;
            end
            if (((basesoc_port_cmd_valid & basesoc_port_cmd_ready) & (~basesoc_interface_we))) begin
                litedramwishbone2native_next_state <= 2'd2;
            end
            basesoc_aborted_litedramwishbone2native_next_value <= 1'd0;
            basesoc_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
        end
    endcase
end
assign leds_wait = (~leds_done);
always @(*) begin
    leds_leds <= 6'd0;
    if ((leds_mode == 1'd1)) begin
        leds_leds <= leds_storage;
    end else begin
        leds_leds <= leds_chaser;
    end
end
assign {led5, led4, led3, led2, led1, led0} = (leds_leds ^ 1'd0);
assign leds_done = (leds_count == 1'd0);
always @(*) begin
    interface0_ack <= 1'd0;
    interface0_dat_r <= 32'd0;
    interface1_adr_wishbone2csr_next_value1 <= 14'd0;
    interface1_adr_wishbone2csr_next_value_ce1 <= 1'd0;
    interface1_dat_w_wishbone2csr_next_value0 <= 32'd0;
    interface1_dat_w_wishbone2csr_next_value_ce0 <= 1'd0;
    interface1_re_wishbone2csr_next_value2 <= 1'd0;
    interface1_re_wishbone2csr_next_value_ce2 <= 1'd0;
    interface1_we_wishbone2csr_next_value3 <= 1'd0;
    interface1_we_wishbone2csr_next_value_ce3 <= 1'd0;
    wishbone2csr_next_state <= 2'd0;
    wishbone2csr_next_state <= wishbone2csr_state;
    case (wishbone2csr_state)
        1'd1: begin
            interface1_adr_wishbone2csr_next_value1 <= 1'd0;
            interface1_adr_wishbone2csr_next_value_ce1 <= 1'd1;
            interface1_re_wishbone2csr_next_value2 <= 1'd0;
            interface1_re_wishbone2csr_next_value_ce2 <= 1'd1;
            interface1_we_wishbone2csr_next_value3 <= 1'd0;
            interface1_we_wishbone2csr_next_value_ce3 <= 1'd1;
            wishbone2csr_next_state <= 2'd2;
        end
        2'd2: begin
            interface0_ack <= 1'd1;
            interface0_dat_r <= interface1_dat_r;
            wishbone2csr_next_state <= 1'd0;
        end
        default: begin
            interface1_dat_w_wishbone2csr_next_value0 <= interface0_dat_w;
            interface1_dat_w_wishbone2csr_next_value_ce0 <= 1'd1;
            if ((interface0_cyc & interface0_stb)) begin
                interface1_adr_wishbone2csr_next_value1 <= interface0_adr[29:0];
                interface1_adr_wishbone2csr_next_value_ce1 <= 1'd1;
                interface1_re_wishbone2csr_next_value2 <= ((~interface0_we) & (interface0_sel != 1'd0));
                interface1_re_wishbone2csr_next_value_ce2 <= 1'd1;
                interface1_we_wishbone2csr_next_value3 <= (interface0_we & (interface0_sel != 1'd0));
                interface1_we_wishbone2csr_next_value_ce3 <= 1'd1;
                wishbone2csr_next_state <= 1'd1;
            end
        end
    endcase
end
assign csr_bankarray_csrbank0_sel = (csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd0);
assign csr_bankarray_csrbank0_in_r = csr_bankarray_interface0_bank_bus_dat_w[4:0];
always @(*) begin
    csr_bankarray_csrbank0_in_re <= 1'd0;
    csr_bankarray_csrbank0_in_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank0_in_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_in_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
assign csr_bankarray_csrbank0_in_w = buttons_status[4:0];
assign buttons_we = csr_bankarray_csrbank0_in_we;
assign csr_bankarray_csrbank1_sel = (csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd1);
assign csr_bankarray_csrbank1_reset0_r = csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank1_reset0_re <= 1'd0;
    csr_bankarray_csrbank1_reset0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank1_reset0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_reset0_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_scratch0_r = csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank1_scratch0_re <= 1'd0;
    csr_bankarray_csrbank1_scratch0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank1_scratch0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_scratch0_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_bus_errors_r = csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank1_bus_errors_re <= 1'd0;
    csr_bankarray_csrbank1_bus_errors_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank1_bus_errors_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_bus_errors_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
always @(*) begin
    basesoc_soc_rst <= 1'd0;
    if (basesoc_reset_re) begin
        basesoc_soc_rst <= basesoc_reset_storage[0];
    end
end
assign basesoc_cpu_rst = basesoc_reset_storage[1];
assign csr_bankarray_csrbank1_reset0_w = basesoc_reset_storage[1:0];
assign csr_bankarray_csrbank1_scratch0_w = basesoc_scratch_storage[31:0];
assign csr_bankarray_csrbank1_bus_errors_w = basesoc_bus_errors_status[31:0];
assign basesoc_bus_errors_we = csr_bankarray_csrbank1_bus_errors_we;
assign csr_bankarray_csrbank2_sel = (csr_bankarray_interface2_bank_bus_adr[13:9] == 2'd2);
assign csr_bankarray_csrbank2_dly_sel0_r = csr_bankarray_interface2_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank2_dly_sel0_re <= 1'd0;
    csr_bankarray_csrbank2_dly_sel0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank2_dly_sel0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dly_sel0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign gw2ddrphy_rdly_dq_rst_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    gw2ddrphy_rdly_dq_rst_re <= 1'd0;
    gw2ddrphy_rdly_dq_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
        gw2ddrphy_rdly_dq_rst_re <= csr_bankarray_interface2_bank_bus_we;
        gw2ddrphy_rdly_dq_rst_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign gw2ddrphy_rdly_dq_inc_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    gw2ddrphy_rdly_dq_inc_re <= 1'd0;
    gw2ddrphy_rdly_dq_inc_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
        gw2ddrphy_rdly_dq_inc_re <= csr_bankarray_interface2_bank_bus_we;
        gw2ddrphy_rdly_dq_inc_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign gw2ddrphy_rdly_dq_bitslip_rst_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    gw2ddrphy_rdly_dq_bitslip_rst_re <= 1'd0;
    gw2ddrphy_rdly_dq_bitslip_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
        gw2ddrphy_rdly_dq_bitslip_rst_re <= csr_bankarray_interface2_bank_bus_we;
        gw2ddrphy_rdly_dq_bitslip_rst_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign gw2ddrphy_rdly_dq_bitslip_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    gw2ddrphy_rdly_dq_bitslip_re <= 1'd0;
    gw2ddrphy_rdly_dq_bitslip_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
        gw2ddrphy_rdly_dq_bitslip_re <= csr_bankarray_interface2_bank_bus_we;
        gw2ddrphy_rdly_dq_bitslip_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign gw2ddrphy_burstdet_clr_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    gw2ddrphy_burstdet_clr_re <= 1'd0;
    gw2ddrphy_burstdet_clr_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
        gw2ddrphy_burstdet_clr_re <= csr_bankarray_interface2_bank_bus_we;
        gw2ddrphy_burstdet_clr_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_burstdet_seen_r = csr_bankarray_interface2_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank2_burstdet_seen_re <= 1'd0;
    csr_bankarray_csrbank2_burstdet_seen_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank2_burstdet_seen_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_burstdet_seen_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dly_sel0_w = gw2ddrphy_dly_sel_storage[1:0];
assign csr_bankarray_csrbank2_burstdet_seen_w = gw2ddrphy_burstdet_seen_status[1:0];
assign gw2ddrphy_burstdet_seen_we = csr_bankarray_csrbank2_burstdet_seen_we;
assign csr_bankarray_sel = (csr_bankarray_sram_bus_adr[13:9] == 2'd3);
always @(*) begin
    csr_bankarray_sram_bus_dat_r <= 32'd0;
    if (csr_bankarray_sel_r) begin
        csr_bankarray_sram_bus_dat_r <= csr_bankarray_dat_r;
    end
end
assign csr_bankarray_adr = csr_bankarray_sram_bus_adr[5:0];
assign csr_bankarray_csrbank3_sel = (csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd4);
assign csr_bankarray_csrbank3_out0_r = csr_bankarray_interface3_bank_bus_dat_w[5:0];
always @(*) begin
    csr_bankarray_csrbank3_out0_re <= 1'd0;
    csr_bankarray_csrbank3_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank3_out0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_out0_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_out0_w = leds_storage[5:0];
assign csr_bankarray_csrbank4_sel = (csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd5);
assign csr_bankarray_csrbank4_dfii_control0_r = csr_bankarray_interface4_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_control0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_control0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank4_dfii_control0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_control0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi0_command0_r = csr_bankarray_interface4_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi0_command0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi0_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank4_dfii_pi0_command0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi0_command0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign basesoc_sdram_phaseinjector0_command_issue_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    basesoc_sdram_phaseinjector0_command_issue_re <= 1'd0;
    basesoc_sdram_phaseinjector0_command_issue_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd2))) begin
        basesoc_sdram_phaseinjector0_command_issue_re <= csr_bankarray_interface4_bank_bus_we;
        basesoc_sdram_phaseinjector0_command_issue_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi0_address0_r = csr_bankarray_interface4_bank_bus_dat_w[12:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi0_address0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi0_address0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank4_dfii_pi0_address0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi0_address0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi0_baddress0_r = csr_bankarray_interface4_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi0_baddress0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi0_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank4_dfii_pi0_baddress0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi0_baddress0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi0_wrdata1_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi0_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi0_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank4_dfii_pi0_wrdata1_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi0_wrdata1_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi0_wrdata0_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi0_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi0_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank4_dfii_pi0_wrdata0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi0_wrdata0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi0_rddata1_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi0_rddata1_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi0_rddata1_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank4_dfii_pi0_rddata1_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi0_rddata1_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi0_rddata0_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi0_rddata0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi0_rddata0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd8))) begin
        csr_bankarray_csrbank4_dfii_pi0_rddata0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi0_rddata0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi1_command0_r = csr_bankarray_interface4_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi1_command0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi1_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd9))) begin
        csr_bankarray_csrbank4_dfii_pi1_command0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi1_command0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign basesoc_sdram_phaseinjector1_command_issue_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    basesoc_sdram_phaseinjector1_command_issue_re <= 1'd0;
    basesoc_sdram_phaseinjector1_command_issue_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd10))) begin
        basesoc_sdram_phaseinjector1_command_issue_re <= csr_bankarray_interface4_bank_bus_we;
        basesoc_sdram_phaseinjector1_command_issue_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi1_address0_r = csr_bankarray_interface4_bank_bus_dat_w[12:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi1_address0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi1_address0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd11))) begin
        csr_bankarray_csrbank4_dfii_pi1_address0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi1_address0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi1_baddress0_r = csr_bankarray_interface4_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi1_baddress0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi1_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd12))) begin
        csr_bankarray_csrbank4_dfii_pi1_baddress0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi1_baddress0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi1_wrdata1_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi1_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi1_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd13))) begin
        csr_bankarray_csrbank4_dfii_pi1_wrdata1_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi1_wrdata1_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi1_wrdata0_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi1_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi1_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd14))) begin
        csr_bankarray_csrbank4_dfii_pi1_wrdata0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi1_wrdata0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi1_rddata1_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi1_rddata1_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi1_rddata1_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd15))) begin
        csr_bankarray_csrbank4_dfii_pi1_rddata1_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi1_rddata1_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dfii_pi1_rddata0_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dfii_pi1_rddata0_re <= 1'd0;
    csr_bankarray_csrbank4_dfii_pi1_rddata0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 5'd16))) begin
        csr_bankarray_csrbank4_dfii_pi1_rddata0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dfii_pi1_rddata0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign basesoc_sdram_sel = basesoc_sdram_storage[0];
assign basesoc_sdram_cke = basesoc_sdram_storage[1];
assign basesoc_sdram_odt = basesoc_sdram_storage[2];
assign basesoc_sdram_reset_n = basesoc_sdram_storage[3];
assign csr_bankarray_csrbank4_dfii_control0_w = basesoc_sdram_storage[3:0];
assign basesoc_sdram_phaseinjector0_csrfield_cs = basesoc_sdram_phaseinjector0_command_storage[0];
assign basesoc_sdram_phaseinjector0_csrfield_we = basesoc_sdram_phaseinjector0_command_storage[1];
assign basesoc_sdram_phaseinjector0_csrfield_cas = basesoc_sdram_phaseinjector0_command_storage[2];
assign basesoc_sdram_phaseinjector0_csrfield_ras = basesoc_sdram_phaseinjector0_command_storage[3];
assign basesoc_sdram_phaseinjector0_csrfield_wren = basesoc_sdram_phaseinjector0_command_storage[4];
assign basesoc_sdram_phaseinjector0_csrfield_rden = basesoc_sdram_phaseinjector0_command_storage[5];
assign basesoc_sdram_phaseinjector0_csrfield_cs_top = basesoc_sdram_phaseinjector0_command_storage[6];
assign basesoc_sdram_phaseinjector0_csrfield_cs_bottom = basesoc_sdram_phaseinjector0_command_storage[7];
assign csr_bankarray_csrbank4_dfii_pi0_command0_w = basesoc_sdram_phaseinjector0_command_storage[7:0];
assign csr_bankarray_csrbank4_dfii_pi0_address0_w = basesoc_sdram_phaseinjector0_address_storage[12:0];
assign csr_bankarray_csrbank4_dfii_pi0_baddress0_w = basesoc_sdram_phaseinjector0_baddress_storage[2:0];
assign csr_bankarray_csrbank4_dfii_pi0_wrdata1_w = basesoc_sdram_phaseinjector0_wrdata_storage[63:32];
assign csr_bankarray_csrbank4_dfii_pi0_wrdata0_w = basesoc_sdram_phaseinjector0_wrdata_storage[31:0];
assign csr_bankarray_csrbank4_dfii_pi0_rddata1_w = basesoc_sdram_phaseinjector0_rddata_status[63:32];
assign csr_bankarray_csrbank4_dfii_pi0_rddata0_w = basesoc_sdram_phaseinjector0_rddata_status[31:0];
assign basesoc_sdram_phaseinjector0_rddata_we = csr_bankarray_csrbank4_dfii_pi0_rddata0_we;
assign basesoc_sdram_phaseinjector1_csrfield_cs = basesoc_sdram_phaseinjector1_command_storage[0];
assign basesoc_sdram_phaseinjector1_csrfield_we = basesoc_sdram_phaseinjector1_command_storage[1];
assign basesoc_sdram_phaseinjector1_csrfield_cas = basesoc_sdram_phaseinjector1_command_storage[2];
assign basesoc_sdram_phaseinjector1_csrfield_ras = basesoc_sdram_phaseinjector1_command_storage[3];
assign basesoc_sdram_phaseinjector1_csrfield_wren = basesoc_sdram_phaseinjector1_command_storage[4];
assign basesoc_sdram_phaseinjector1_csrfield_rden = basesoc_sdram_phaseinjector1_command_storage[5];
assign basesoc_sdram_phaseinjector1_csrfield_cs_top = basesoc_sdram_phaseinjector1_command_storage[6];
assign basesoc_sdram_phaseinjector1_csrfield_cs_bottom = basesoc_sdram_phaseinjector1_command_storage[7];
assign csr_bankarray_csrbank4_dfii_pi1_command0_w = basesoc_sdram_phaseinjector1_command_storage[7:0];
assign csr_bankarray_csrbank4_dfii_pi1_address0_w = basesoc_sdram_phaseinjector1_address_storage[12:0];
assign csr_bankarray_csrbank4_dfii_pi1_baddress0_w = basesoc_sdram_phaseinjector1_baddress_storage[2:0];
assign csr_bankarray_csrbank4_dfii_pi1_wrdata1_w = basesoc_sdram_phaseinjector1_wrdata_storage[63:32];
assign csr_bankarray_csrbank4_dfii_pi1_wrdata0_w = basesoc_sdram_phaseinjector1_wrdata_storage[31:0];
assign csr_bankarray_csrbank4_dfii_pi1_rddata1_w = basesoc_sdram_phaseinjector1_rddata_status[63:32];
assign csr_bankarray_csrbank4_dfii_pi1_rddata0_w = basesoc_sdram_phaseinjector1_rddata_status[31:0];
assign basesoc_sdram_phaseinjector1_rddata_we = csr_bankarray_csrbank4_dfii_pi1_rddata0_we;
assign csr_bankarray_csrbank5_sel = (csr_bankarray_interface5_bank_bus_adr[13:9] == 3'd6);
assign csr_bankarray_csrbank5_load0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_load0_re <= 1'd0;
    csr_bankarray_csrbank5_load0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank5_load0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_load0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_reload0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_reload0_re <= 1'd0;
    csr_bankarray_csrbank5_reload0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank5_reload0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_reload0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_en0_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_en0_re <= 1'd0;
    csr_bankarray_csrbank5_en0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank5_en0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_en0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_update_value0_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_update_value0_re <= 1'd0;
    csr_bankarray_csrbank5_update_value0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank5_update_value0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_update_value0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_value_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_value_re <= 1'd0;
    csr_bankarray_csrbank5_value_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank5_value_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_value_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_ev_status_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_ev_status_re <= 1'd0;
    csr_bankarray_csrbank5_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank5_ev_status_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_ev_status_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_ev_pending_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank5_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank5_ev_pending_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_ev_pending_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_ev_enable0_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank5_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank5_ev_enable0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_ev_enable0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_load0_w = basesoc_timer_load_storage[31:0];
assign csr_bankarray_csrbank5_reload0_w = basesoc_timer_reload_storage[31:0];
assign csr_bankarray_csrbank5_en0_w = basesoc_timer_en_storage;
assign csr_bankarray_csrbank5_update_value0_w = basesoc_timer_update_value_storage;
assign csr_bankarray_csrbank5_value_w = basesoc_timer_value_status[31:0];
assign basesoc_timer_value_we = csr_bankarray_csrbank5_value_we;
always @(*) begin
    basesoc_timer_status_status <= 1'd0;
    basesoc_timer_status_status <= basesoc_timer_zero0;
end
assign csr_bankarray_csrbank5_ev_status_w = basesoc_timer_status_status;
assign basesoc_timer_status_we = csr_bankarray_csrbank5_ev_status_we;
always @(*) begin
    basesoc_timer_pending_status <= 1'd0;
    basesoc_timer_pending_status <= basesoc_timer_zero1;
end
assign csr_bankarray_csrbank5_ev_pending_w = basesoc_timer_pending_status;
assign basesoc_timer_pending_we = csr_bankarray_csrbank5_ev_pending_we;
assign basesoc_timer_zero2 = basesoc_timer_enable_storage;
assign csr_bankarray_csrbank5_ev_enable0_w = basesoc_timer_enable_storage;
assign csr_bankarray_csrbank6_sel = (csr_bankarray_interface6_bank_bus_adr[13:9] == 3'd7);
assign basesoc_uart_rxtx_r = csr_bankarray_interface6_bank_bus_dat_w[7:0];
always @(*) begin
    basesoc_uart_rxtx_re <= 1'd0;
    basesoc_uart_rxtx_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd0))) begin
        basesoc_uart_rxtx_re <= csr_bankarray_interface6_bank_bus_we;
        basesoc_uart_rxtx_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_txfull_r = csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank6_txfull_re <= 1'd0;
    csr_bankarray_csrbank6_txfull_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank6_txfull_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_txfull_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_rxempty_r = csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank6_rxempty_re <= 1'd0;
    csr_bankarray_csrbank6_rxempty_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank6_rxempty_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_rxempty_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_ev_status_r = csr_bankarray_interface6_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank6_ev_status_re <= 1'd0;
    csr_bankarray_csrbank6_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank6_ev_status_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_ev_status_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_ev_pending_r = csr_bankarray_interface6_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank6_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank6_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank6_ev_pending_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_ev_pending_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_ev_enable0_r = csr_bankarray_interface6_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank6_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank6_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank6_ev_enable0_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_ev_enable0_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_txempty_r = csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank6_txempty_re <= 1'd0;
    csr_bankarray_csrbank6_txempty_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank6_txempty_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_txempty_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_rxfull_r = csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank6_rxfull_re <= 1'd0;
    csr_bankarray_csrbank6_rxfull_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank6_rxfull_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_rxfull_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_txfull_w = basesoc_uart_txfull_status;
assign basesoc_uart_txfull_we = csr_bankarray_csrbank6_txfull_we;
assign csr_bankarray_csrbank6_rxempty_w = basesoc_uart_rxempty_status;
assign basesoc_uart_rxempty_we = csr_bankarray_csrbank6_rxempty_we;
always @(*) begin
    basesoc_uart_status_status <= 2'd0;
    basesoc_uart_status_status[0] <= basesoc_uart_tx0;
    basesoc_uart_status_status[1] <= basesoc_uart_rx0;
end
assign csr_bankarray_csrbank6_ev_status_w = basesoc_uart_status_status[1:0];
assign basesoc_uart_status_we = csr_bankarray_csrbank6_ev_status_we;
always @(*) begin
    basesoc_uart_pending_status <= 2'd0;
    basesoc_uart_pending_status[0] <= basesoc_uart_tx1;
    basesoc_uart_pending_status[1] <= basesoc_uart_rx1;
end
assign csr_bankarray_csrbank6_ev_pending_w = basesoc_uart_pending_status[1:0];
assign basesoc_uart_pending_we = csr_bankarray_csrbank6_ev_pending_we;
assign basesoc_uart_tx2 = basesoc_uart_enable_storage[0];
assign basesoc_uart_rx2 = basesoc_uart_enable_storage[1];
assign csr_bankarray_csrbank6_ev_enable0_w = basesoc_uart_enable_storage[1:0];
assign csr_bankarray_csrbank6_txempty_w = basesoc_uart_txempty_status;
assign basesoc_uart_txempty_we = csr_bankarray_csrbank6_txempty_we;
assign csr_bankarray_csrbank6_rxfull_w = basesoc_uart_rxfull_status;
assign basesoc_uart_rxfull_we = csr_bankarray_csrbank6_rxfull_we;
assign csr_interconnect_adr = interface1_adr;
assign csr_interconnect_re = interface1_re;
assign csr_interconnect_we = interface1_we;
assign csr_interconnect_dat_w = interface1_dat_w;
assign interface1_dat_r = csr_interconnect_dat_r;
assign csr_bankarray_interface0_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface1_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface2_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface3_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface4_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface5_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface6_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_sram_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface0_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface1_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface2_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface3_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface4_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface5_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface6_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_sram_bus_re = csr_interconnect_re;
assign csr_bankarray_interface0_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface1_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface2_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface3_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface4_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface5_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface6_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_sram_bus_we = csr_interconnect_we;
assign csr_bankarray_interface0_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface1_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface2_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface3_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface4_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface5_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface6_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_sram_bus_dat_w = csr_interconnect_dat_w;
assign csr_interconnect_dat_r = (((((((csr_bankarray_interface0_bank_bus_dat_r | csr_bankarray_interface1_bank_bus_dat_r) | csr_bankarray_interface2_bank_bus_dat_r) | csr_bankarray_interface3_bank_bus_dat_r) | csr_bankarray_interface4_bank_bus_dat_r) | csr_bankarray_interface5_bank_bus_dat_r) | csr_bankarray_interface6_bank_bus_dat_r) | csr_bankarray_sram_bus_dat_r);
always @(*) begin
    rhs_self0 <= 30'd0;
    case (grant)
        1'd0: begin
            rhs_self0 <= basesoc_ibus_adr;
        end
        default: begin
            rhs_self0 <= basesoc_dbus_adr;
        end
    endcase
end
always @(*) begin
    rhs_self1 <= 32'd0;
    case (grant)
        1'd0: begin
            rhs_self1 <= basesoc_ibus_dat_w;
        end
        default: begin
            rhs_self1 <= basesoc_dbus_dat_w;
        end
    endcase
end
always @(*) begin
    rhs_self2 <= 4'd0;
    case (grant)
        1'd0: begin
            rhs_self2 <= basesoc_ibus_sel;
        end
        default: begin
            rhs_self2 <= basesoc_dbus_sel;
        end
    endcase
end
always @(*) begin
    rhs_self3 <= 1'd0;
    case (grant)
        1'd0: begin
            rhs_self3 <= basesoc_ibus_cyc;
        end
        default: begin
            rhs_self3 <= basesoc_dbus_cyc;
        end
    endcase
end
always @(*) begin
    rhs_self4 <= 1'd0;
    case (grant)
        1'd0: begin
            rhs_self4 <= basesoc_ibus_stb;
        end
        default: begin
            rhs_self4 <= basesoc_dbus_stb;
        end
    endcase
end
always @(*) begin
    rhs_self5 <= 1'd0;
    case (grant)
        1'd0: begin
            rhs_self5 <= basesoc_ibus_we;
        end
        default: begin
            rhs_self5 <= basesoc_dbus_we;
        end
    endcase
end
always @(*) begin
    rhs_self6 <= 3'd0;
    case (grant)
        1'd0: begin
            rhs_self6 <= basesoc_ibus_cti;
        end
        default: begin
            rhs_self6 <= basesoc_dbus_cti;
        end
    endcase
end
always @(*) begin
    rhs_self7 <= 2'd0;
    case (grant)
        1'd0: begin
            rhs_self7 <= basesoc_ibus_bte;
        end
        default: begin
            rhs_self7 <= basesoc_dbus_bte;
        end
    endcase
end
always @(*) begin
    rhs_self8 <= 1'd0;
    case (basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_self8 <= basesoc_sdram_choose_cmd_valids[0];
        end
        1'd1: begin
            rhs_self8 <= basesoc_sdram_choose_cmd_valids[1];
        end
        2'd2: begin
            rhs_self8 <= basesoc_sdram_choose_cmd_valids[2];
        end
        2'd3: begin
            rhs_self8 <= basesoc_sdram_choose_cmd_valids[3];
        end
        3'd4: begin
            rhs_self8 <= basesoc_sdram_choose_cmd_valids[4];
        end
        3'd5: begin
            rhs_self8 <= basesoc_sdram_choose_cmd_valids[5];
        end
        3'd6: begin
            rhs_self8 <= basesoc_sdram_choose_cmd_valids[6];
        end
        default: begin
            rhs_self8 <= basesoc_sdram_choose_cmd_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_self9 <= 13'd0;
    case (basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_self9 <= basesoc_sdram_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_self9 <= basesoc_sdram_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_self9 <= basesoc_sdram_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_self9 <= basesoc_sdram_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_self9 <= basesoc_sdram_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_self9 <= basesoc_sdram_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_self9 <= basesoc_sdram_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_self9 <= basesoc_sdram_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_self10 <= 3'd0;
    case (basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_self10 <= basesoc_sdram_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_self10 <= basesoc_sdram_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_self10 <= basesoc_sdram_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_self10 <= basesoc_sdram_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_self10 <= basesoc_sdram_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_self10 <= basesoc_sdram_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_self10 <= basesoc_sdram_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_self10 <= basesoc_sdram_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_self11 <= 1'd0;
    case (basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_self11 <= basesoc_sdram_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_self11 <= basesoc_sdram_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_self11 <= basesoc_sdram_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_self11 <= basesoc_sdram_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_self11 <= basesoc_sdram_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_self11 <= basesoc_sdram_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_self11 <= basesoc_sdram_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_self11 <= basesoc_sdram_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_self12 <= 1'd0;
    case (basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_self12 <= basesoc_sdram_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_self12 <= basesoc_sdram_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_self12 <= basesoc_sdram_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_self12 <= basesoc_sdram_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_self12 <= basesoc_sdram_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_self12 <= basesoc_sdram_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_self12 <= basesoc_sdram_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_self12 <= basesoc_sdram_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_self13 <= 1'd0;
    case (basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            rhs_self13 <= basesoc_sdram_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_self13 <= basesoc_sdram_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_self13 <= basesoc_sdram_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_self13 <= basesoc_sdram_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_self13 <= basesoc_sdram_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_self13 <= basesoc_sdram_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_self13 <= basesoc_sdram_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_self13 <= basesoc_sdram_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_self0 <= 1'd0;
    case (basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            t_self0 <= basesoc_sdram_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_self0 <= basesoc_sdram_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_self0 <= basesoc_sdram_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_self0 <= basesoc_sdram_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_self0 <= basesoc_sdram_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_self0 <= basesoc_sdram_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_self0 <= basesoc_sdram_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_self0 <= basesoc_sdram_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_self1 <= 1'd0;
    case (basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            t_self1 <= basesoc_sdram_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_self1 <= basesoc_sdram_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_self1 <= basesoc_sdram_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_self1 <= basesoc_sdram_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_self1 <= basesoc_sdram_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_self1 <= basesoc_sdram_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_self1 <= basesoc_sdram_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_self1 <= basesoc_sdram_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_self2 <= 1'd0;
    case (basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            t_self2 <= basesoc_sdram_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_self2 <= basesoc_sdram_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_self2 <= basesoc_sdram_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_self2 <= basesoc_sdram_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_self2 <= basesoc_sdram_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_self2 <= basesoc_sdram_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_self2 <= basesoc_sdram_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_self2 <= basesoc_sdram_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self14 <= 1'd0;
    case (basesoc_sdram_choose_req_grant)
        1'd0: begin
            rhs_self14 <= basesoc_sdram_choose_req_valids[0];
        end
        1'd1: begin
            rhs_self14 <= basesoc_sdram_choose_req_valids[1];
        end
        2'd2: begin
            rhs_self14 <= basesoc_sdram_choose_req_valids[2];
        end
        2'd3: begin
            rhs_self14 <= basesoc_sdram_choose_req_valids[3];
        end
        3'd4: begin
            rhs_self14 <= basesoc_sdram_choose_req_valids[4];
        end
        3'd5: begin
            rhs_self14 <= basesoc_sdram_choose_req_valids[5];
        end
        3'd6: begin
            rhs_self14 <= basesoc_sdram_choose_req_valids[6];
        end
        default: begin
            rhs_self14 <= basesoc_sdram_choose_req_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_self15 <= 13'd0;
    case (basesoc_sdram_choose_req_grant)
        1'd0: begin
            rhs_self15 <= basesoc_sdram_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_self15 <= basesoc_sdram_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_self15 <= basesoc_sdram_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_self15 <= basesoc_sdram_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_self15 <= basesoc_sdram_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_self15 <= basesoc_sdram_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_self15 <= basesoc_sdram_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_self15 <= basesoc_sdram_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_self16 <= 3'd0;
    case (basesoc_sdram_choose_req_grant)
        1'd0: begin
            rhs_self16 <= basesoc_sdram_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_self16 <= basesoc_sdram_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_self16 <= basesoc_sdram_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_self16 <= basesoc_sdram_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_self16 <= basesoc_sdram_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_self16 <= basesoc_sdram_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_self16 <= basesoc_sdram_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_self16 <= basesoc_sdram_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_self17 <= 1'd0;
    case (basesoc_sdram_choose_req_grant)
        1'd0: begin
            rhs_self17 <= basesoc_sdram_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_self17 <= basesoc_sdram_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_self17 <= basesoc_sdram_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_self17 <= basesoc_sdram_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_self17 <= basesoc_sdram_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_self17 <= basesoc_sdram_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_self17 <= basesoc_sdram_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_self17 <= basesoc_sdram_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_self18 <= 1'd0;
    case (basesoc_sdram_choose_req_grant)
        1'd0: begin
            rhs_self18 <= basesoc_sdram_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_self18 <= basesoc_sdram_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_self18 <= basesoc_sdram_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_self18 <= basesoc_sdram_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_self18 <= basesoc_sdram_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_self18 <= basesoc_sdram_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_self18 <= basesoc_sdram_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_self18 <= basesoc_sdram_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_self19 <= 1'd0;
    case (basesoc_sdram_choose_req_grant)
        1'd0: begin
            rhs_self19 <= basesoc_sdram_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_self19 <= basesoc_sdram_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_self19 <= basesoc_sdram_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_self19 <= basesoc_sdram_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_self19 <= basesoc_sdram_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_self19 <= basesoc_sdram_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_self19 <= basesoc_sdram_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_self19 <= basesoc_sdram_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_self3 <= 1'd0;
    case (basesoc_sdram_choose_req_grant)
        1'd0: begin
            t_self3 <= basesoc_sdram_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_self3 <= basesoc_sdram_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_self3 <= basesoc_sdram_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_self3 <= basesoc_sdram_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_self3 <= basesoc_sdram_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_self3 <= basesoc_sdram_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_self3 <= basesoc_sdram_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_self3 <= basesoc_sdram_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_self4 <= 1'd0;
    case (basesoc_sdram_choose_req_grant)
        1'd0: begin
            t_self4 <= basesoc_sdram_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_self4 <= basesoc_sdram_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_self4 <= basesoc_sdram_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_self4 <= basesoc_sdram_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_self4 <= basesoc_sdram_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_self4 <= basesoc_sdram_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_self4 <= basesoc_sdram_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_self4 <= basesoc_sdram_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_self5 <= 1'd0;
    case (basesoc_sdram_choose_req_grant)
        1'd0: begin
            t_self5 <= basesoc_sdram_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_self5 <= basesoc_sdram_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_self5 <= basesoc_sdram_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_self5 <= basesoc_sdram_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_self5 <= basesoc_sdram_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_self5 <= basesoc_sdram_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_self5 <= basesoc_sdram_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_self5 <= basesoc_sdram_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self20 <= 20'd0;
    case (roundrobin0_grant)
        default: begin
            rhs_self20 <= {basesoc_port_cmd_payload_addr[22:10], basesoc_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self21 <= 1'd0;
    case (roundrobin0_grant)
        default: begin
            rhs_self21 <= basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self22 <= 1'd0;
    case (roundrobin0_grant)
        default: begin
            rhs_self22 <= (((basesoc_port_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self23 <= 20'd0;
    case (roundrobin1_grant)
        default: begin
            rhs_self23 <= {basesoc_port_cmd_payload_addr[22:10], basesoc_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self24 <= 1'd0;
    case (roundrobin1_grant)
        default: begin
            rhs_self24 <= basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self25 <= 1'd0;
    case (roundrobin1_grant)
        default: begin
            rhs_self25 <= (((basesoc_port_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked1 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self26 <= 20'd0;
    case (roundrobin2_grant)
        default: begin
            rhs_self26 <= {basesoc_port_cmd_payload_addr[22:10], basesoc_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self27 <= 1'd0;
    case (roundrobin2_grant)
        default: begin
            rhs_self27 <= basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self28 <= 1'd0;
    case (roundrobin2_grant)
        default: begin
            rhs_self28 <= (((basesoc_port_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked2 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self29 <= 20'd0;
    case (roundrobin3_grant)
        default: begin
            rhs_self29 <= {basesoc_port_cmd_payload_addr[22:10], basesoc_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self30 <= 1'd0;
    case (roundrobin3_grant)
        default: begin
            rhs_self30 <= basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self31 <= 1'd0;
    case (roundrobin3_grant)
        default: begin
            rhs_self31 <= (((basesoc_port_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked3 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self32 <= 20'd0;
    case (roundrobin4_grant)
        default: begin
            rhs_self32 <= {basesoc_port_cmd_payload_addr[22:10], basesoc_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self33 <= 1'd0;
    case (roundrobin4_grant)
        default: begin
            rhs_self33 <= basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self34 <= 1'd0;
    case (roundrobin4_grant)
        default: begin
            rhs_self34 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked4 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self35 <= 20'd0;
    case (roundrobin5_grant)
        default: begin
            rhs_self35 <= {basesoc_port_cmd_payload_addr[22:10], basesoc_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self36 <= 1'd0;
    case (roundrobin5_grant)
        default: begin
            rhs_self36 <= basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self37 <= 1'd0;
    case (roundrobin5_grant)
        default: begin
            rhs_self37 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked5 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self38 <= 20'd0;
    case (roundrobin6_grant)
        default: begin
            rhs_self38 <= {basesoc_port_cmd_payload_addr[22:10], basesoc_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self39 <= 1'd0;
    case (roundrobin6_grant)
        default: begin
            rhs_self39 <= basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self40 <= 1'd0;
    case (roundrobin6_grant)
        default: begin
            rhs_self40 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked6 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_self41 <= 20'd0;
    case (roundrobin7_grant)
        default: begin
            rhs_self41 <= {basesoc_port_cmd_payload_addr[22:10], basesoc_port_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_self42 <= 1'd0;
    case (roundrobin7_grant)
        default: begin
            rhs_self42 <= basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_self43 <= 1'd0;
    case (roundrobin7_grant)
        default: begin
            rhs_self43 <= (((basesoc_port_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked7 | (basesoc_sdram_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (basesoc_sdram_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (basesoc_sdram_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (basesoc_sdram_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (basesoc_sdram_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (basesoc_sdram_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (basesoc_sdram_interface_bank6_lock & (roundrobin6_grant == 1'd0))))) & basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    self0 <= 3'd0;
    case (basesoc_sdram_steerer0)
        1'd0: begin
            self0 <= basesoc_sdram_nop_ba[2:0];
        end
        1'd1: begin
            self0 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            self0 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            self0 <= basesoc_sdram_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    self1 <= 13'd0;
    case (basesoc_sdram_steerer0)
        1'd0: begin
            self1 <= basesoc_sdram_nop_a;
        end
        1'd1: begin
            self1 <= basesoc_sdram_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            self1 <= basesoc_sdram_choose_req_cmd_payload_a;
        end
        default: begin
            self1 <= basesoc_sdram_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    self2 <= 1'd0;
    case (basesoc_sdram_steerer0)
        1'd0: begin
            self2 <= 1'd0;
        end
        1'd1: begin
            self2 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            self2 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
        end
        default: begin
            self2 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    self3 <= 1'd0;
    case (basesoc_sdram_steerer0)
        1'd0: begin
            self3 <= 1'd0;
        end
        1'd1: begin
            self3 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            self3 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
        end
        default: begin
            self3 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    self4 <= 1'd0;
    case (basesoc_sdram_steerer0)
        1'd0: begin
            self4 <= 1'd0;
        end
        1'd1: begin
            self4 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            self4 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
        end
        default: begin
            self4 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    self5 <= 1'd0;
    case (basesoc_sdram_steerer0)
        1'd0: begin
            self5 <= 1'd0;
        end
        1'd1: begin
            self5 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            self5 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
        end
        default: begin
            self5 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    self6 <= 1'd0;
    case (basesoc_sdram_steerer0)
        1'd0: begin
            self6 <= 1'd0;
        end
        1'd1: begin
            self6 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            self6 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
        end
        default: begin
            self6 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    self7 <= 3'd0;
    case (basesoc_sdram_steerer1)
        1'd0: begin
            self7 <= basesoc_sdram_nop_ba[2:0];
        end
        1'd1: begin
            self7 <= basesoc_sdram_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            self7 <= basesoc_sdram_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            self7 <= basesoc_sdram_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    self8 <= 13'd0;
    case (basesoc_sdram_steerer1)
        1'd0: begin
            self8 <= basesoc_sdram_nop_a;
        end
        1'd1: begin
            self8 <= basesoc_sdram_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            self8 <= basesoc_sdram_choose_req_cmd_payload_a;
        end
        default: begin
            self8 <= basesoc_sdram_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    self9 <= 1'd0;
    case (basesoc_sdram_steerer1)
        1'd0: begin
            self9 <= 1'd0;
        end
        1'd1: begin
            self9 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            self9 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_cas);
        end
        default: begin
            self9 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    self10 <= 1'd0;
    case (basesoc_sdram_steerer1)
        1'd0: begin
            self10 <= 1'd0;
        end
        1'd1: begin
            self10 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            self10 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_ras);
        end
        default: begin
            self10 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    self11 <= 1'd0;
    case (basesoc_sdram_steerer1)
        1'd0: begin
            self11 <= 1'd0;
        end
        1'd1: begin
            self11 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            self11 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_we);
        end
        default: begin
            self11 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    self12 <= 1'd0;
    case (basesoc_sdram_steerer1)
        1'd0: begin
            self12 <= 1'd0;
        end
        1'd1: begin
            self12 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            self12 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_read);
        end
        default: begin
            self12 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    self13 <= 1'd0;
    case (basesoc_sdram_steerer1)
        1'd0: begin
            self13 <= 1'd0;
        end
        1'd1: begin
            self13 <= ((basesoc_sdram_choose_cmd_cmd_valid & basesoc_sdram_choose_cmd_cmd_ready) & basesoc_sdram_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            self13 <= ((basesoc_sdram_choose_req_cmd_valid & basesoc_sdram_choose_req_cmd_ready) & basesoc_sdram_choose_req_cmd_payload_is_write);
        end
        default: begin
            self13 <= ((basesoc_sdram_cmd_valid & basesoc_sdram_cmd_ready) & basesoc_sdram_cmd_payload_is_write);
        end
    endcase
end
assign basesoc_rx_rx = multiregimpl01;
assign gw2ddrphy_lock1 = multiregimpl11;
assign buttons_status = multiregimpl21;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge init_clk) begin
    gw2ddrphy_lock_d <= gw2ddrphy_lock1;
    if ((gw2ddrphy_trigger == 4'd8)) begin
        gw2ddrphy_freeze <= 1'd1;
    end
    if ((gw2ddrphy_trigger == 5'd16)) begin
        gw2ddrphy_stop1 <= 1'd1;
    end
    if ((gw2ddrphy_trigger == 5'd24)) begin
        gw2ddrphy_reset1 <= 1'd1;
    end
    if ((gw2ddrphy_trigger == 6'd32)) begin
        gw2ddrphy_reset1 <= 1'd0;
    end
    if ((gw2ddrphy_trigger == 6'd40)) begin
        gw2ddrphy_stop1 <= 1'd0;
    end
    if ((gw2ddrphy_trigger == 6'd48)) begin
        gw2ddrphy_freeze <= 1'd0;
    end
    if ((gw2ddrphy_trigger == 6'd56)) begin
        gw2ddrphy_pause1 <= 1'd1;
    end
    if ((gw2ddrphy_trigger == 7'd64)) begin
        gw2ddrphy_update <= 1'd1;
    end
    if ((gw2ddrphy_trigger == 7'd72)) begin
        gw2ddrphy_update <= 1'd0;
    end
    if ((gw2ddrphy_trigger == 7'd80)) begin
        gw2ddrphy_pause1 <= 1'd0;
    end
    if ((gw2ddrphy_trigger == 7'd80)) begin
        gw2ddrphy_trigger <= 1'd0;
    end else begin
        if ((gw2ddrphy_trigger != 1'd0)) begin
            gw2ddrphy_trigger <= (gw2ddrphy_trigger + 1'd1);
        end else begin
            if (gw2ddrphy_new_lock) begin
                gw2ddrphy_trigger <= 1'd1;
            end
        end
    end
    if (init_rst) begin
        gw2ddrphy_update <= 1'd0;
        gw2ddrphy_stop1 <= 1'd0;
        gw2ddrphy_freeze <= 1'd0;
        gw2ddrphy_pause1 <= 1'd0;
        gw2ddrphy_reset1 <= 1'd0;
        gw2ddrphy_lock_d <= 1'd0;
        gw2ddrphy_trigger <= 7'd0;
    end
    multiregimpl10 <= gw2ddrphy_lock0;
    multiregimpl11 <= multiregimpl10;
end

always @(posedge por_clk) begin
    if ((~crg_por_done)) begin
        crg_por_count <= (crg_por_count - 1'd1);
    end
    if (por_rst) begin
        crg_por_count <= 16'd65535;
    end
end

always @(posedge sys_clk) begin
    case (grant)
        1'd0: begin
            if ((~request[0])) begin
                if (request[1]) begin
                    grant <= 1'd1;
                end
            end
        end
        1'd1: begin
            if ((~request[1])) begin
                if (request[0]) begin
                    grant <= 1'd0;
                end
            end
        end
    endcase
    slave_sel_r <= slave_sel;
    if (wait_1) begin
        if ((~done)) begin
            count <= (count - 1'd1);
        end
    end else begin
        count <= 20'd1000000;
    end
    if ((basesoc_bus_errors != 32'd4294967295)) begin
        if (basesoc_bus_error) begin
            basesoc_bus_errors <= (basesoc_bus_errors + 1'd1);
        end
    end
    basesoc_basesoc_ram_bus_ack <= 1'd0;
    if (((basesoc_basesoc_ram_bus_cyc & basesoc_basesoc_ram_bus_stb) & ((~basesoc_basesoc_ram_bus_ack) | basesoc_basesoc_adr_burst))) begin
        basesoc_basesoc_ram_bus_ack <= 1'd1;
    end
    basesoc_ram_bus_ram_bus_ack <= 1'd0;
    if (((basesoc_ram_bus_ram_bus_cyc & basesoc_ram_bus_ram_bus_stb) & ((~basesoc_ram_bus_ram_bus_ack) | basesoc_ram_adr_burst))) begin
        basesoc_ram_bus_ram_bus_ack <= 1'd1;
    end
    {basesoc_tx_tick, basesoc_tx_phase} <= 24'd10307921;
    if (basesoc_tx_enable) begin
        {basesoc_tx_tick, basesoc_tx_phase} <= (basesoc_tx_phase + 24'd10307921);
    end
    rs232phytx_state <= rs232phytx_next_state;
    if (basesoc_tx_count_rs232phytx_next_value_ce0) begin
        basesoc_tx_count <= basesoc_tx_count_rs232phytx_next_value0;
    end
    if (basesoc_serial_tx_rs232phytx_next_value_ce1) begin
        serial_tx <= basesoc_serial_tx_rs232phytx_next_value1;
    end
    if (basesoc_tx_data_rs232phytx_next_value_ce2) begin
        basesoc_tx_data <= basesoc_tx_data_rs232phytx_next_value2;
    end
    basesoc_rx_rx_d <= basesoc_rx_rx;
    {basesoc_rx_tick, basesoc_rx_phase} <= 32'd2147483648;
    if (basesoc_rx_enable) begin
        {basesoc_rx_tick, basesoc_rx_phase} <= (basesoc_rx_phase + 24'd10307921);
    end
    rs232phyrx_state <= rs232phyrx_next_state;
    if (basesoc_rx_count_rs232phyrx_next_value_ce0) begin
        basesoc_rx_count <= basesoc_rx_count_rs232phyrx_next_value0;
    end
    if (basesoc_rx_data_rs232phyrx_next_value_ce1) begin
        basesoc_rx_data <= basesoc_rx_data_rs232phyrx_next_value1;
    end
    if (basesoc_uart_tx_clear) begin
        basesoc_uart_tx_pending <= 1'd0;
    end
    basesoc_uart_tx_trigger_d <= basesoc_uart_tx_trigger;
    if ((basesoc_uart_tx_trigger & (~basesoc_uart_tx_trigger_d))) begin
        basesoc_uart_tx_pending <= 1'd1;
    end
    if (basesoc_uart_rx_clear) begin
        basesoc_uart_rx_pending <= 1'd0;
    end
    basesoc_uart_rx_trigger_d <= basesoc_uart_rx_trigger;
    if ((basesoc_uart_rx_trigger & (~basesoc_uart_rx_trigger_d))) begin
        basesoc_uart_rx_pending <= 1'd1;
    end
    if (basesoc_uart_tx_fifo_syncfifo_re) begin
        basesoc_uart_tx_fifo_readable <= 1'd1;
    end else begin
        if (basesoc_uart_tx_fifo_re) begin
            basesoc_uart_tx_fifo_readable <= 1'd0;
        end
    end
    if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
        basesoc_uart_tx_fifo_produce <= (basesoc_uart_tx_fifo_produce + 1'd1);
    end
    if (basesoc_uart_tx_fifo_do_read) begin
        basesoc_uart_tx_fifo_consume <= (basesoc_uart_tx_fifo_consume + 1'd1);
    end
    if (((basesoc_uart_tx_fifo_syncfifo_we & basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_uart_tx_fifo_replace))) begin
        if ((~basesoc_uart_tx_fifo_do_read)) begin
            basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 + 1'd1);
        end
    end else begin
        if (basesoc_uart_tx_fifo_do_read) begin
            basesoc_uart_tx_fifo_level0 <= (basesoc_uart_tx_fifo_level0 - 1'd1);
        end
    end
    if (basesoc_uart_rx_fifo_syncfifo_re) begin
        basesoc_uart_rx_fifo_readable <= 1'd1;
    end else begin
        if (basesoc_uart_rx_fifo_re) begin
            basesoc_uart_rx_fifo_readable <= 1'd0;
        end
    end
    if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
        basesoc_uart_rx_fifo_produce <= (basesoc_uart_rx_fifo_produce + 1'd1);
    end
    if (basesoc_uart_rx_fifo_do_read) begin
        basesoc_uart_rx_fifo_consume <= (basesoc_uart_rx_fifo_consume + 1'd1);
    end
    if (((basesoc_uart_rx_fifo_syncfifo_we & basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_uart_rx_fifo_replace))) begin
        if ((~basesoc_uart_rx_fifo_do_read)) begin
            basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 + 1'd1);
        end
    end else begin
        if (basesoc_uart_rx_fifo_do_read) begin
            basesoc_uart_rx_fifo_level0 <= (basesoc_uart_rx_fifo_level0 - 1'd1);
        end
    end
    if (basesoc_timer_en_storage) begin
        if ((basesoc_timer_value == 1'd0)) begin
            basesoc_timer_value <= basesoc_timer_reload_storage;
        end else begin
            basesoc_timer_value <= (basesoc_timer_value - 1'd1);
        end
    end else begin
        basesoc_timer_value <= basesoc_timer_load_storage;
    end
    if (basesoc_timer_update_value_re) begin
        basesoc_timer_value_status <= basesoc_timer_value;
    end
    if (basesoc_timer_zero_clear) begin
        basesoc_timer_zero_pending <= 1'd0;
    end
    basesoc_timer_zero_trigger_d <= basesoc_timer_zero_trigger;
    if ((basesoc_timer_zero_trigger & (~basesoc_timer_zero_trigger_d))) begin
        basesoc_timer_zero_pending <= 1'd1;
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_rst_re)) begin
        gw2ddrphy_rdly0 <= 1'd0;
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_inc_re)) begin
        gw2ddrphy_rdly0 <= (gw2ddrphy_rdly0 + 1'd1);
    end
    gw2ddrphy_burstdet_d0 <= gw2ddrphy_burstdet0;
    if (gw2ddrphy_burstdet_clr_re) begin
        gw2ddrphy_burstdet_seen_status[0] <= 1'd0;
    end
    if ((gw2ddrphy_burstdet0 & (~gw2ddrphy_burstdet_d0))) begin
        gw2ddrphy_burstdet_seen_status[0] <= 1'd1;
    end
    gw2ddrphy_dm_o_data_d0 <= gw2ddrphy_dm_o_data0;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dm_o_data_muxed0 <= gw2ddrphy_dm_o_data0[3:0];
        end
        1'd1: begin
            gw2ddrphy_dm_o_data_muxed0 <= gw2ddrphy_dm_o_data_d0[7:4];
        end
    endcase
    gw2ddrphy_dq_o_data_d0 <= gw2ddrphy_dq_o_data0;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed0 <= gw2ddrphy_dq_o_data0[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed0 <= gw2ddrphy_dq_o_data_d0[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d0 <= gw2ddrphy_bitslip0_o;
    gw2ddrphy_dq_o_data_d1 <= gw2ddrphy_dq_o_data1;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed1 <= gw2ddrphy_dq_o_data1[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed1 <= gw2ddrphy_dq_o_data_d1[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d1 <= gw2ddrphy_bitslip1_o;
    gw2ddrphy_dq_o_data_d2 <= gw2ddrphy_dq_o_data2;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed2 <= gw2ddrphy_dq_o_data2[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed2 <= gw2ddrphy_dq_o_data_d2[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d2 <= gw2ddrphy_bitslip2_o;
    gw2ddrphy_dq_o_data_d3 <= gw2ddrphy_dq_o_data3;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed3 <= gw2ddrphy_dq_o_data3[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed3 <= gw2ddrphy_dq_o_data_d3[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d3 <= gw2ddrphy_bitslip3_o;
    gw2ddrphy_dq_o_data_d4 <= gw2ddrphy_dq_o_data4;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed4 <= gw2ddrphy_dq_o_data4[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed4 <= gw2ddrphy_dq_o_data_d4[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d4 <= gw2ddrphy_bitslip4_o;
    gw2ddrphy_dq_o_data_d5 <= gw2ddrphy_dq_o_data5;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed5 <= gw2ddrphy_dq_o_data5[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed5 <= gw2ddrphy_dq_o_data_d5[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d5 <= gw2ddrphy_bitslip5_o;
    gw2ddrphy_dq_o_data_d6 <= gw2ddrphy_dq_o_data6;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed6 <= gw2ddrphy_dq_o_data6[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed6 <= gw2ddrphy_dq_o_data_d6[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d6 <= gw2ddrphy_bitslip6_o;
    gw2ddrphy_dq_o_data_d7 <= gw2ddrphy_dq_o_data7;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed7 <= gw2ddrphy_dq_o_data7[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed7 <= gw2ddrphy_dq_o_data_d7[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d7 <= gw2ddrphy_bitslip7_o;
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_rst_re)) begin
        gw2ddrphy_rdly1 <= 1'd0;
    end
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_inc_re)) begin
        gw2ddrphy_rdly1 <= (gw2ddrphy_rdly1 + 1'd1);
    end
    gw2ddrphy_burstdet_d1 <= gw2ddrphy_burstdet1;
    if (gw2ddrphy_burstdet_clr_re) begin
        gw2ddrphy_burstdet_seen_status[1] <= 1'd0;
    end
    if ((gw2ddrphy_burstdet1 & (~gw2ddrphy_burstdet_d1))) begin
        gw2ddrphy_burstdet_seen_status[1] <= 1'd1;
    end
    gw2ddrphy_dm_o_data_d1 <= gw2ddrphy_dm_o_data1;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dm_o_data_muxed1 <= gw2ddrphy_dm_o_data1[3:0];
        end
        1'd1: begin
            gw2ddrphy_dm_o_data_muxed1 <= gw2ddrphy_dm_o_data_d1[7:4];
        end
    endcase
    gw2ddrphy_dq_o_data_d8 <= gw2ddrphy_dq_o_data8;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed8 <= gw2ddrphy_dq_o_data8[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed8 <= gw2ddrphy_dq_o_data_d8[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d8 <= gw2ddrphy_bitslip8_o;
    gw2ddrphy_dq_o_data_d9 <= gw2ddrphy_dq_o_data9;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed9 <= gw2ddrphy_dq_o_data9[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed9 <= gw2ddrphy_dq_o_data_d9[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d9 <= gw2ddrphy_bitslip9_o;
    gw2ddrphy_dq_o_data_d10 <= gw2ddrphy_dq_o_data10;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed10 <= gw2ddrphy_dq_o_data10[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed10 <= gw2ddrphy_dq_o_data_d10[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d10 <= gw2ddrphy_bitslip10_o;
    gw2ddrphy_dq_o_data_d11 <= gw2ddrphy_dq_o_data11;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed11 <= gw2ddrphy_dq_o_data11[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed11 <= gw2ddrphy_dq_o_data_d11[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d11 <= gw2ddrphy_bitslip11_o;
    gw2ddrphy_dq_o_data_d12 <= gw2ddrphy_dq_o_data12;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed12 <= gw2ddrphy_dq_o_data12[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed12 <= gw2ddrphy_dq_o_data_d12[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d12 <= gw2ddrphy_bitslip12_o;
    gw2ddrphy_dq_o_data_d13 <= gw2ddrphy_dq_o_data13;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed13 <= gw2ddrphy_dq_o_data13[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed13 <= gw2ddrphy_dq_o_data_d13[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d13 <= gw2ddrphy_bitslip13_o;
    gw2ddrphy_dq_o_data_d14 <= gw2ddrphy_dq_o_data14;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed14 <= gw2ddrphy_dq_o_data14[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed14 <= gw2ddrphy_dq_o_data_d14[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d14 <= gw2ddrphy_bitslip14_o;
    gw2ddrphy_dq_o_data_d15 <= gw2ddrphy_dq_o_data15;
    case (gw2ddrphy_bl8_chunk)
        1'd0: begin
            gw2ddrphy_dq_o_data_muxed15 <= gw2ddrphy_dq_o_data15[3:0];
        end
        1'd1: begin
            gw2ddrphy_dq_o_data_muxed15 <= gw2ddrphy_dq_o_data_d15[7:4];
        end
    endcase
    gw2ddrphy_dq_i_bitslip_o_d15 <= gw2ddrphy_bitslip15_o;
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip0_value <= (gw2ddrphy_bitslip0_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip0_value <= 1'd0;
    end
    gw2ddrphy_bitslip0_r <= {gw2ddrphy_bitslip0_i, gw2ddrphy_bitslip0_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip1_value <= (gw2ddrphy_bitslip1_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip1_value <= 1'd0;
    end
    gw2ddrphy_bitslip1_r <= {gw2ddrphy_bitslip1_i, gw2ddrphy_bitslip1_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip2_value <= (gw2ddrphy_bitslip2_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip2_value <= 1'd0;
    end
    gw2ddrphy_bitslip2_r <= {gw2ddrphy_bitslip2_i, gw2ddrphy_bitslip2_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip3_value <= (gw2ddrphy_bitslip3_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip3_value <= 1'd0;
    end
    gw2ddrphy_bitslip3_r <= {gw2ddrphy_bitslip3_i, gw2ddrphy_bitslip3_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip4_value <= (gw2ddrphy_bitslip4_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip4_value <= 1'd0;
    end
    gw2ddrphy_bitslip4_r <= {gw2ddrphy_bitslip4_i, gw2ddrphy_bitslip4_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip5_value <= (gw2ddrphy_bitslip5_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip5_value <= 1'd0;
    end
    gw2ddrphy_bitslip5_r <= {gw2ddrphy_bitslip5_i, gw2ddrphy_bitslip5_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip6_value <= (gw2ddrphy_bitslip6_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip6_value <= 1'd0;
    end
    gw2ddrphy_bitslip6_r <= {gw2ddrphy_bitslip6_i, gw2ddrphy_bitslip6_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip7_value <= (gw2ddrphy_bitslip7_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[0] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip7_value <= 1'd0;
    end
    gw2ddrphy_bitslip7_r <= {gw2ddrphy_bitslip7_i, gw2ddrphy_bitslip7_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip8_value <= (gw2ddrphy_bitslip8_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip8_value <= 1'd0;
    end
    gw2ddrphy_bitslip8_r <= {gw2ddrphy_bitslip8_i, gw2ddrphy_bitslip8_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip9_value <= (gw2ddrphy_bitslip9_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip9_value <= 1'd0;
    end
    gw2ddrphy_bitslip9_r <= {gw2ddrphy_bitslip9_i, gw2ddrphy_bitslip9_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip10_value <= (gw2ddrphy_bitslip10_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip10_value <= 1'd0;
    end
    gw2ddrphy_bitslip10_r <= {gw2ddrphy_bitslip10_i, gw2ddrphy_bitslip10_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip11_value <= (gw2ddrphy_bitslip11_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip11_value <= 1'd0;
    end
    gw2ddrphy_bitslip11_r <= {gw2ddrphy_bitslip11_i, gw2ddrphy_bitslip11_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip12_value <= (gw2ddrphy_bitslip12_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip12_value <= 1'd0;
    end
    gw2ddrphy_bitslip12_r <= {gw2ddrphy_bitslip12_i, gw2ddrphy_bitslip12_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip13_value <= (gw2ddrphy_bitslip13_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip13_value <= 1'd0;
    end
    gw2ddrphy_bitslip13_r <= {gw2ddrphy_bitslip13_i, gw2ddrphy_bitslip13_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip14_value <= (gw2ddrphy_bitslip14_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip14_value <= 1'd0;
    end
    gw2ddrphy_bitslip14_r <= {gw2ddrphy_bitslip14_i, gw2ddrphy_bitslip14_r[7:4]};
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_re)) begin
        gw2ddrphy_bitslip15_value <= (gw2ddrphy_bitslip15_value + 1'd1);
    end
    if ((gw2ddrphy_dly_sel_storage[1] & gw2ddrphy_rdly_dq_bitslip_rst_re)) begin
        gw2ddrphy_bitslip15_value <= 1'd0;
    end
    gw2ddrphy_bitslip15_r <= {gw2ddrphy_bitslip15_i, gw2ddrphy_bitslip15_r[7:4]};
    gw2ddrphy_rddata_en_tappeddelayline0 <= (gw2ddrphy_dfi_p0_rddata_en | gw2ddrphy_dfi_p1_rddata_en);
    gw2ddrphy_rddata_en_tappeddelayline1 <= gw2ddrphy_rddata_en_tappeddelayline0;
    gw2ddrphy_rddata_en_tappeddelayline2 <= gw2ddrphy_rddata_en_tappeddelayline1;
    gw2ddrphy_rddata_en_tappeddelayline3 <= gw2ddrphy_rddata_en_tappeddelayline2;
    gw2ddrphy_rddata_en_tappeddelayline4 <= gw2ddrphy_rddata_en_tappeddelayline3;
    gw2ddrphy_rddata_en_tappeddelayline5 <= gw2ddrphy_rddata_en_tappeddelayline4;
    gw2ddrphy_rddata_en_tappeddelayline6 <= gw2ddrphy_rddata_en_tappeddelayline5;
    gw2ddrphy_rddata_en_tappeddelayline7 <= gw2ddrphy_rddata_en_tappeddelayline6;
    gw2ddrphy_rddata_en_tappeddelayline8 <= gw2ddrphy_rddata_en_tappeddelayline7;
    gw2ddrphy_rddata_en_tappeddelayline9 <= gw2ddrphy_rddata_en_tappeddelayline8;
    gw2ddrphy_rddata_en_tappeddelayline10 <= gw2ddrphy_rddata_en_tappeddelayline9;
    gw2ddrphy_rddata_en_tappeddelayline11 <= gw2ddrphy_rddata_en_tappeddelayline10;
    gw2ddrphy_wrdata_en_tappeddelayline0 <= (gw2ddrphy_dfi_p0_wrdata_en | gw2ddrphy_dfi_p1_wrdata_en);
    gw2ddrphy_wrdata_en_tappeddelayline1 <= gw2ddrphy_wrdata_en_tappeddelayline0;
    gw2ddrphy_wrdata_en_tappeddelayline2 <= gw2ddrphy_wrdata_en_tappeddelayline1;
    gw2ddrphy_wrdata_en_tappeddelayline3 <= gw2ddrphy_wrdata_en_tappeddelayline2;
    gw2ddrphy_wrdata_en_tappeddelayline4 <= gw2ddrphy_wrdata_en_tappeddelayline3;
    gw2ddrphy_wrdata_en_tappeddelayline5 <= gw2ddrphy_wrdata_en_tappeddelayline4;
    if (basesoc_sdram_csr_dfi_p0_rddata_valid) begin
        basesoc_sdram_phaseinjector0_rddata_status <= basesoc_sdram_csr_dfi_p0_rddata;
    end
    if (basesoc_sdram_csr_dfi_p1_rddata_valid) begin
        basesoc_sdram_phaseinjector1_rddata_status <= basesoc_sdram_csr_dfi_p1_rddata;
    end
    if ((basesoc_sdram_timer_wait & (~basesoc_sdram_timer_done0))) begin
        basesoc_sdram_timer_count1 <= (basesoc_sdram_timer_count1 - 1'd1);
    end else begin
        basesoc_sdram_timer_count1 <= 9'd374;
    end
    basesoc_sdram_postponer_req_o <= 1'd0;
    if (basesoc_sdram_postponer_req_i) begin
        basesoc_sdram_postponer_count <= (basesoc_sdram_postponer_count - 1'd1);
        if ((basesoc_sdram_postponer_count == 1'd0)) begin
            basesoc_sdram_postponer_count <= 1'd0;
            basesoc_sdram_postponer_req_o <= 1'd1;
        end
    end
    if (basesoc_sdram_sequencer_start0) begin
        basesoc_sdram_sequencer_count <= 1'd0;
    end else begin
        if (basesoc_sdram_sequencer_done1) begin
            if ((basesoc_sdram_sequencer_count != 1'd0)) begin
                basesoc_sdram_sequencer_count <= (basesoc_sdram_sequencer_count - 1'd1);
            end
        end
    end
    basesoc_sdram_cmd_payload_a <= 1'd0;
    basesoc_sdram_cmd_payload_ba <= 1'd0;
    basesoc_sdram_cmd_payload_cas <= 1'd0;
    basesoc_sdram_cmd_payload_ras <= 1'd0;
    basesoc_sdram_cmd_payload_we <= 1'd0;
    basesoc_sdram_sequencer_done1 <= 1'd0;
    if ((basesoc_sdram_sequencer_start1 & (basesoc_sdram_sequencer_trigger == 1'd0))) begin
        basesoc_sdram_cmd_payload_a <= 11'd1024;
        basesoc_sdram_cmd_payload_ba <= 1'd0;
        basesoc_sdram_cmd_payload_cas <= 1'd0;
        basesoc_sdram_cmd_payload_ras <= 1'd1;
        basesoc_sdram_cmd_payload_we <= 1'd1;
    end
    if ((basesoc_sdram_sequencer_trigger == 2'd2)) begin
        basesoc_sdram_cmd_payload_a <= 11'd1024;
        basesoc_sdram_cmd_payload_ba <= 1'd0;
        basesoc_sdram_cmd_payload_cas <= 1'd1;
        basesoc_sdram_cmd_payload_ras <= 1'd1;
        basesoc_sdram_cmd_payload_we <= 1'd0;
    end
    if ((basesoc_sdram_sequencer_trigger == 7'd66)) begin
        basesoc_sdram_cmd_payload_a <= 1'd0;
        basesoc_sdram_cmd_payload_ba <= 1'd0;
        basesoc_sdram_cmd_payload_cas <= 1'd0;
        basesoc_sdram_cmd_payload_ras <= 1'd0;
        basesoc_sdram_cmd_payload_we <= 1'd0;
        basesoc_sdram_sequencer_done1 <= 1'd1;
    end
    if ((basesoc_sdram_sequencer_trigger == 7'd66)) begin
        basesoc_sdram_sequencer_trigger <= 1'd0;
    end else begin
        if ((basesoc_sdram_sequencer_trigger != 1'd0)) begin
            basesoc_sdram_sequencer_trigger <= (basesoc_sdram_sequencer_trigger + 1'd1);
        end else begin
            if (basesoc_sdram_sequencer_start1) begin
                basesoc_sdram_sequencer_trigger <= 1'd1;
            end
        end
    end
    if ((basesoc_sdram_zqcs_timer_wait & (~basesoc_sdram_zqcs_timer_done0))) begin
        basesoc_sdram_zqcs_timer_count1 <= (basesoc_sdram_zqcs_timer_count1 - 1'd1);
    end else begin
        basesoc_sdram_zqcs_timer_count1 <= 26'd47999999;
    end
    basesoc_sdram_zqcs_executer_done <= 1'd0;
    if ((basesoc_sdram_zqcs_executer_start & (basesoc_sdram_zqcs_executer_trigger == 1'd0))) begin
        basesoc_sdram_cmd_payload_a <= 11'd1024;
        basesoc_sdram_cmd_payload_ba <= 1'd0;
        basesoc_sdram_cmd_payload_cas <= 1'd0;
        basesoc_sdram_cmd_payload_ras <= 1'd1;
        basesoc_sdram_cmd_payload_we <= 1'd1;
    end
    if ((basesoc_sdram_zqcs_executer_trigger == 2'd2)) begin
        basesoc_sdram_cmd_payload_a <= 1'd0;
        basesoc_sdram_cmd_payload_ba <= 1'd0;
        basesoc_sdram_cmd_payload_cas <= 1'd0;
        basesoc_sdram_cmd_payload_ras <= 1'd0;
        basesoc_sdram_cmd_payload_we <= 1'd1;
    end
    if ((basesoc_sdram_zqcs_executer_trigger == 6'd34)) begin
        basesoc_sdram_cmd_payload_a <= 1'd0;
        basesoc_sdram_cmd_payload_ba <= 1'd0;
        basesoc_sdram_cmd_payload_cas <= 1'd0;
        basesoc_sdram_cmd_payload_ras <= 1'd0;
        basesoc_sdram_cmd_payload_we <= 1'd0;
        basesoc_sdram_zqcs_executer_done <= 1'd1;
    end
    if ((basesoc_sdram_zqcs_executer_trigger == 6'd34)) begin
        basesoc_sdram_zqcs_executer_trigger <= 1'd0;
    end else begin
        if ((basesoc_sdram_zqcs_executer_trigger != 1'd0)) begin
            basesoc_sdram_zqcs_executer_trigger <= (basesoc_sdram_zqcs_executer_trigger + 1'd1);
        end else begin
            if (basesoc_sdram_zqcs_executer_start) begin
                basesoc_sdram_zqcs_executer_trigger <= 1'd1;
            end
        end
    end
    refresher_state <= refresher_next_state;
    if (basesoc_sdram_bankmachine0_row_close) begin
        basesoc_sdram_bankmachine0_row_opened <= 1'd0;
    end else begin
        if (basesoc_sdram_bankmachine0_row_open) begin
            basesoc_sdram_bankmachine0_row_opened <= 1'd1;
            basesoc_sdram_bankmachine0_row <= basesoc_sdram_bankmachine0_source_source_payload_addr[19:7];
        end
    end
    if (((basesoc_sdram_bankmachine0_syncfifo0_we & basesoc_sdram_bankmachine0_syncfifo0_writable) & (~basesoc_sdram_bankmachine0_replace))) begin
        basesoc_sdram_bankmachine0_produce <= (basesoc_sdram_bankmachine0_produce + 1'd1);
    end
    if (basesoc_sdram_bankmachine0_do_read) begin
        basesoc_sdram_bankmachine0_consume <= (basesoc_sdram_bankmachine0_consume + 1'd1);
    end
    if (((basesoc_sdram_bankmachine0_syncfifo0_we & basesoc_sdram_bankmachine0_syncfifo0_writable) & (~basesoc_sdram_bankmachine0_replace))) begin
        if ((~basesoc_sdram_bankmachine0_do_read)) begin
            basesoc_sdram_bankmachine0_level <= (basesoc_sdram_bankmachine0_level + 1'd1);
        end
    end else begin
        if (basesoc_sdram_bankmachine0_do_read) begin
            basesoc_sdram_bankmachine0_level <= (basesoc_sdram_bankmachine0_level - 1'd1);
        end
    end
    if (((~basesoc_sdram_bankmachine0_pipe_valid_source_valid) | basesoc_sdram_bankmachine0_pipe_valid_source_ready)) begin
        basesoc_sdram_bankmachine0_pipe_valid_source_valid <= basesoc_sdram_bankmachine0_pipe_valid_sink_valid;
        basesoc_sdram_bankmachine0_pipe_valid_source_first <= basesoc_sdram_bankmachine0_pipe_valid_sink_first;
        basesoc_sdram_bankmachine0_pipe_valid_source_last <= basesoc_sdram_bankmachine0_pipe_valid_sink_last;
        basesoc_sdram_bankmachine0_pipe_valid_source_payload_we <= basesoc_sdram_bankmachine0_pipe_valid_sink_payload_we;
        basesoc_sdram_bankmachine0_pipe_valid_source_payload_addr <= basesoc_sdram_bankmachine0_pipe_valid_sink_payload_addr;
    end
    if (basesoc_sdram_bankmachine0_twtpcon_valid) begin
        basesoc_sdram_bankmachine0_twtpcon_count <= 3'd6;
        if (1'd0) begin
            basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine0_twtpcon_ready)) begin
            basesoc_sdram_bankmachine0_twtpcon_count <= (basesoc_sdram_bankmachine0_twtpcon_count - 1'd1);
            if ((basesoc_sdram_bankmachine0_twtpcon_count == 1'd1)) begin
                basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine0_trccon_valid) begin
        basesoc_sdram_bankmachine0_trccon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine0_trccon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine0_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine0_trccon_ready)) begin
            basesoc_sdram_bankmachine0_trccon_count <= (basesoc_sdram_bankmachine0_trccon_count - 1'd1);
            if ((basesoc_sdram_bankmachine0_trccon_count == 1'd1)) begin
                basesoc_sdram_bankmachine0_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine0_trascon_valid) begin
        basesoc_sdram_bankmachine0_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine0_trascon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine0_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine0_trascon_ready)) begin
            basesoc_sdram_bankmachine0_trascon_count <= (basesoc_sdram_bankmachine0_trascon_count - 1'd1);
            if ((basesoc_sdram_bankmachine0_trascon_count == 1'd1)) begin
                basesoc_sdram_bankmachine0_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine0_state <= bankmachine0_next_state;
    if (basesoc_sdram_bankmachine1_row_close) begin
        basesoc_sdram_bankmachine1_row_opened <= 1'd0;
    end else begin
        if (basesoc_sdram_bankmachine1_row_open) begin
            basesoc_sdram_bankmachine1_row_opened <= 1'd1;
            basesoc_sdram_bankmachine1_row <= basesoc_sdram_bankmachine1_source_source_payload_addr[19:7];
        end
    end
    if (((basesoc_sdram_bankmachine1_syncfifo1_we & basesoc_sdram_bankmachine1_syncfifo1_writable) & (~basesoc_sdram_bankmachine1_replace))) begin
        basesoc_sdram_bankmachine1_produce <= (basesoc_sdram_bankmachine1_produce + 1'd1);
    end
    if (basesoc_sdram_bankmachine1_do_read) begin
        basesoc_sdram_bankmachine1_consume <= (basesoc_sdram_bankmachine1_consume + 1'd1);
    end
    if (((basesoc_sdram_bankmachine1_syncfifo1_we & basesoc_sdram_bankmachine1_syncfifo1_writable) & (~basesoc_sdram_bankmachine1_replace))) begin
        if ((~basesoc_sdram_bankmachine1_do_read)) begin
            basesoc_sdram_bankmachine1_level <= (basesoc_sdram_bankmachine1_level + 1'd1);
        end
    end else begin
        if (basesoc_sdram_bankmachine1_do_read) begin
            basesoc_sdram_bankmachine1_level <= (basesoc_sdram_bankmachine1_level - 1'd1);
        end
    end
    if (((~basesoc_sdram_bankmachine1_pipe_valid_source_valid) | basesoc_sdram_bankmachine1_pipe_valid_source_ready)) begin
        basesoc_sdram_bankmachine1_pipe_valid_source_valid <= basesoc_sdram_bankmachine1_pipe_valid_sink_valid;
        basesoc_sdram_bankmachine1_pipe_valid_source_first <= basesoc_sdram_bankmachine1_pipe_valid_sink_first;
        basesoc_sdram_bankmachine1_pipe_valid_source_last <= basesoc_sdram_bankmachine1_pipe_valid_sink_last;
        basesoc_sdram_bankmachine1_pipe_valid_source_payload_we <= basesoc_sdram_bankmachine1_pipe_valid_sink_payload_we;
        basesoc_sdram_bankmachine1_pipe_valid_source_payload_addr <= basesoc_sdram_bankmachine1_pipe_valid_sink_payload_addr;
    end
    if (basesoc_sdram_bankmachine1_twtpcon_valid) begin
        basesoc_sdram_bankmachine1_twtpcon_count <= 3'd6;
        if (1'd0) begin
            basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine1_twtpcon_ready)) begin
            basesoc_sdram_bankmachine1_twtpcon_count <= (basesoc_sdram_bankmachine1_twtpcon_count - 1'd1);
            if ((basesoc_sdram_bankmachine1_twtpcon_count == 1'd1)) begin
                basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine1_trccon_valid) begin
        basesoc_sdram_bankmachine1_trccon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine1_trccon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine1_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine1_trccon_ready)) begin
            basesoc_sdram_bankmachine1_trccon_count <= (basesoc_sdram_bankmachine1_trccon_count - 1'd1);
            if ((basesoc_sdram_bankmachine1_trccon_count == 1'd1)) begin
                basesoc_sdram_bankmachine1_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine1_trascon_valid) begin
        basesoc_sdram_bankmachine1_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine1_trascon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine1_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine1_trascon_ready)) begin
            basesoc_sdram_bankmachine1_trascon_count <= (basesoc_sdram_bankmachine1_trascon_count - 1'd1);
            if ((basesoc_sdram_bankmachine1_trascon_count == 1'd1)) begin
                basesoc_sdram_bankmachine1_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine1_state <= bankmachine1_next_state;
    if (basesoc_sdram_bankmachine2_row_close) begin
        basesoc_sdram_bankmachine2_row_opened <= 1'd0;
    end else begin
        if (basesoc_sdram_bankmachine2_row_open) begin
            basesoc_sdram_bankmachine2_row_opened <= 1'd1;
            basesoc_sdram_bankmachine2_row <= basesoc_sdram_bankmachine2_source_source_payload_addr[19:7];
        end
    end
    if (((basesoc_sdram_bankmachine2_syncfifo2_we & basesoc_sdram_bankmachine2_syncfifo2_writable) & (~basesoc_sdram_bankmachine2_replace))) begin
        basesoc_sdram_bankmachine2_produce <= (basesoc_sdram_bankmachine2_produce + 1'd1);
    end
    if (basesoc_sdram_bankmachine2_do_read) begin
        basesoc_sdram_bankmachine2_consume <= (basesoc_sdram_bankmachine2_consume + 1'd1);
    end
    if (((basesoc_sdram_bankmachine2_syncfifo2_we & basesoc_sdram_bankmachine2_syncfifo2_writable) & (~basesoc_sdram_bankmachine2_replace))) begin
        if ((~basesoc_sdram_bankmachine2_do_read)) begin
            basesoc_sdram_bankmachine2_level <= (basesoc_sdram_bankmachine2_level + 1'd1);
        end
    end else begin
        if (basesoc_sdram_bankmachine2_do_read) begin
            basesoc_sdram_bankmachine2_level <= (basesoc_sdram_bankmachine2_level - 1'd1);
        end
    end
    if (((~basesoc_sdram_bankmachine2_pipe_valid_source_valid) | basesoc_sdram_bankmachine2_pipe_valid_source_ready)) begin
        basesoc_sdram_bankmachine2_pipe_valid_source_valid <= basesoc_sdram_bankmachine2_pipe_valid_sink_valid;
        basesoc_sdram_bankmachine2_pipe_valid_source_first <= basesoc_sdram_bankmachine2_pipe_valid_sink_first;
        basesoc_sdram_bankmachine2_pipe_valid_source_last <= basesoc_sdram_bankmachine2_pipe_valid_sink_last;
        basesoc_sdram_bankmachine2_pipe_valid_source_payload_we <= basesoc_sdram_bankmachine2_pipe_valid_sink_payload_we;
        basesoc_sdram_bankmachine2_pipe_valid_source_payload_addr <= basesoc_sdram_bankmachine2_pipe_valid_sink_payload_addr;
    end
    if (basesoc_sdram_bankmachine2_twtpcon_valid) begin
        basesoc_sdram_bankmachine2_twtpcon_count <= 3'd6;
        if (1'd0) begin
            basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine2_twtpcon_ready)) begin
            basesoc_sdram_bankmachine2_twtpcon_count <= (basesoc_sdram_bankmachine2_twtpcon_count - 1'd1);
            if ((basesoc_sdram_bankmachine2_twtpcon_count == 1'd1)) begin
                basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine2_trccon_valid) begin
        basesoc_sdram_bankmachine2_trccon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine2_trccon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine2_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine2_trccon_ready)) begin
            basesoc_sdram_bankmachine2_trccon_count <= (basesoc_sdram_bankmachine2_trccon_count - 1'd1);
            if ((basesoc_sdram_bankmachine2_trccon_count == 1'd1)) begin
                basesoc_sdram_bankmachine2_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine2_trascon_valid) begin
        basesoc_sdram_bankmachine2_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine2_trascon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine2_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine2_trascon_ready)) begin
            basesoc_sdram_bankmachine2_trascon_count <= (basesoc_sdram_bankmachine2_trascon_count - 1'd1);
            if ((basesoc_sdram_bankmachine2_trascon_count == 1'd1)) begin
                basesoc_sdram_bankmachine2_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine2_state <= bankmachine2_next_state;
    if (basesoc_sdram_bankmachine3_row_close) begin
        basesoc_sdram_bankmachine3_row_opened <= 1'd0;
    end else begin
        if (basesoc_sdram_bankmachine3_row_open) begin
            basesoc_sdram_bankmachine3_row_opened <= 1'd1;
            basesoc_sdram_bankmachine3_row <= basesoc_sdram_bankmachine3_source_source_payload_addr[19:7];
        end
    end
    if (((basesoc_sdram_bankmachine3_syncfifo3_we & basesoc_sdram_bankmachine3_syncfifo3_writable) & (~basesoc_sdram_bankmachine3_replace))) begin
        basesoc_sdram_bankmachine3_produce <= (basesoc_sdram_bankmachine3_produce + 1'd1);
    end
    if (basesoc_sdram_bankmachine3_do_read) begin
        basesoc_sdram_bankmachine3_consume <= (basesoc_sdram_bankmachine3_consume + 1'd1);
    end
    if (((basesoc_sdram_bankmachine3_syncfifo3_we & basesoc_sdram_bankmachine3_syncfifo3_writable) & (~basesoc_sdram_bankmachine3_replace))) begin
        if ((~basesoc_sdram_bankmachine3_do_read)) begin
            basesoc_sdram_bankmachine3_level <= (basesoc_sdram_bankmachine3_level + 1'd1);
        end
    end else begin
        if (basesoc_sdram_bankmachine3_do_read) begin
            basesoc_sdram_bankmachine3_level <= (basesoc_sdram_bankmachine3_level - 1'd1);
        end
    end
    if (((~basesoc_sdram_bankmachine3_pipe_valid_source_valid) | basesoc_sdram_bankmachine3_pipe_valid_source_ready)) begin
        basesoc_sdram_bankmachine3_pipe_valid_source_valid <= basesoc_sdram_bankmachine3_pipe_valid_sink_valid;
        basesoc_sdram_bankmachine3_pipe_valid_source_first <= basesoc_sdram_bankmachine3_pipe_valid_sink_first;
        basesoc_sdram_bankmachine3_pipe_valid_source_last <= basesoc_sdram_bankmachine3_pipe_valid_sink_last;
        basesoc_sdram_bankmachine3_pipe_valid_source_payload_we <= basesoc_sdram_bankmachine3_pipe_valid_sink_payload_we;
        basesoc_sdram_bankmachine3_pipe_valid_source_payload_addr <= basesoc_sdram_bankmachine3_pipe_valid_sink_payload_addr;
    end
    if (basesoc_sdram_bankmachine3_twtpcon_valid) begin
        basesoc_sdram_bankmachine3_twtpcon_count <= 3'd6;
        if (1'd0) begin
            basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine3_twtpcon_ready)) begin
            basesoc_sdram_bankmachine3_twtpcon_count <= (basesoc_sdram_bankmachine3_twtpcon_count - 1'd1);
            if ((basesoc_sdram_bankmachine3_twtpcon_count == 1'd1)) begin
                basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine3_trccon_valid) begin
        basesoc_sdram_bankmachine3_trccon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine3_trccon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine3_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine3_trccon_ready)) begin
            basesoc_sdram_bankmachine3_trccon_count <= (basesoc_sdram_bankmachine3_trccon_count - 1'd1);
            if ((basesoc_sdram_bankmachine3_trccon_count == 1'd1)) begin
                basesoc_sdram_bankmachine3_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine3_trascon_valid) begin
        basesoc_sdram_bankmachine3_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine3_trascon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine3_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine3_trascon_ready)) begin
            basesoc_sdram_bankmachine3_trascon_count <= (basesoc_sdram_bankmachine3_trascon_count - 1'd1);
            if ((basesoc_sdram_bankmachine3_trascon_count == 1'd1)) begin
                basesoc_sdram_bankmachine3_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine3_state <= bankmachine3_next_state;
    if (basesoc_sdram_bankmachine4_row_close) begin
        basesoc_sdram_bankmachine4_row_opened <= 1'd0;
    end else begin
        if (basesoc_sdram_bankmachine4_row_open) begin
            basesoc_sdram_bankmachine4_row_opened <= 1'd1;
            basesoc_sdram_bankmachine4_row <= basesoc_sdram_bankmachine4_source_source_payload_addr[19:7];
        end
    end
    if (((basesoc_sdram_bankmachine4_syncfifo4_we & basesoc_sdram_bankmachine4_syncfifo4_writable) & (~basesoc_sdram_bankmachine4_replace))) begin
        basesoc_sdram_bankmachine4_produce <= (basesoc_sdram_bankmachine4_produce + 1'd1);
    end
    if (basesoc_sdram_bankmachine4_do_read) begin
        basesoc_sdram_bankmachine4_consume <= (basesoc_sdram_bankmachine4_consume + 1'd1);
    end
    if (((basesoc_sdram_bankmachine4_syncfifo4_we & basesoc_sdram_bankmachine4_syncfifo4_writable) & (~basesoc_sdram_bankmachine4_replace))) begin
        if ((~basesoc_sdram_bankmachine4_do_read)) begin
            basesoc_sdram_bankmachine4_level <= (basesoc_sdram_bankmachine4_level + 1'd1);
        end
    end else begin
        if (basesoc_sdram_bankmachine4_do_read) begin
            basesoc_sdram_bankmachine4_level <= (basesoc_sdram_bankmachine4_level - 1'd1);
        end
    end
    if (((~basesoc_sdram_bankmachine4_pipe_valid_source_valid) | basesoc_sdram_bankmachine4_pipe_valid_source_ready)) begin
        basesoc_sdram_bankmachine4_pipe_valid_source_valid <= basesoc_sdram_bankmachine4_pipe_valid_sink_valid;
        basesoc_sdram_bankmachine4_pipe_valid_source_first <= basesoc_sdram_bankmachine4_pipe_valid_sink_first;
        basesoc_sdram_bankmachine4_pipe_valid_source_last <= basesoc_sdram_bankmachine4_pipe_valid_sink_last;
        basesoc_sdram_bankmachine4_pipe_valid_source_payload_we <= basesoc_sdram_bankmachine4_pipe_valid_sink_payload_we;
        basesoc_sdram_bankmachine4_pipe_valid_source_payload_addr <= basesoc_sdram_bankmachine4_pipe_valid_sink_payload_addr;
    end
    if (basesoc_sdram_bankmachine4_twtpcon_valid) begin
        basesoc_sdram_bankmachine4_twtpcon_count <= 3'd6;
        if (1'd0) begin
            basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine4_twtpcon_ready)) begin
            basesoc_sdram_bankmachine4_twtpcon_count <= (basesoc_sdram_bankmachine4_twtpcon_count - 1'd1);
            if ((basesoc_sdram_bankmachine4_twtpcon_count == 1'd1)) begin
                basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine4_trccon_valid) begin
        basesoc_sdram_bankmachine4_trccon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine4_trccon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine4_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine4_trccon_ready)) begin
            basesoc_sdram_bankmachine4_trccon_count <= (basesoc_sdram_bankmachine4_trccon_count - 1'd1);
            if ((basesoc_sdram_bankmachine4_trccon_count == 1'd1)) begin
                basesoc_sdram_bankmachine4_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine4_trascon_valid) begin
        basesoc_sdram_bankmachine4_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine4_trascon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine4_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine4_trascon_ready)) begin
            basesoc_sdram_bankmachine4_trascon_count <= (basesoc_sdram_bankmachine4_trascon_count - 1'd1);
            if ((basesoc_sdram_bankmachine4_trascon_count == 1'd1)) begin
                basesoc_sdram_bankmachine4_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine4_state <= bankmachine4_next_state;
    if (basesoc_sdram_bankmachine5_row_close) begin
        basesoc_sdram_bankmachine5_row_opened <= 1'd0;
    end else begin
        if (basesoc_sdram_bankmachine5_row_open) begin
            basesoc_sdram_bankmachine5_row_opened <= 1'd1;
            basesoc_sdram_bankmachine5_row <= basesoc_sdram_bankmachine5_source_source_payload_addr[19:7];
        end
    end
    if (((basesoc_sdram_bankmachine5_syncfifo5_we & basesoc_sdram_bankmachine5_syncfifo5_writable) & (~basesoc_sdram_bankmachine5_replace))) begin
        basesoc_sdram_bankmachine5_produce <= (basesoc_sdram_bankmachine5_produce + 1'd1);
    end
    if (basesoc_sdram_bankmachine5_do_read) begin
        basesoc_sdram_bankmachine5_consume <= (basesoc_sdram_bankmachine5_consume + 1'd1);
    end
    if (((basesoc_sdram_bankmachine5_syncfifo5_we & basesoc_sdram_bankmachine5_syncfifo5_writable) & (~basesoc_sdram_bankmachine5_replace))) begin
        if ((~basesoc_sdram_bankmachine5_do_read)) begin
            basesoc_sdram_bankmachine5_level <= (basesoc_sdram_bankmachine5_level + 1'd1);
        end
    end else begin
        if (basesoc_sdram_bankmachine5_do_read) begin
            basesoc_sdram_bankmachine5_level <= (basesoc_sdram_bankmachine5_level - 1'd1);
        end
    end
    if (((~basesoc_sdram_bankmachine5_pipe_valid_source_valid) | basesoc_sdram_bankmachine5_pipe_valid_source_ready)) begin
        basesoc_sdram_bankmachine5_pipe_valid_source_valid <= basesoc_sdram_bankmachine5_pipe_valid_sink_valid;
        basesoc_sdram_bankmachine5_pipe_valid_source_first <= basesoc_sdram_bankmachine5_pipe_valid_sink_first;
        basesoc_sdram_bankmachine5_pipe_valid_source_last <= basesoc_sdram_bankmachine5_pipe_valid_sink_last;
        basesoc_sdram_bankmachine5_pipe_valid_source_payload_we <= basesoc_sdram_bankmachine5_pipe_valid_sink_payload_we;
        basesoc_sdram_bankmachine5_pipe_valid_source_payload_addr <= basesoc_sdram_bankmachine5_pipe_valid_sink_payload_addr;
    end
    if (basesoc_sdram_bankmachine5_twtpcon_valid) begin
        basesoc_sdram_bankmachine5_twtpcon_count <= 3'd6;
        if (1'd0) begin
            basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine5_twtpcon_ready)) begin
            basesoc_sdram_bankmachine5_twtpcon_count <= (basesoc_sdram_bankmachine5_twtpcon_count - 1'd1);
            if ((basesoc_sdram_bankmachine5_twtpcon_count == 1'd1)) begin
                basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine5_trccon_valid) begin
        basesoc_sdram_bankmachine5_trccon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine5_trccon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine5_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine5_trccon_ready)) begin
            basesoc_sdram_bankmachine5_trccon_count <= (basesoc_sdram_bankmachine5_trccon_count - 1'd1);
            if ((basesoc_sdram_bankmachine5_trccon_count == 1'd1)) begin
                basesoc_sdram_bankmachine5_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine5_trascon_valid) begin
        basesoc_sdram_bankmachine5_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine5_trascon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine5_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine5_trascon_ready)) begin
            basesoc_sdram_bankmachine5_trascon_count <= (basesoc_sdram_bankmachine5_trascon_count - 1'd1);
            if ((basesoc_sdram_bankmachine5_trascon_count == 1'd1)) begin
                basesoc_sdram_bankmachine5_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine5_state <= bankmachine5_next_state;
    if (basesoc_sdram_bankmachine6_row_close) begin
        basesoc_sdram_bankmachine6_row_opened <= 1'd0;
    end else begin
        if (basesoc_sdram_bankmachine6_row_open) begin
            basesoc_sdram_bankmachine6_row_opened <= 1'd1;
            basesoc_sdram_bankmachine6_row <= basesoc_sdram_bankmachine6_source_source_payload_addr[19:7];
        end
    end
    if (((basesoc_sdram_bankmachine6_syncfifo6_we & basesoc_sdram_bankmachine6_syncfifo6_writable) & (~basesoc_sdram_bankmachine6_replace))) begin
        basesoc_sdram_bankmachine6_produce <= (basesoc_sdram_bankmachine6_produce + 1'd1);
    end
    if (basesoc_sdram_bankmachine6_do_read) begin
        basesoc_sdram_bankmachine6_consume <= (basesoc_sdram_bankmachine6_consume + 1'd1);
    end
    if (((basesoc_sdram_bankmachine6_syncfifo6_we & basesoc_sdram_bankmachine6_syncfifo6_writable) & (~basesoc_sdram_bankmachine6_replace))) begin
        if ((~basesoc_sdram_bankmachine6_do_read)) begin
            basesoc_sdram_bankmachine6_level <= (basesoc_sdram_bankmachine6_level + 1'd1);
        end
    end else begin
        if (basesoc_sdram_bankmachine6_do_read) begin
            basesoc_sdram_bankmachine6_level <= (basesoc_sdram_bankmachine6_level - 1'd1);
        end
    end
    if (((~basesoc_sdram_bankmachine6_pipe_valid_source_valid) | basesoc_sdram_bankmachine6_pipe_valid_source_ready)) begin
        basesoc_sdram_bankmachine6_pipe_valid_source_valid <= basesoc_sdram_bankmachine6_pipe_valid_sink_valid;
        basesoc_sdram_bankmachine6_pipe_valid_source_first <= basesoc_sdram_bankmachine6_pipe_valid_sink_first;
        basesoc_sdram_bankmachine6_pipe_valid_source_last <= basesoc_sdram_bankmachine6_pipe_valid_sink_last;
        basesoc_sdram_bankmachine6_pipe_valid_source_payload_we <= basesoc_sdram_bankmachine6_pipe_valid_sink_payload_we;
        basesoc_sdram_bankmachine6_pipe_valid_source_payload_addr <= basesoc_sdram_bankmachine6_pipe_valid_sink_payload_addr;
    end
    if (basesoc_sdram_bankmachine6_twtpcon_valid) begin
        basesoc_sdram_bankmachine6_twtpcon_count <= 3'd6;
        if (1'd0) begin
            basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine6_twtpcon_ready)) begin
            basesoc_sdram_bankmachine6_twtpcon_count <= (basesoc_sdram_bankmachine6_twtpcon_count - 1'd1);
            if ((basesoc_sdram_bankmachine6_twtpcon_count == 1'd1)) begin
                basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine6_trccon_valid) begin
        basesoc_sdram_bankmachine6_trccon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine6_trccon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine6_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine6_trccon_ready)) begin
            basesoc_sdram_bankmachine6_trccon_count <= (basesoc_sdram_bankmachine6_trccon_count - 1'd1);
            if ((basesoc_sdram_bankmachine6_trccon_count == 1'd1)) begin
                basesoc_sdram_bankmachine6_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine6_trascon_valid) begin
        basesoc_sdram_bankmachine6_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine6_trascon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine6_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine6_trascon_ready)) begin
            basesoc_sdram_bankmachine6_trascon_count <= (basesoc_sdram_bankmachine6_trascon_count - 1'd1);
            if ((basesoc_sdram_bankmachine6_trascon_count == 1'd1)) begin
                basesoc_sdram_bankmachine6_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine6_state <= bankmachine6_next_state;
    if (basesoc_sdram_bankmachine7_row_close) begin
        basesoc_sdram_bankmachine7_row_opened <= 1'd0;
    end else begin
        if (basesoc_sdram_bankmachine7_row_open) begin
            basesoc_sdram_bankmachine7_row_opened <= 1'd1;
            basesoc_sdram_bankmachine7_row <= basesoc_sdram_bankmachine7_source_source_payload_addr[19:7];
        end
    end
    if (((basesoc_sdram_bankmachine7_syncfifo7_we & basesoc_sdram_bankmachine7_syncfifo7_writable) & (~basesoc_sdram_bankmachine7_replace))) begin
        basesoc_sdram_bankmachine7_produce <= (basesoc_sdram_bankmachine7_produce + 1'd1);
    end
    if (basesoc_sdram_bankmachine7_do_read) begin
        basesoc_sdram_bankmachine7_consume <= (basesoc_sdram_bankmachine7_consume + 1'd1);
    end
    if (((basesoc_sdram_bankmachine7_syncfifo7_we & basesoc_sdram_bankmachine7_syncfifo7_writable) & (~basesoc_sdram_bankmachine7_replace))) begin
        if ((~basesoc_sdram_bankmachine7_do_read)) begin
            basesoc_sdram_bankmachine7_level <= (basesoc_sdram_bankmachine7_level + 1'd1);
        end
    end else begin
        if (basesoc_sdram_bankmachine7_do_read) begin
            basesoc_sdram_bankmachine7_level <= (basesoc_sdram_bankmachine7_level - 1'd1);
        end
    end
    if (((~basesoc_sdram_bankmachine7_pipe_valid_source_valid) | basesoc_sdram_bankmachine7_pipe_valid_source_ready)) begin
        basesoc_sdram_bankmachine7_pipe_valid_source_valid <= basesoc_sdram_bankmachine7_pipe_valid_sink_valid;
        basesoc_sdram_bankmachine7_pipe_valid_source_first <= basesoc_sdram_bankmachine7_pipe_valid_sink_first;
        basesoc_sdram_bankmachine7_pipe_valid_source_last <= basesoc_sdram_bankmachine7_pipe_valid_sink_last;
        basesoc_sdram_bankmachine7_pipe_valid_source_payload_we <= basesoc_sdram_bankmachine7_pipe_valid_sink_payload_we;
        basesoc_sdram_bankmachine7_pipe_valid_source_payload_addr <= basesoc_sdram_bankmachine7_pipe_valid_sink_payload_addr;
    end
    if (basesoc_sdram_bankmachine7_twtpcon_valid) begin
        basesoc_sdram_bankmachine7_twtpcon_count <= 3'd6;
        if (1'd0) begin
            basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine7_twtpcon_ready)) begin
            basesoc_sdram_bankmachine7_twtpcon_count <= (basesoc_sdram_bankmachine7_twtpcon_count - 1'd1);
            if ((basesoc_sdram_bankmachine7_twtpcon_count == 1'd1)) begin
                basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine7_trccon_valid) begin
        basesoc_sdram_bankmachine7_trccon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine7_trccon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine7_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine7_trccon_ready)) begin
            basesoc_sdram_bankmachine7_trccon_count <= (basesoc_sdram_bankmachine7_trccon_count - 1'd1);
            if ((basesoc_sdram_bankmachine7_trccon_count == 1'd1)) begin
                basesoc_sdram_bankmachine7_trccon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_bankmachine7_trascon_valid) begin
        basesoc_sdram_bankmachine7_trascon_count <= 2'd2;
        if (1'd0) begin
            basesoc_sdram_bankmachine7_trascon_ready <= 1'd1;
        end else begin
            basesoc_sdram_bankmachine7_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_bankmachine7_trascon_ready)) begin
            basesoc_sdram_bankmachine7_trascon_count <= (basesoc_sdram_bankmachine7_trascon_count - 1'd1);
            if ((basesoc_sdram_bankmachine7_trascon_count == 1'd1)) begin
                basesoc_sdram_bankmachine7_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine7_state <= bankmachine7_next_state;
    if ((~basesoc_sdram_en0)) begin
        basesoc_sdram_time0 <= 5'd31;
    end else begin
        if ((~basesoc_sdram_max_time0)) begin
            basesoc_sdram_time0 <= (basesoc_sdram_time0 - 1'd1);
        end
    end
    if ((~basesoc_sdram_en1)) begin
        basesoc_sdram_time1 <= 4'd15;
    end else begin
        if ((~basesoc_sdram_max_time1)) begin
            basesoc_sdram_time1 <= (basesoc_sdram_time1 - 1'd1);
        end
    end
    if (basesoc_sdram_choose_cmd_ce) begin
        case (basesoc_sdram_choose_cmd_grant)
            1'd0: begin
                if (basesoc_sdram_choose_cmd_request[1]) begin
                    basesoc_sdram_choose_cmd_grant <= 1'd1;
                end else begin
                    if (basesoc_sdram_choose_cmd_request[2]) begin
                        basesoc_sdram_choose_cmd_grant <= 2'd2;
                    end else begin
                        if (basesoc_sdram_choose_cmd_request[3]) begin
                            basesoc_sdram_choose_cmd_grant <= 2'd3;
                        end else begin
                            if (basesoc_sdram_choose_cmd_request[4]) begin
                                basesoc_sdram_choose_cmd_grant <= 3'd4;
                            end else begin
                                if (basesoc_sdram_choose_cmd_request[5]) begin
                                    basesoc_sdram_choose_cmd_grant <= 3'd5;
                                end else begin
                                    if (basesoc_sdram_choose_cmd_request[6]) begin
                                        basesoc_sdram_choose_cmd_grant <= 3'd6;
                                    end else begin
                                        if (basesoc_sdram_choose_cmd_request[7]) begin
                                            basesoc_sdram_choose_cmd_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (basesoc_sdram_choose_cmd_request[2]) begin
                    basesoc_sdram_choose_cmd_grant <= 2'd2;
                end else begin
                    if (basesoc_sdram_choose_cmd_request[3]) begin
                        basesoc_sdram_choose_cmd_grant <= 2'd3;
                    end else begin
                        if (basesoc_sdram_choose_cmd_request[4]) begin
                            basesoc_sdram_choose_cmd_grant <= 3'd4;
                        end else begin
                            if (basesoc_sdram_choose_cmd_request[5]) begin
                                basesoc_sdram_choose_cmd_grant <= 3'd5;
                            end else begin
                                if (basesoc_sdram_choose_cmd_request[6]) begin
                                    basesoc_sdram_choose_cmd_grant <= 3'd6;
                                end else begin
                                    if (basesoc_sdram_choose_cmd_request[7]) begin
                                        basesoc_sdram_choose_cmd_grant <= 3'd7;
                                    end else begin
                                        if (basesoc_sdram_choose_cmd_request[0]) begin
                                            basesoc_sdram_choose_cmd_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (basesoc_sdram_choose_cmd_request[3]) begin
                    basesoc_sdram_choose_cmd_grant <= 2'd3;
                end else begin
                    if (basesoc_sdram_choose_cmd_request[4]) begin
                        basesoc_sdram_choose_cmd_grant <= 3'd4;
                    end else begin
                        if (basesoc_sdram_choose_cmd_request[5]) begin
                            basesoc_sdram_choose_cmd_grant <= 3'd5;
                        end else begin
                            if (basesoc_sdram_choose_cmd_request[6]) begin
                                basesoc_sdram_choose_cmd_grant <= 3'd6;
                            end else begin
                                if (basesoc_sdram_choose_cmd_request[7]) begin
                                    basesoc_sdram_choose_cmd_grant <= 3'd7;
                                end else begin
                                    if (basesoc_sdram_choose_cmd_request[0]) begin
                                        basesoc_sdram_choose_cmd_grant <= 1'd0;
                                    end else begin
                                        if (basesoc_sdram_choose_cmd_request[1]) begin
                                            basesoc_sdram_choose_cmd_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (basesoc_sdram_choose_cmd_request[4]) begin
                    basesoc_sdram_choose_cmd_grant <= 3'd4;
                end else begin
                    if (basesoc_sdram_choose_cmd_request[5]) begin
                        basesoc_sdram_choose_cmd_grant <= 3'd5;
                    end else begin
                        if (basesoc_sdram_choose_cmd_request[6]) begin
                            basesoc_sdram_choose_cmd_grant <= 3'd6;
                        end else begin
                            if (basesoc_sdram_choose_cmd_request[7]) begin
                                basesoc_sdram_choose_cmd_grant <= 3'd7;
                            end else begin
                                if (basesoc_sdram_choose_cmd_request[0]) begin
                                    basesoc_sdram_choose_cmd_grant <= 1'd0;
                                end else begin
                                    if (basesoc_sdram_choose_cmd_request[1]) begin
                                        basesoc_sdram_choose_cmd_grant <= 1'd1;
                                    end else begin
                                        if (basesoc_sdram_choose_cmd_request[2]) begin
                                            basesoc_sdram_choose_cmd_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (basesoc_sdram_choose_cmd_request[5]) begin
                    basesoc_sdram_choose_cmd_grant <= 3'd5;
                end else begin
                    if (basesoc_sdram_choose_cmd_request[6]) begin
                        basesoc_sdram_choose_cmd_grant <= 3'd6;
                    end else begin
                        if (basesoc_sdram_choose_cmd_request[7]) begin
                            basesoc_sdram_choose_cmd_grant <= 3'd7;
                        end else begin
                            if (basesoc_sdram_choose_cmd_request[0]) begin
                                basesoc_sdram_choose_cmd_grant <= 1'd0;
                            end else begin
                                if (basesoc_sdram_choose_cmd_request[1]) begin
                                    basesoc_sdram_choose_cmd_grant <= 1'd1;
                                end else begin
                                    if (basesoc_sdram_choose_cmd_request[2]) begin
                                        basesoc_sdram_choose_cmd_grant <= 2'd2;
                                    end else begin
                                        if (basesoc_sdram_choose_cmd_request[3]) begin
                                            basesoc_sdram_choose_cmd_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (basesoc_sdram_choose_cmd_request[6]) begin
                    basesoc_sdram_choose_cmd_grant <= 3'd6;
                end else begin
                    if (basesoc_sdram_choose_cmd_request[7]) begin
                        basesoc_sdram_choose_cmd_grant <= 3'd7;
                    end else begin
                        if (basesoc_sdram_choose_cmd_request[0]) begin
                            basesoc_sdram_choose_cmd_grant <= 1'd0;
                        end else begin
                            if (basesoc_sdram_choose_cmd_request[1]) begin
                                basesoc_sdram_choose_cmd_grant <= 1'd1;
                            end else begin
                                if (basesoc_sdram_choose_cmd_request[2]) begin
                                    basesoc_sdram_choose_cmd_grant <= 2'd2;
                                end else begin
                                    if (basesoc_sdram_choose_cmd_request[3]) begin
                                        basesoc_sdram_choose_cmd_grant <= 2'd3;
                                    end else begin
                                        if (basesoc_sdram_choose_cmd_request[4]) begin
                                            basesoc_sdram_choose_cmd_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (basesoc_sdram_choose_cmd_request[7]) begin
                    basesoc_sdram_choose_cmd_grant <= 3'd7;
                end else begin
                    if (basesoc_sdram_choose_cmd_request[0]) begin
                        basesoc_sdram_choose_cmd_grant <= 1'd0;
                    end else begin
                        if (basesoc_sdram_choose_cmd_request[1]) begin
                            basesoc_sdram_choose_cmd_grant <= 1'd1;
                        end else begin
                            if (basesoc_sdram_choose_cmd_request[2]) begin
                                basesoc_sdram_choose_cmd_grant <= 2'd2;
                            end else begin
                                if (basesoc_sdram_choose_cmd_request[3]) begin
                                    basesoc_sdram_choose_cmd_grant <= 2'd3;
                                end else begin
                                    if (basesoc_sdram_choose_cmd_request[4]) begin
                                        basesoc_sdram_choose_cmd_grant <= 3'd4;
                                    end else begin
                                        if (basesoc_sdram_choose_cmd_request[5]) begin
                                            basesoc_sdram_choose_cmd_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (basesoc_sdram_choose_cmd_request[0]) begin
                    basesoc_sdram_choose_cmd_grant <= 1'd0;
                end else begin
                    if (basesoc_sdram_choose_cmd_request[1]) begin
                        basesoc_sdram_choose_cmd_grant <= 1'd1;
                    end else begin
                        if (basesoc_sdram_choose_cmd_request[2]) begin
                            basesoc_sdram_choose_cmd_grant <= 2'd2;
                        end else begin
                            if (basesoc_sdram_choose_cmd_request[3]) begin
                                basesoc_sdram_choose_cmd_grant <= 2'd3;
                            end else begin
                                if (basesoc_sdram_choose_cmd_request[4]) begin
                                    basesoc_sdram_choose_cmd_grant <= 3'd4;
                                end else begin
                                    if (basesoc_sdram_choose_cmd_request[5]) begin
                                        basesoc_sdram_choose_cmd_grant <= 3'd5;
                                    end else begin
                                        if (basesoc_sdram_choose_cmd_request[6]) begin
                                            basesoc_sdram_choose_cmd_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    if (basesoc_sdram_choose_req_ce) begin
        case (basesoc_sdram_choose_req_grant)
            1'd0: begin
                if (basesoc_sdram_choose_req_request[1]) begin
                    basesoc_sdram_choose_req_grant <= 1'd1;
                end else begin
                    if (basesoc_sdram_choose_req_request[2]) begin
                        basesoc_sdram_choose_req_grant <= 2'd2;
                    end else begin
                        if (basesoc_sdram_choose_req_request[3]) begin
                            basesoc_sdram_choose_req_grant <= 2'd3;
                        end else begin
                            if (basesoc_sdram_choose_req_request[4]) begin
                                basesoc_sdram_choose_req_grant <= 3'd4;
                            end else begin
                                if (basesoc_sdram_choose_req_request[5]) begin
                                    basesoc_sdram_choose_req_grant <= 3'd5;
                                end else begin
                                    if (basesoc_sdram_choose_req_request[6]) begin
                                        basesoc_sdram_choose_req_grant <= 3'd6;
                                    end else begin
                                        if (basesoc_sdram_choose_req_request[7]) begin
                                            basesoc_sdram_choose_req_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (basesoc_sdram_choose_req_request[2]) begin
                    basesoc_sdram_choose_req_grant <= 2'd2;
                end else begin
                    if (basesoc_sdram_choose_req_request[3]) begin
                        basesoc_sdram_choose_req_grant <= 2'd3;
                    end else begin
                        if (basesoc_sdram_choose_req_request[4]) begin
                            basesoc_sdram_choose_req_grant <= 3'd4;
                        end else begin
                            if (basesoc_sdram_choose_req_request[5]) begin
                                basesoc_sdram_choose_req_grant <= 3'd5;
                            end else begin
                                if (basesoc_sdram_choose_req_request[6]) begin
                                    basesoc_sdram_choose_req_grant <= 3'd6;
                                end else begin
                                    if (basesoc_sdram_choose_req_request[7]) begin
                                        basesoc_sdram_choose_req_grant <= 3'd7;
                                    end else begin
                                        if (basesoc_sdram_choose_req_request[0]) begin
                                            basesoc_sdram_choose_req_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (basesoc_sdram_choose_req_request[3]) begin
                    basesoc_sdram_choose_req_grant <= 2'd3;
                end else begin
                    if (basesoc_sdram_choose_req_request[4]) begin
                        basesoc_sdram_choose_req_grant <= 3'd4;
                    end else begin
                        if (basesoc_sdram_choose_req_request[5]) begin
                            basesoc_sdram_choose_req_grant <= 3'd5;
                        end else begin
                            if (basesoc_sdram_choose_req_request[6]) begin
                                basesoc_sdram_choose_req_grant <= 3'd6;
                            end else begin
                                if (basesoc_sdram_choose_req_request[7]) begin
                                    basesoc_sdram_choose_req_grant <= 3'd7;
                                end else begin
                                    if (basesoc_sdram_choose_req_request[0]) begin
                                        basesoc_sdram_choose_req_grant <= 1'd0;
                                    end else begin
                                        if (basesoc_sdram_choose_req_request[1]) begin
                                            basesoc_sdram_choose_req_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (basesoc_sdram_choose_req_request[4]) begin
                    basesoc_sdram_choose_req_grant <= 3'd4;
                end else begin
                    if (basesoc_sdram_choose_req_request[5]) begin
                        basesoc_sdram_choose_req_grant <= 3'd5;
                    end else begin
                        if (basesoc_sdram_choose_req_request[6]) begin
                            basesoc_sdram_choose_req_grant <= 3'd6;
                        end else begin
                            if (basesoc_sdram_choose_req_request[7]) begin
                                basesoc_sdram_choose_req_grant <= 3'd7;
                            end else begin
                                if (basesoc_sdram_choose_req_request[0]) begin
                                    basesoc_sdram_choose_req_grant <= 1'd0;
                                end else begin
                                    if (basesoc_sdram_choose_req_request[1]) begin
                                        basesoc_sdram_choose_req_grant <= 1'd1;
                                    end else begin
                                        if (basesoc_sdram_choose_req_request[2]) begin
                                            basesoc_sdram_choose_req_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (basesoc_sdram_choose_req_request[5]) begin
                    basesoc_sdram_choose_req_grant <= 3'd5;
                end else begin
                    if (basesoc_sdram_choose_req_request[6]) begin
                        basesoc_sdram_choose_req_grant <= 3'd6;
                    end else begin
                        if (basesoc_sdram_choose_req_request[7]) begin
                            basesoc_sdram_choose_req_grant <= 3'd7;
                        end else begin
                            if (basesoc_sdram_choose_req_request[0]) begin
                                basesoc_sdram_choose_req_grant <= 1'd0;
                            end else begin
                                if (basesoc_sdram_choose_req_request[1]) begin
                                    basesoc_sdram_choose_req_grant <= 1'd1;
                                end else begin
                                    if (basesoc_sdram_choose_req_request[2]) begin
                                        basesoc_sdram_choose_req_grant <= 2'd2;
                                    end else begin
                                        if (basesoc_sdram_choose_req_request[3]) begin
                                            basesoc_sdram_choose_req_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (basesoc_sdram_choose_req_request[6]) begin
                    basesoc_sdram_choose_req_grant <= 3'd6;
                end else begin
                    if (basesoc_sdram_choose_req_request[7]) begin
                        basesoc_sdram_choose_req_grant <= 3'd7;
                    end else begin
                        if (basesoc_sdram_choose_req_request[0]) begin
                            basesoc_sdram_choose_req_grant <= 1'd0;
                        end else begin
                            if (basesoc_sdram_choose_req_request[1]) begin
                                basesoc_sdram_choose_req_grant <= 1'd1;
                            end else begin
                                if (basesoc_sdram_choose_req_request[2]) begin
                                    basesoc_sdram_choose_req_grant <= 2'd2;
                                end else begin
                                    if (basesoc_sdram_choose_req_request[3]) begin
                                        basesoc_sdram_choose_req_grant <= 2'd3;
                                    end else begin
                                        if (basesoc_sdram_choose_req_request[4]) begin
                                            basesoc_sdram_choose_req_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (basesoc_sdram_choose_req_request[7]) begin
                    basesoc_sdram_choose_req_grant <= 3'd7;
                end else begin
                    if (basesoc_sdram_choose_req_request[0]) begin
                        basesoc_sdram_choose_req_grant <= 1'd0;
                    end else begin
                        if (basesoc_sdram_choose_req_request[1]) begin
                            basesoc_sdram_choose_req_grant <= 1'd1;
                        end else begin
                            if (basesoc_sdram_choose_req_request[2]) begin
                                basesoc_sdram_choose_req_grant <= 2'd2;
                            end else begin
                                if (basesoc_sdram_choose_req_request[3]) begin
                                    basesoc_sdram_choose_req_grant <= 2'd3;
                                end else begin
                                    if (basesoc_sdram_choose_req_request[4]) begin
                                        basesoc_sdram_choose_req_grant <= 3'd4;
                                    end else begin
                                        if (basesoc_sdram_choose_req_request[5]) begin
                                            basesoc_sdram_choose_req_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (basesoc_sdram_choose_req_request[0]) begin
                    basesoc_sdram_choose_req_grant <= 1'd0;
                end else begin
                    if (basesoc_sdram_choose_req_request[1]) begin
                        basesoc_sdram_choose_req_grant <= 1'd1;
                    end else begin
                        if (basesoc_sdram_choose_req_request[2]) begin
                            basesoc_sdram_choose_req_grant <= 2'd2;
                        end else begin
                            if (basesoc_sdram_choose_req_request[3]) begin
                                basesoc_sdram_choose_req_grant <= 2'd3;
                            end else begin
                                if (basesoc_sdram_choose_req_request[4]) begin
                                    basesoc_sdram_choose_req_grant <= 3'd4;
                                end else begin
                                    if (basesoc_sdram_choose_req_request[5]) begin
                                        basesoc_sdram_choose_req_grant <= 3'd5;
                                    end else begin
                                        if (basesoc_sdram_choose_req_request[6]) begin
                                            basesoc_sdram_choose_req_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    basesoc_sdram_dfi_p0_cs_n <= 1'd0;
    basesoc_sdram_dfi_p0_bank <= self0;
    basesoc_sdram_dfi_p0_address <= self1;
    basesoc_sdram_dfi_p0_cas_n <= (~self2);
    basesoc_sdram_dfi_p0_ras_n <= (~self3);
    basesoc_sdram_dfi_p0_we_n <= (~self4);
    basesoc_sdram_dfi_p0_rddata_en <= self5;
    basesoc_sdram_dfi_p0_wrdata_en <= self6;
    basesoc_sdram_dfi_p1_cs_n <= 1'd0;
    basesoc_sdram_dfi_p1_bank <= self7;
    basesoc_sdram_dfi_p1_address <= self8;
    basesoc_sdram_dfi_p1_cas_n <= (~self9);
    basesoc_sdram_dfi_p1_ras_n <= (~self10);
    basesoc_sdram_dfi_p1_we_n <= (~self11);
    basesoc_sdram_dfi_p1_rddata_en <= self12;
    basesoc_sdram_dfi_p1_wrdata_en <= self13;
    if (basesoc_sdram_trrdcon_valid) begin
        basesoc_sdram_trrdcon_count <= 1'd1;
        if (1'd0) begin
            basesoc_sdram_trrdcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_trrdcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_trrdcon_ready)) begin
            basesoc_sdram_trrdcon_count <= (basesoc_sdram_trrdcon_count - 1'd1);
            if ((basesoc_sdram_trrdcon_count == 1'd1)) begin
                basesoc_sdram_trrdcon_ready <= 1'd1;
            end
        end
    end
    basesoc_sdram_tfawcon_window <= {basesoc_sdram_tfawcon_window, basesoc_sdram_tfawcon_valid};
    if ((basesoc_sdram_tfawcon_count < 3'd4)) begin
        if ((basesoc_sdram_tfawcon_count == 2'd3)) begin
            basesoc_sdram_tfawcon_ready <= (~basesoc_sdram_tfawcon_valid);
        end else begin
            basesoc_sdram_tfawcon_ready <= 1'd1;
        end
    end
    if (basesoc_sdram_tccdcon_valid) begin
        basesoc_sdram_tccdcon_count <= 1'd1;
        if (1'd0) begin
            basesoc_sdram_tccdcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_tccdcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_tccdcon_ready)) begin
            basesoc_sdram_tccdcon_count <= (basesoc_sdram_tccdcon_count - 1'd1);
            if ((basesoc_sdram_tccdcon_count == 1'd1)) begin
                basesoc_sdram_tccdcon_ready <= 1'd1;
            end
        end
    end
    if (basesoc_sdram_twtrcon_valid) begin
        basesoc_sdram_twtrcon_count <= 3'd6;
        if (1'd0) begin
            basesoc_sdram_twtrcon_ready <= 1'd1;
        end else begin
            basesoc_sdram_twtrcon_ready <= 1'd0;
        end
    end else begin
        if ((~basesoc_sdram_twtrcon_ready)) begin
            basesoc_sdram_twtrcon_count <= (basesoc_sdram_twtrcon_count - 1'd1);
            if ((basesoc_sdram_twtrcon_count == 1'd1)) begin
                basesoc_sdram_twtrcon_ready <= 1'd1;
            end
        end
    end
    multiplexer_state <= multiplexer_next_state;
    new_master_wdata_ready0 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd0) & basesoc_sdram_interface_bank0_wdata_ready)) | ((roundrobin1_grant == 1'd0) & basesoc_sdram_interface_bank1_wdata_ready)) | ((roundrobin2_grant == 1'd0) & basesoc_sdram_interface_bank2_wdata_ready)) | ((roundrobin3_grant == 1'd0) & basesoc_sdram_interface_bank3_wdata_ready)) | ((roundrobin4_grant == 1'd0) & basesoc_sdram_interface_bank4_wdata_ready)) | ((roundrobin5_grant == 1'd0) & basesoc_sdram_interface_bank5_wdata_ready)) | ((roundrobin6_grant == 1'd0) & basesoc_sdram_interface_bank6_wdata_ready)) | ((roundrobin7_grant == 1'd0) & basesoc_sdram_interface_bank7_wdata_ready));
    new_master_wdata_ready1 <= new_master_wdata_ready0;
    new_master_wdata_ready2 <= new_master_wdata_ready1;
    new_master_rdata_valid0 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd0) & basesoc_sdram_interface_bank0_rdata_valid)) | ((roundrobin1_grant == 1'd0) & basesoc_sdram_interface_bank1_rdata_valid)) | ((roundrobin2_grant == 1'd0) & basesoc_sdram_interface_bank2_rdata_valid)) | ((roundrobin3_grant == 1'd0) & basesoc_sdram_interface_bank3_rdata_valid)) | ((roundrobin4_grant == 1'd0) & basesoc_sdram_interface_bank4_rdata_valid)) | ((roundrobin5_grant == 1'd0) & basesoc_sdram_interface_bank5_rdata_valid)) | ((roundrobin6_grant == 1'd0) & basesoc_sdram_interface_bank6_rdata_valid)) | ((roundrobin7_grant == 1'd0) & basesoc_sdram_interface_bank7_rdata_valid));
    new_master_rdata_valid1 <= new_master_rdata_valid0;
    new_master_rdata_valid2 <= new_master_rdata_valid1;
    new_master_rdata_valid3 <= new_master_rdata_valid2;
    new_master_rdata_valid4 <= new_master_rdata_valid3;
    new_master_rdata_valid5 <= new_master_rdata_valid4;
    new_master_rdata_valid6 <= new_master_rdata_valid5;
    new_master_rdata_valid7 <= new_master_rdata_valid6;
    new_master_rdata_valid8 <= new_master_rdata_valid7;
    new_master_rdata_valid9 <= new_master_rdata_valid8;
    new_master_rdata_valid10 <= new_master_rdata_valid9;
    new_master_rdata_valid11 <= new_master_rdata_valid10;
    new_master_rdata_valid12 <= new_master_rdata_valid11;
    basesoc_adr_offset_r <= basesoc_wb_sdram_adr[1:0];
    fullmemorywe_state <= fullmemorywe_next_state;
    litedramwishbone2native_state <= litedramwishbone2native_next_state;
    if (basesoc_aborted_litedramwishbone2native_next_value_ce) begin
        basesoc_aborted <= basesoc_aborted_litedramwishbone2native_next_value;
    end
    if (leds_done) begin
        leds_chaser <= {leds_chaser, (~leds_chaser[5])};
    end
    if (leds_re) begin
        leds_mode <= 1'd1;
    end
    if (leds_wait) begin
        if ((~leds_done)) begin
            leds_count <= (leds_count - 1'd1);
        end
    end else begin
        leds_count <= 22'd4000000;
    end
    wishbone2csr_state <= wishbone2csr_next_state;
    if (interface1_dat_w_wishbone2csr_next_value_ce0) begin
        interface1_dat_w <= interface1_dat_w_wishbone2csr_next_value0;
    end
    if (interface1_adr_wishbone2csr_next_value_ce1) begin
        interface1_adr <= interface1_adr_wishbone2csr_next_value1;
    end
    if (interface1_re_wishbone2csr_next_value_ce2) begin
        interface1_re <= interface1_re_wishbone2csr_next_value2;
    end
    if (interface1_we_wishbone2csr_next_value_ce3) begin
        interface1_we <= interface1_we_wishbone2csr_next_value3;
    end
    csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank0_sel) begin
        case (csr_bankarray_interface0_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_in_w;
            end
        endcase
    end
    buttons_re <= csr_bankarray_csrbank0_in_re;
    csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank1_sel) begin
        case (csr_bankarray_interface1_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_reset0_w;
            end
            1'd1: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_scratch0_w;
            end
            2'd2: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_bus_errors_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank1_reset0_re) begin
        basesoc_reset_storage[1:0] <= csr_bankarray_csrbank1_reset0_r;
    end
    basesoc_reset_re <= csr_bankarray_csrbank1_reset0_re;
    if (csr_bankarray_csrbank1_scratch0_re) begin
        basesoc_scratch_storage[31:0] <= csr_bankarray_csrbank1_scratch0_r;
    end
    basesoc_scratch_re <= csr_bankarray_csrbank1_scratch0_re;
    basesoc_bus_errors_re <= csr_bankarray_csrbank1_bus_errors_re;
    csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank2_sel) begin
        case (csr_bankarray_interface2_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dly_sel0_w;
            end
            1'd1: begin
                csr_bankarray_interface2_bank_bus_dat_r <= gw2ddrphy_rdly_dq_rst_w;
            end
            2'd2: begin
                csr_bankarray_interface2_bank_bus_dat_r <= gw2ddrphy_rdly_dq_inc_w;
            end
            2'd3: begin
                csr_bankarray_interface2_bank_bus_dat_r <= gw2ddrphy_rdly_dq_bitslip_rst_w;
            end
            3'd4: begin
                csr_bankarray_interface2_bank_bus_dat_r <= gw2ddrphy_rdly_dq_bitslip_w;
            end
            3'd5: begin
                csr_bankarray_interface2_bank_bus_dat_r <= gw2ddrphy_burstdet_clr_w;
            end
            3'd6: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_burstdet_seen_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank2_dly_sel0_re) begin
        gw2ddrphy_dly_sel_storage[1:0] <= csr_bankarray_csrbank2_dly_sel0_r;
    end
    gw2ddrphy_dly_sel_re <= csr_bankarray_csrbank2_dly_sel0_re;
    gw2ddrphy_burstdet_seen_re <= csr_bankarray_csrbank2_burstdet_seen_re;
    csr_bankarray_sel_r <= csr_bankarray_sel;
    csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank3_sel) begin
        case (csr_bankarray_interface3_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank3_out0_re) begin
        leds_storage[5:0] <= csr_bankarray_csrbank3_out0_r;
    end
    leds_re <= csr_bankarray_csrbank3_out0_re;
    csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank4_sel) begin
        case (csr_bankarray_interface4_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_control0_w;
            end
            1'd1: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi0_command0_w;
            end
            2'd2: begin
                csr_bankarray_interface4_bank_bus_dat_r <= basesoc_sdram_phaseinjector0_command_issue_w;
            end
            2'd3: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi0_address0_w;
            end
            3'd4: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi0_baddress0_w;
            end
            3'd5: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi0_wrdata1_w;
            end
            3'd6: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi0_wrdata0_w;
            end
            3'd7: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi0_rddata1_w;
            end
            4'd8: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi0_rddata0_w;
            end
            4'd9: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi1_command0_w;
            end
            4'd10: begin
                csr_bankarray_interface4_bank_bus_dat_r <= basesoc_sdram_phaseinjector1_command_issue_w;
            end
            4'd11: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi1_address0_w;
            end
            4'd12: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi1_baddress0_w;
            end
            4'd13: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi1_wrdata1_w;
            end
            4'd14: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi1_wrdata0_w;
            end
            4'd15: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi1_rddata1_w;
            end
            5'd16: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dfii_pi1_rddata0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank4_dfii_control0_re) begin
        basesoc_sdram_storage[3:0] <= csr_bankarray_csrbank4_dfii_control0_r;
    end
    basesoc_sdram_re <= csr_bankarray_csrbank4_dfii_control0_re;
    if (csr_bankarray_csrbank4_dfii_pi0_command0_re) begin
        basesoc_sdram_phaseinjector0_command_storage[7:0] <= csr_bankarray_csrbank4_dfii_pi0_command0_r;
    end
    basesoc_sdram_phaseinjector0_command_re <= csr_bankarray_csrbank4_dfii_pi0_command0_re;
    if (csr_bankarray_csrbank4_dfii_pi0_address0_re) begin
        basesoc_sdram_phaseinjector0_address_storage[12:0] <= csr_bankarray_csrbank4_dfii_pi0_address0_r;
    end
    basesoc_sdram_phaseinjector0_address_re <= csr_bankarray_csrbank4_dfii_pi0_address0_re;
    if (csr_bankarray_csrbank4_dfii_pi0_baddress0_re) begin
        basesoc_sdram_phaseinjector0_baddress_storage[2:0] <= csr_bankarray_csrbank4_dfii_pi0_baddress0_r;
    end
    basesoc_sdram_phaseinjector0_baddress_re <= csr_bankarray_csrbank4_dfii_pi0_baddress0_re;
    if (csr_bankarray_csrbank4_dfii_pi0_wrdata1_re) begin
        basesoc_sdram_phaseinjector0_wrdata_storage[63:32] <= csr_bankarray_csrbank4_dfii_pi0_wrdata1_r;
    end
    if (csr_bankarray_csrbank4_dfii_pi0_wrdata0_re) begin
        basesoc_sdram_phaseinjector0_wrdata_storage[31:0] <= csr_bankarray_csrbank4_dfii_pi0_wrdata0_r;
    end
    basesoc_sdram_phaseinjector0_wrdata_re <= csr_bankarray_csrbank4_dfii_pi0_wrdata0_re;
    basesoc_sdram_phaseinjector0_rddata_re <= csr_bankarray_csrbank4_dfii_pi0_rddata0_re;
    if (csr_bankarray_csrbank4_dfii_pi1_command0_re) begin
        basesoc_sdram_phaseinjector1_command_storage[7:0] <= csr_bankarray_csrbank4_dfii_pi1_command0_r;
    end
    basesoc_sdram_phaseinjector1_command_re <= csr_bankarray_csrbank4_dfii_pi1_command0_re;
    if (csr_bankarray_csrbank4_dfii_pi1_address0_re) begin
        basesoc_sdram_phaseinjector1_address_storage[12:0] <= csr_bankarray_csrbank4_dfii_pi1_address0_r;
    end
    basesoc_sdram_phaseinjector1_address_re <= csr_bankarray_csrbank4_dfii_pi1_address0_re;
    if (csr_bankarray_csrbank4_dfii_pi1_baddress0_re) begin
        basesoc_sdram_phaseinjector1_baddress_storage[2:0] <= csr_bankarray_csrbank4_dfii_pi1_baddress0_r;
    end
    basesoc_sdram_phaseinjector1_baddress_re <= csr_bankarray_csrbank4_dfii_pi1_baddress0_re;
    if (csr_bankarray_csrbank4_dfii_pi1_wrdata1_re) begin
        basesoc_sdram_phaseinjector1_wrdata_storage[63:32] <= csr_bankarray_csrbank4_dfii_pi1_wrdata1_r;
    end
    if (csr_bankarray_csrbank4_dfii_pi1_wrdata0_re) begin
        basesoc_sdram_phaseinjector1_wrdata_storage[31:0] <= csr_bankarray_csrbank4_dfii_pi1_wrdata0_r;
    end
    basesoc_sdram_phaseinjector1_wrdata_re <= csr_bankarray_csrbank4_dfii_pi1_wrdata0_re;
    basesoc_sdram_phaseinjector1_rddata_re <= csr_bankarray_csrbank4_dfii_pi1_rddata0_re;
    csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank5_sel) begin
        case (csr_bankarray_interface5_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_load0_w;
            end
            1'd1: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_reload0_w;
            end
            2'd2: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_en0_w;
            end
            2'd3: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_update_value0_w;
            end
            3'd4: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_value_w;
            end
            3'd5: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_ev_status_w;
            end
            3'd6: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_ev_pending_w;
            end
            3'd7: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_ev_enable0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank5_load0_re) begin
        basesoc_timer_load_storage[31:0] <= csr_bankarray_csrbank5_load0_r;
    end
    basesoc_timer_load_re <= csr_bankarray_csrbank5_load0_re;
    if (csr_bankarray_csrbank5_reload0_re) begin
        basesoc_timer_reload_storage[31:0] <= csr_bankarray_csrbank5_reload0_r;
    end
    basesoc_timer_reload_re <= csr_bankarray_csrbank5_reload0_re;
    if (csr_bankarray_csrbank5_en0_re) begin
        basesoc_timer_en_storage <= csr_bankarray_csrbank5_en0_r;
    end
    basesoc_timer_en_re <= csr_bankarray_csrbank5_en0_re;
    if (csr_bankarray_csrbank5_update_value0_re) begin
        basesoc_timer_update_value_storage <= csr_bankarray_csrbank5_update_value0_r;
    end
    basesoc_timer_update_value_re <= csr_bankarray_csrbank5_update_value0_re;
    basesoc_timer_value_re <= csr_bankarray_csrbank5_value_re;
    basesoc_timer_status_re <= csr_bankarray_csrbank5_ev_status_re;
    if (csr_bankarray_csrbank5_ev_pending_re) begin
        basesoc_timer_pending_r <= csr_bankarray_csrbank5_ev_pending_r;
    end
    basesoc_timer_pending_re <= csr_bankarray_csrbank5_ev_pending_re;
    if (csr_bankarray_csrbank5_ev_enable0_re) begin
        basesoc_timer_enable_storage <= csr_bankarray_csrbank5_ev_enable0_r;
    end
    basesoc_timer_enable_re <= csr_bankarray_csrbank5_ev_enable0_re;
    csr_bankarray_interface6_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank6_sel) begin
        case (csr_bankarray_interface6_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface6_bank_bus_dat_r <= basesoc_uart_rxtx_w;
            end
            1'd1: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_txfull_w;
            end
            2'd2: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_rxempty_w;
            end
            2'd3: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_ev_status_w;
            end
            3'd4: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_ev_pending_w;
            end
            3'd5: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_ev_enable0_w;
            end
            3'd6: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_txempty_w;
            end
            3'd7: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_rxfull_w;
            end
        endcase
    end
    basesoc_uart_txfull_re <= csr_bankarray_csrbank6_txfull_re;
    basesoc_uart_rxempty_re <= csr_bankarray_csrbank6_rxempty_re;
    basesoc_uart_status_re <= csr_bankarray_csrbank6_ev_status_re;
    if (csr_bankarray_csrbank6_ev_pending_re) begin
        basesoc_uart_pending_r[1:0] <= csr_bankarray_csrbank6_ev_pending_r;
    end
    basesoc_uart_pending_re <= csr_bankarray_csrbank6_ev_pending_re;
    if (csr_bankarray_csrbank6_ev_enable0_re) begin
        basesoc_uart_enable_storage[1:0] <= csr_bankarray_csrbank6_ev_enable0_r;
    end
    basesoc_uart_enable_re <= csr_bankarray_csrbank6_ev_enable0_re;
    basesoc_uart_txempty_re <= csr_bankarray_csrbank6_txempty_re;
    basesoc_uart_rxfull_re <= csr_bankarray_csrbank6_rxfull_re;
    if (sys_rst) begin
        basesoc_reset_storage <= 2'd0;
        basesoc_reset_re <= 1'd0;
        basesoc_scratch_storage <= 32'd305419896;
        basesoc_scratch_re <= 1'd0;
        basesoc_bus_errors_re <= 1'd0;
        basesoc_bus_errors <= 32'd0;
        basesoc_basesoc_ram_bus_ack <= 1'd0;
        basesoc_ram_bus_ram_bus_ack <= 1'd0;
        serial_tx <= 1'd1;
        basesoc_tx_tick <= 1'd0;
        basesoc_rx_tick <= 1'd0;
        basesoc_rx_rx_d <= 1'd0;
        basesoc_uart_txfull_re <= 1'd0;
        basesoc_uart_rxempty_re <= 1'd0;
        basesoc_uart_tx_pending <= 1'd0;
        basesoc_uart_tx_trigger_d <= 1'd0;
        basesoc_uart_rx_pending <= 1'd0;
        basesoc_uart_rx_trigger_d <= 1'd0;
        basesoc_uart_status_re <= 1'd0;
        basesoc_uart_pending_re <= 1'd0;
        basesoc_uart_pending_r <= 2'd0;
        basesoc_uart_enable_storage <= 2'd0;
        basesoc_uart_enable_re <= 1'd0;
        basesoc_uart_txempty_re <= 1'd0;
        basesoc_uart_rxfull_re <= 1'd0;
        basesoc_uart_tx_fifo_readable <= 1'd0;
        basesoc_uart_tx_fifo_level0 <= 5'd0;
        basesoc_uart_tx_fifo_produce <= 4'd0;
        basesoc_uart_tx_fifo_consume <= 4'd0;
        basesoc_uart_rx_fifo_readable <= 1'd0;
        basesoc_uart_rx_fifo_level0 <= 5'd0;
        basesoc_uart_rx_fifo_produce <= 4'd0;
        basesoc_uart_rx_fifo_consume <= 4'd0;
        basesoc_timer_load_storage <= 32'd0;
        basesoc_timer_load_re <= 1'd0;
        basesoc_timer_reload_storage <= 32'd0;
        basesoc_timer_reload_re <= 1'd0;
        basesoc_timer_en_storage <= 1'd0;
        basesoc_timer_en_re <= 1'd0;
        basesoc_timer_update_value_storage <= 1'd0;
        basesoc_timer_update_value_re <= 1'd0;
        basesoc_timer_value_status <= 32'd0;
        basesoc_timer_value_re <= 1'd0;
        basesoc_timer_zero_pending <= 1'd0;
        basesoc_timer_zero_trigger_d <= 1'd0;
        basesoc_timer_status_re <= 1'd0;
        basesoc_timer_pending_re <= 1'd0;
        basesoc_timer_pending_r <= 1'd0;
        basesoc_timer_enable_storage <= 1'd0;
        basesoc_timer_enable_re <= 1'd0;
        basesoc_timer_value <= 32'd0;
        gw2ddrphy_dly_sel_storage <= 2'd0;
        gw2ddrphy_dly_sel_re <= 1'd0;
        gw2ddrphy_burstdet_seen_status <= 2'd0;
        gw2ddrphy_burstdet_seen_re <= 1'd0;
        gw2ddrphy_rdly0 <= 3'd0;
        gw2ddrphy_burstdet_d0 <= 1'd0;
        gw2ddrphy_dm_o_data_d0 <= 8'd0;
        gw2ddrphy_dm_o_data_muxed0 <= 4'd0;
        gw2ddrphy_dq_o_data_d0 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed0 <= 4'd0;
        gw2ddrphy_bitslip0_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d0 <= 4'd0;
        gw2ddrphy_dq_o_data_d1 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed1 <= 4'd0;
        gw2ddrphy_bitslip1_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d1 <= 4'd0;
        gw2ddrphy_dq_o_data_d2 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed2 <= 4'd0;
        gw2ddrphy_bitslip2_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d2 <= 4'd0;
        gw2ddrphy_dq_o_data_d3 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed3 <= 4'd0;
        gw2ddrphy_bitslip3_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d3 <= 4'd0;
        gw2ddrphy_dq_o_data_d4 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed4 <= 4'd0;
        gw2ddrphy_bitslip4_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d4 <= 4'd0;
        gw2ddrphy_dq_o_data_d5 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed5 <= 4'd0;
        gw2ddrphy_bitslip5_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d5 <= 4'd0;
        gw2ddrphy_dq_o_data_d6 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed6 <= 4'd0;
        gw2ddrphy_bitslip6_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d6 <= 4'd0;
        gw2ddrphy_dq_o_data_d7 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed7 <= 4'd0;
        gw2ddrphy_bitslip7_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d7 <= 4'd0;
        gw2ddrphy_rdly1 <= 3'd0;
        gw2ddrphy_burstdet_d1 <= 1'd0;
        gw2ddrphy_dm_o_data_d1 <= 8'd0;
        gw2ddrphy_dm_o_data_muxed1 <= 4'd0;
        gw2ddrphy_dq_o_data_d8 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed8 <= 4'd0;
        gw2ddrphy_bitslip8_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d8 <= 4'd0;
        gw2ddrphy_dq_o_data_d9 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed9 <= 4'd0;
        gw2ddrphy_bitslip9_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d9 <= 4'd0;
        gw2ddrphy_dq_o_data_d10 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed10 <= 4'd0;
        gw2ddrphy_bitslip10_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d10 <= 4'd0;
        gw2ddrphy_dq_o_data_d11 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed11 <= 4'd0;
        gw2ddrphy_bitslip11_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d11 <= 4'd0;
        gw2ddrphy_dq_o_data_d12 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed12 <= 4'd0;
        gw2ddrphy_bitslip12_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d12 <= 4'd0;
        gw2ddrphy_dq_o_data_d13 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed13 <= 4'd0;
        gw2ddrphy_bitslip13_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d13 <= 4'd0;
        gw2ddrphy_dq_o_data_d14 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed14 <= 4'd0;
        gw2ddrphy_bitslip14_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d14 <= 4'd0;
        gw2ddrphy_dq_o_data_d15 <= 8'd0;
        gw2ddrphy_dq_o_data_muxed15 <= 4'd0;
        gw2ddrphy_bitslip15_value <= 2'd0;
        gw2ddrphy_dq_i_bitslip_o_d15 <= 4'd0;
        gw2ddrphy_rddata_en_tappeddelayline0 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline1 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline2 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline3 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline4 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline5 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline6 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline7 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline8 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline9 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline10 <= 1'd0;
        gw2ddrphy_rddata_en_tappeddelayline11 <= 1'd0;
        gw2ddrphy_wrdata_en_tappeddelayline0 <= 1'd0;
        gw2ddrphy_wrdata_en_tappeddelayline1 <= 1'd0;
        gw2ddrphy_wrdata_en_tappeddelayline2 <= 1'd0;
        gw2ddrphy_wrdata_en_tappeddelayline3 <= 1'd0;
        gw2ddrphy_wrdata_en_tappeddelayline4 <= 1'd0;
        gw2ddrphy_wrdata_en_tappeddelayline5 <= 1'd0;
        basesoc_sdram_storage <= 4'd1;
        basesoc_sdram_re <= 1'd0;
        basesoc_sdram_phaseinjector0_command_storage <= 8'd0;
        basesoc_sdram_phaseinjector0_command_re <= 1'd0;
        basesoc_sdram_phaseinjector0_address_re <= 1'd0;
        basesoc_sdram_phaseinjector0_baddress_re <= 1'd0;
        basesoc_sdram_phaseinjector0_wrdata_re <= 1'd0;
        basesoc_sdram_phaseinjector0_rddata_status <= 64'd0;
        basesoc_sdram_phaseinjector0_rddata_re <= 1'd0;
        basesoc_sdram_phaseinjector1_command_storage <= 8'd0;
        basesoc_sdram_phaseinjector1_command_re <= 1'd0;
        basesoc_sdram_phaseinjector1_address_re <= 1'd0;
        basesoc_sdram_phaseinjector1_baddress_re <= 1'd0;
        basesoc_sdram_phaseinjector1_wrdata_re <= 1'd0;
        basesoc_sdram_phaseinjector1_rddata_status <= 64'd0;
        basesoc_sdram_phaseinjector1_rddata_re <= 1'd0;
        basesoc_sdram_dfi_p0_address <= 13'd0;
        basesoc_sdram_dfi_p0_bank <= 3'd0;
        basesoc_sdram_dfi_p0_cas_n <= 1'd1;
        basesoc_sdram_dfi_p0_cs_n <= 1'd1;
        basesoc_sdram_dfi_p0_ras_n <= 1'd1;
        basesoc_sdram_dfi_p0_we_n <= 1'd1;
        basesoc_sdram_dfi_p0_wrdata_en <= 1'd0;
        basesoc_sdram_dfi_p0_rddata_en <= 1'd0;
        basesoc_sdram_dfi_p1_address <= 13'd0;
        basesoc_sdram_dfi_p1_bank <= 3'd0;
        basesoc_sdram_dfi_p1_cas_n <= 1'd1;
        basesoc_sdram_dfi_p1_cs_n <= 1'd1;
        basesoc_sdram_dfi_p1_ras_n <= 1'd1;
        basesoc_sdram_dfi_p1_we_n <= 1'd1;
        basesoc_sdram_dfi_p1_wrdata_en <= 1'd0;
        basesoc_sdram_dfi_p1_rddata_en <= 1'd0;
        basesoc_sdram_cmd_payload_a <= 13'd0;
        basesoc_sdram_cmd_payload_ba <= 3'd0;
        basesoc_sdram_cmd_payload_cas <= 1'd0;
        basesoc_sdram_cmd_payload_ras <= 1'd0;
        basesoc_sdram_cmd_payload_we <= 1'd0;
        basesoc_sdram_timer_count1 <= 9'd374;
        basesoc_sdram_postponer_req_o <= 1'd0;
        basesoc_sdram_postponer_count <= 1'd0;
        basesoc_sdram_sequencer_done1 <= 1'd0;
        basesoc_sdram_sequencer_trigger <= 7'd0;
        basesoc_sdram_sequencer_count <= 1'd0;
        basesoc_sdram_zqcs_timer_count1 <= 26'd47999999;
        basesoc_sdram_zqcs_executer_done <= 1'd0;
        basesoc_sdram_zqcs_executer_trigger <= 6'd0;
        basesoc_sdram_bankmachine0_level <= 4'd0;
        basesoc_sdram_bankmachine0_produce <= 3'd0;
        basesoc_sdram_bankmachine0_consume <= 3'd0;
        basesoc_sdram_bankmachine0_pipe_valid_source_valid <= 1'd0;
        basesoc_sdram_bankmachine0_pipe_valid_source_payload_we <= 1'd0;
        basesoc_sdram_bankmachine0_pipe_valid_source_payload_addr <= 20'd0;
        basesoc_sdram_bankmachine0_row <= 13'd0;
        basesoc_sdram_bankmachine0_row_opened <= 1'd0;
        basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd0;
        basesoc_sdram_bankmachine0_twtpcon_count <= 3'd0;
        basesoc_sdram_bankmachine0_trccon_ready <= 1'd0;
        basesoc_sdram_bankmachine0_trccon_count <= 2'd0;
        basesoc_sdram_bankmachine0_trascon_ready <= 1'd0;
        basesoc_sdram_bankmachine0_trascon_count <= 2'd0;
        basesoc_sdram_bankmachine1_level <= 4'd0;
        basesoc_sdram_bankmachine1_produce <= 3'd0;
        basesoc_sdram_bankmachine1_consume <= 3'd0;
        basesoc_sdram_bankmachine1_pipe_valid_source_valid <= 1'd0;
        basesoc_sdram_bankmachine1_pipe_valid_source_payload_we <= 1'd0;
        basesoc_sdram_bankmachine1_pipe_valid_source_payload_addr <= 20'd0;
        basesoc_sdram_bankmachine1_row <= 13'd0;
        basesoc_sdram_bankmachine1_row_opened <= 1'd0;
        basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd0;
        basesoc_sdram_bankmachine1_twtpcon_count <= 3'd0;
        basesoc_sdram_bankmachine1_trccon_ready <= 1'd0;
        basesoc_sdram_bankmachine1_trccon_count <= 2'd0;
        basesoc_sdram_bankmachine1_trascon_ready <= 1'd0;
        basesoc_sdram_bankmachine1_trascon_count <= 2'd0;
        basesoc_sdram_bankmachine2_level <= 4'd0;
        basesoc_sdram_bankmachine2_produce <= 3'd0;
        basesoc_sdram_bankmachine2_consume <= 3'd0;
        basesoc_sdram_bankmachine2_pipe_valid_source_valid <= 1'd0;
        basesoc_sdram_bankmachine2_pipe_valid_source_payload_we <= 1'd0;
        basesoc_sdram_bankmachine2_pipe_valid_source_payload_addr <= 20'd0;
        basesoc_sdram_bankmachine2_row <= 13'd0;
        basesoc_sdram_bankmachine2_row_opened <= 1'd0;
        basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd0;
        basesoc_sdram_bankmachine2_twtpcon_count <= 3'd0;
        basesoc_sdram_bankmachine2_trccon_ready <= 1'd0;
        basesoc_sdram_bankmachine2_trccon_count <= 2'd0;
        basesoc_sdram_bankmachine2_trascon_ready <= 1'd0;
        basesoc_sdram_bankmachine2_trascon_count <= 2'd0;
        basesoc_sdram_bankmachine3_level <= 4'd0;
        basesoc_sdram_bankmachine3_produce <= 3'd0;
        basesoc_sdram_bankmachine3_consume <= 3'd0;
        basesoc_sdram_bankmachine3_pipe_valid_source_valid <= 1'd0;
        basesoc_sdram_bankmachine3_pipe_valid_source_payload_we <= 1'd0;
        basesoc_sdram_bankmachine3_pipe_valid_source_payload_addr <= 20'd0;
        basesoc_sdram_bankmachine3_row <= 13'd0;
        basesoc_sdram_bankmachine3_row_opened <= 1'd0;
        basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd0;
        basesoc_sdram_bankmachine3_twtpcon_count <= 3'd0;
        basesoc_sdram_bankmachine3_trccon_ready <= 1'd0;
        basesoc_sdram_bankmachine3_trccon_count <= 2'd0;
        basesoc_sdram_bankmachine3_trascon_ready <= 1'd0;
        basesoc_sdram_bankmachine3_trascon_count <= 2'd0;
        basesoc_sdram_bankmachine4_level <= 4'd0;
        basesoc_sdram_bankmachine4_produce <= 3'd0;
        basesoc_sdram_bankmachine4_consume <= 3'd0;
        basesoc_sdram_bankmachine4_pipe_valid_source_valid <= 1'd0;
        basesoc_sdram_bankmachine4_pipe_valid_source_payload_we <= 1'd0;
        basesoc_sdram_bankmachine4_pipe_valid_source_payload_addr <= 20'd0;
        basesoc_sdram_bankmachine4_row <= 13'd0;
        basesoc_sdram_bankmachine4_row_opened <= 1'd0;
        basesoc_sdram_bankmachine4_twtpcon_ready <= 1'd0;
        basesoc_sdram_bankmachine4_twtpcon_count <= 3'd0;
        basesoc_sdram_bankmachine4_trccon_ready <= 1'd0;
        basesoc_sdram_bankmachine4_trccon_count <= 2'd0;
        basesoc_sdram_bankmachine4_trascon_ready <= 1'd0;
        basesoc_sdram_bankmachine4_trascon_count <= 2'd0;
        basesoc_sdram_bankmachine5_level <= 4'd0;
        basesoc_sdram_bankmachine5_produce <= 3'd0;
        basesoc_sdram_bankmachine5_consume <= 3'd0;
        basesoc_sdram_bankmachine5_pipe_valid_source_valid <= 1'd0;
        basesoc_sdram_bankmachine5_pipe_valid_source_payload_we <= 1'd0;
        basesoc_sdram_bankmachine5_pipe_valid_source_payload_addr <= 20'd0;
        basesoc_sdram_bankmachine5_row <= 13'd0;
        basesoc_sdram_bankmachine5_row_opened <= 1'd0;
        basesoc_sdram_bankmachine5_twtpcon_ready <= 1'd0;
        basesoc_sdram_bankmachine5_twtpcon_count <= 3'd0;
        basesoc_sdram_bankmachine5_trccon_ready <= 1'd0;
        basesoc_sdram_bankmachine5_trccon_count <= 2'd0;
        basesoc_sdram_bankmachine5_trascon_ready <= 1'd0;
        basesoc_sdram_bankmachine5_trascon_count <= 2'd0;
        basesoc_sdram_bankmachine6_level <= 4'd0;
        basesoc_sdram_bankmachine6_produce <= 3'd0;
        basesoc_sdram_bankmachine6_consume <= 3'd0;
        basesoc_sdram_bankmachine6_pipe_valid_source_valid <= 1'd0;
        basesoc_sdram_bankmachine6_pipe_valid_source_payload_we <= 1'd0;
        basesoc_sdram_bankmachine6_pipe_valid_source_payload_addr <= 20'd0;
        basesoc_sdram_bankmachine6_row <= 13'd0;
        basesoc_sdram_bankmachine6_row_opened <= 1'd0;
        basesoc_sdram_bankmachine6_twtpcon_ready <= 1'd0;
        basesoc_sdram_bankmachine6_twtpcon_count <= 3'd0;
        basesoc_sdram_bankmachine6_trccon_ready <= 1'd0;
        basesoc_sdram_bankmachine6_trccon_count <= 2'd0;
        basesoc_sdram_bankmachine6_trascon_ready <= 1'd0;
        basesoc_sdram_bankmachine6_trascon_count <= 2'd0;
        basesoc_sdram_bankmachine7_level <= 4'd0;
        basesoc_sdram_bankmachine7_produce <= 3'd0;
        basesoc_sdram_bankmachine7_consume <= 3'd0;
        basesoc_sdram_bankmachine7_pipe_valid_source_valid <= 1'd0;
        basesoc_sdram_bankmachine7_pipe_valid_source_payload_we <= 1'd0;
        basesoc_sdram_bankmachine7_pipe_valid_source_payload_addr <= 20'd0;
        basesoc_sdram_bankmachine7_row <= 13'd0;
        basesoc_sdram_bankmachine7_row_opened <= 1'd0;
        basesoc_sdram_bankmachine7_twtpcon_ready <= 1'd0;
        basesoc_sdram_bankmachine7_twtpcon_count <= 3'd0;
        basesoc_sdram_bankmachine7_trccon_ready <= 1'd0;
        basesoc_sdram_bankmachine7_trccon_count <= 2'd0;
        basesoc_sdram_bankmachine7_trascon_ready <= 1'd0;
        basesoc_sdram_bankmachine7_trascon_count <= 2'd0;
        basesoc_sdram_choose_cmd_grant <= 3'd0;
        basesoc_sdram_choose_req_grant <= 3'd0;
        basesoc_sdram_trrdcon_ready <= 1'd0;
        basesoc_sdram_trrdcon_count <= 1'd0;
        basesoc_sdram_tfawcon_ready <= 1'd1;
        basesoc_sdram_tfawcon_window <= 3'd0;
        basesoc_sdram_tccdcon_ready <= 1'd0;
        basesoc_sdram_tccdcon_count <= 1'd0;
        basesoc_sdram_twtrcon_ready <= 1'd0;
        basesoc_sdram_twtrcon_count <= 3'd0;
        basesoc_sdram_time0 <= 5'd0;
        basesoc_sdram_time1 <= 4'd0;
        basesoc_aborted <= 1'd0;
        leds_storage <= 6'd0;
        leds_re <= 1'd0;
        leds_chaser <= 6'd0;
        leds_mode <= 1'd0;
        leds_count <= 22'd4000000;
        buttons_re <= 1'd0;
        interface1_re <= 1'd0;
        interface1_we <= 1'd0;
        grant <= 1'd0;
        slave_sel_r <= 4'd0;
        count <= 20'd1000000;
        csr_bankarray_sel_r <= 1'd0;
        rs232phytx_state <= 1'd0;
        rs232phyrx_state <= 1'd0;
        refresher_state <= 2'd0;
        bankmachine0_state <= 3'd0;
        bankmachine1_state <= 3'd0;
        bankmachine2_state <= 3'd0;
        bankmachine3_state <= 3'd0;
        bankmachine4_state <= 3'd0;
        bankmachine5_state <= 3'd0;
        bankmachine6_state <= 3'd0;
        bankmachine7_state <= 3'd0;
        multiplexer_state <= 4'd0;
        new_master_wdata_ready0 <= 1'd0;
        new_master_wdata_ready1 <= 1'd0;
        new_master_wdata_ready2 <= 1'd0;
        new_master_rdata_valid0 <= 1'd0;
        new_master_rdata_valid1 <= 1'd0;
        new_master_rdata_valid2 <= 1'd0;
        new_master_rdata_valid3 <= 1'd0;
        new_master_rdata_valid4 <= 1'd0;
        new_master_rdata_valid5 <= 1'd0;
        new_master_rdata_valid6 <= 1'd0;
        new_master_rdata_valid7 <= 1'd0;
        new_master_rdata_valid8 <= 1'd0;
        new_master_rdata_valid9 <= 1'd0;
        new_master_rdata_valid10 <= 1'd0;
        new_master_rdata_valid11 <= 1'd0;
        new_master_rdata_valid12 <= 1'd0;
        fullmemorywe_state <= 2'd0;
        litedramwishbone2native_state <= 2'd0;
        wishbone2csr_state <= 2'd0;
    end
    multiregimpl00 <= serial_rx;
    multiregimpl01 <= multiregimpl00;
    multiregimpl20 <= (~{btn_n4, btn_n3, btn_n2, btn_n1, btn_n0});
    multiregimpl21 <= multiregimpl20;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Instance DHCEN of DHCEN Module.
//------------------------------------------------------------------------------
DHCEN DHCEN(
	// Inputs.
	.CE     (crg_stop),
	.CLKIN  (sys2x_i_clk),

	// Outputs.
	.CLKOUT (sys2x_clk)
);

//------------------------------------------------------------------------------
// Instance CLKDIV of CLKDIV Module.
//------------------------------------------------------------------------------
CLKDIV #(
	// Parameters.
	.DIV_MODE ("2")
) CLKDIV (
	// Inputs.
	.CALIB  (1'd0),
	.HCLKIN (sys2x_clk),
	.RESETN ((~crg_reset0)),

	// Outputs.
	.CLKOUT (sys_clk)
);

//------------------------------------------------------------------------------
// Memory rom: 7099-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] rom[0:7098];
initial begin
	$readmemh("sipeed_tang_primer_20k_rom.init", rom);
end
reg [31:0] rom_dat0;
always @(posedge sys_clk) begin
	rom_dat0 <= rom[basesoc_basesoc_adr];
end
assign basesoc_basesoc_dat_r = rom_dat0;


//------------------------------------------------------------------------------
// Memory sram: 2048-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] sram[0:2047];
initial begin
	$readmemh("sipeed_tang_primer_20k_sram.init", sram);
end
reg [10:0] sram_adr0;
always @(posedge sys_clk) begin
	if (basesoc_ram_we[0])
		sram[basesoc_ram_adr][7:0] <= basesoc_ram_dat_w[7:0];
	if (basesoc_ram_we[1])
		sram[basesoc_ram_adr][15:8] <= basesoc_ram_dat_w[15:8];
	if (basesoc_ram_we[2])
		sram[basesoc_ram_adr][23:16] <= basesoc_ram_dat_w[23:16];
	if (basesoc_ram_we[3])
		sram[basesoc_ram_adr][31:24] <= basesoc_ram_dat_w[31:24];
	sram_adr0 <= basesoc_ram_adr;
end
assign basesoc_ram_dat_r = sram[sram_adr0];


//------------------------------------------------------------------------------
// Memory mem: 49-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:48];
initial begin
	$readmemh("sipeed_tang_primer_20k_mem.init", mem);
end
reg [5:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= csr_bankarray_adr;
end
assign csr_bankarray_dat_r = mem[mem_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_wrport_we)
		storage[basesoc_uart_tx_fifo_wrport_adr] <= basesoc_uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[basesoc_uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[basesoc_uart_tx_fifo_rdport_adr];
end
assign basesoc_uart_tx_fifo_wrport_dat_r = storage_dat0;
assign basesoc_uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_wrport_we)
		storage_1[basesoc_uart_rx_fifo_wrport_adr] <= basesoc_uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[basesoc_uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (basesoc_uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[basesoc_uart_rx_fifo_rdport_adr];
end
assign basesoc_uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign basesoc_uart_rx_fifo_rdport_dat_r = storage_1_dat1;


//------------------------------------------------------------------------------
// Instance DLL of DLL Module.
//------------------------------------------------------------------------------
DLL #(
	// Parameters.
	.SCAL_EN ("false")
) DLL (
	// Inputs.
	.CLKIN    (sys2x_clk),
	.RESET    (init_rst),
	.STOP     (gw2ddrphy_freeze),
	.UPDNCNTL ((~gw2ddrphy_update)),

	// Outputs.
	.LOCK     (gw2ddrphy_lock0),
	.STEP     (gw2ddrphy_delay1)
);

//------------------------------------------------------------------------------
// Instance OSER4 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4 (
	// Inputs.
	.D0    (1'd0),
	.D1    (1'd1),
	.D2    (1'd0),
	.D3    (1'd1),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f0),
	.Q1    (gw2ddrphy0)
);

//------------------------------------------------------------------------------
// Instance IODELAY of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f0),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy1),
	.DO    (gw2ddrphy_pad_clk)
);

//------------------------------------------------------------------------------
// Instance ELVDS_OBUF of ELVDS_OBUF Module.
//------------------------------------------------------------------------------
ELVDS_OBUF ELVDS_OBUF(
	// Inputs.
	.I  (gw2ddrphy_pad_clk),

	// Outputs.
	.O  (ddram_clk_p),
	.OB (ddram_clk_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_1 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_1 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_reset_n),
	.D1    (gw2ddrphy_dfi_p0_reset_n),
	.D2    (gw2ddrphy_dfi_p1_reset_n),
	.D3    (gw2ddrphy_dfi_p1_reset_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f1),
	.Q1    (gw2ddrphy2)
);

//------------------------------------------------------------------------------
// Instance IODELAY_1 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_1 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f1),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy3),
	.DO    (ddram_reset_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_2 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_2 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_cs_n),
	.D1    (gw2ddrphy_dfi_p0_cs_n),
	.D2    (gw2ddrphy_dfi_p1_cs_n),
	.D3    (gw2ddrphy_dfi_p1_cs_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f2),
	.Q1    (gw2ddrphy4)
);

//------------------------------------------------------------------------------
// Instance IODELAY_2 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_2 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f2),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy5),
	.DO    (ddram_cs_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_3 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_3 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[0]),
	.D1    (gw2ddrphy_dfi_p0_address[0]),
	.D2    (gw2ddrphy_dfi_p1_address[0]),
	.D3    (gw2ddrphy_dfi_p1_address[0]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f3),
	.Q1    (gw2ddrphy6)
);

//------------------------------------------------------------------------------
// Instance IODELAY_3 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_3 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f3),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy7),
	.DO    (ddram_a[0])
);

//------------------------------------------------------------------------------
// Instance OSER4_4 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_4 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[1]),
	.D1    (gw2ddrphy_dfi_p0_address[1]),
	.D2    (gw2ddrphy_dfi_p1_address[1]),
	.D3    (gw2ddrphy_dfi_p1_address[1]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f4),
	.Q1    (gw2ddrphy8)
);

//------------------------------------------------------------------------------
// Instance IODELAY_4 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_4 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f4),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy9),
	.DO    (ddram_a[1])
);

//------------------------------------------------------------------------------
// Instance OSER4_5 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_5 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[2]),
	.D1    (gw2ddrphy_dfi_p0_address[2]),
	.D2    (gw2ddrphy_dfi_p1_address[2]),
	.D3    (gw2ddrphy_dfi_p1_address[2]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f5),
	.Q1    (gw2ddrphy10)
);

//------------------------------------------------------------------------------
// Instance IODELAY_5 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_5 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f5),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy11),
	.DO    (ddram_a[2])
);

//------------------------------------------------------------------------------
// Instance OSER4_6 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_6 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[3]),
	.D1    (gw2ddrphy_dfi_p0_address[3]),
	.D2    (gw2ddrphy_dfi_p1_address[3]),
	.D3    (gw2ddrphy_dfi_p1_address[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f6),
	.Q1    (gw2ddrphy12)
);

//------------------------------------------------------------------------------
// Instance IODELAY_6 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_6 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f6),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy13),
	.DO    (ddram_a[3])
);

//------------------------------------------------------------------------------
// Instance OSER4_7 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_7 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[4]),
	.D1    (gw2ddrphy_dfi_p0_address[4]),
	.D2    (gw2ddrphy_dfi_p1_address[4]),
	.D3    (gw2ddrphy_dfi_p1_address[4]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f7),
	.Q1    (gw2ddrphy14)
);

//------------------------------------------------------------------------------
// Instance IODELAY_7 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_7 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f7),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy15),
	.DO    (ddram_a[4])
);

//------------------------------------------------------------------------------
// Instance OSER4_8 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_8 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[5]),
	.D1    (gw2ddrphy_dfi_p0_address[5]),
	.D2    (gw2ddrphy_dfi_p1_address[5]),
	.D3    (gw2ddrphy_dfi_p1_address[5]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f8),
	.Q1    (gw2ddrphy16)
);

//------------------------------------------------------------------------------
// Instance IODELAY_8 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_8 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f8),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy17),
	.DO    (ddram_a[5])
);

//------------------------------------------------------------------------------
// Instance OSER4_9 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_9 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[6]),
	.D1    (gw2ddrphy_dfi_p0_address[6]),
	.D2    (gw2ddrphy_dfi_p1_address[6]),
	.D3    (gw2ddrphy_dfi_p1_address[6]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f9),
	.Q1    (gw2ddrphy18)
);

//------------------------------------------------------------------------------
// Instance IODELAY_9 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_9 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f9),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy19),
	.DO    (ddram_a[6])
);

//------------------------------------------------------------------------------
// Instance OSER4_10 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_10 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[7]),
	.D1    (gw2ddrphy_dfi_p0_address[7]),
	.D2    (gw2ddrphy_dfi_p1_address[7]),
	.D3    (gw2ddrphy_dfi_p1_address[7]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f10),
	.Q1    (gw2ddrphy20)
);

//------------------------------------------------------------------------------
// Instance IODELAY_10 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_10 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f10),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy21),
	.DO    (ddram_a[7])
);

//------------------------------------------------------------------------------
// Instance OSER4_11 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_11 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[8]),
	.D1    (gw2ddrphy_dfi_p0_address[8]),
	.D2    (gw2ddrphy_dfi_p1_address[8]),
	.D3    (gw2ddrphy_dfi_p1_address[8]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f11),
	.Q1    (gw2ddrphy22)
);

//------------------------------------------------------------------------------
// Instance IODELAY_11 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_11 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f11),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy23),
	.DO    (ddram_a[8])
);

//------------------------------------------------------------------------------
// Instance OSER4_12 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_12 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[9]),
	.D1    (gw2ddrphy_dfi_p0_address[9]),
	.D2    (gw2ddrphy_dfi_p1_address[9]),
	.D3    (gw2ddrphy_dfi_p1_address[9]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f12),
	.Q1    (gw2ddrphy24)
);

//------------------------------------------------------------------------------
// Instance IODELAY_12 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_12 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f12),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy25),
	.DO    (ddram_a[9])
);

//------------------------------------------------------------------------------
// Instance OSER4_13 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_13 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[10]),
	.D1    (gw2ddrphy_dfi_p0_address[10]),
	.D2    (gw2ddrphy_dfi_p1_address[10]),
	.D3    (gw2ddrphy_dfi_p1_address[10]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f13),
	.Q1    (gw2ddrphy26)
);

//------------------------------------------------------------------------------
// Instance IODELAY_13 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_13 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f13),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy27),
	.DO    (ddram_a[10])
);

//------------------------------------------------------------------------------
// Instance OSER4_14 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_14 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[11]),
	.D1    (gw2ddrphy_dfi_p0_address[11]),
	.D2    (gw2ddrphy_dfi_p1_address[11]),
	.D3    (gw2ddrphy_dfi_p1_address[11]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f14),
	.Q1    (gw2ddrphy28)
);

//------------------------------------------------------------------------------
// Instance IODELAY_14 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_14 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f14),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy29),
	.DO    (ddram_a[11])
);

//------------------------------------------------------------------------------
// Instance OSER4_15 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_15 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[12]),
	.D1    (gw2ddrphy_dfi_p0_address[12]),
	.D2    (gw2ddrphy_dfi_p1_address[12]),
	.D3    (gw2ddrphy_dfi_p1_address[12]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f15),
	.Q1    (gw2ddrphy30)
);

//------------------------------------------------------------------------------
// Instance IODELAY_15 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_15 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f15),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy31),
	.DO    (ddram_a[12])
);

//------------------------------------------------------------------------------
// Instance OSER4_16 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_16 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_address[13]),
	.D1    (gw2ddrphy_dfi_p0_address[13]),
	.D2    (gw2ddrphy_dfi_p1_address[13]),
	.D3    (gw2ddrphy_dfi_p1_address[13]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f16),
	.Q1    (gw2ddrphy32)
);

//------------------------------------------------------------------------------
// Instance IODELAY_16 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_16 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f16),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy33),
	.DO    (ddram_a[13])
);

//------------------------------------------------------------------------------
// Instance OSER4_17 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_17 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_bank[0]),
	.D1    (gw2ddrphy_dfi_p0_bank[0]),
	.D2    (gw2ddrphy_dfi_p1_bank[0]),
	.D3    (gw2ddrphy_dfi_p1_bank[0]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f17),
	.Q1    (gw2ddrphy34)
);

//------------------------------------------------------------------------------
// Instance IODELAY_17 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_17 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f17),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy35),
	.DO    (ddram_ba[0])
);

//------------------------------------------------------------------------------
// Instance OSER4_18 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_18 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_bank[1]),
	.D1    (gw2ddrphy_dfi_p0_bank[1]),
	.D2    (gw2ddrphy_dfi_p1_bank[1]),
	.D3    (gw2ddrphy_dfi_p1_bank[1]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f18),
	.Q1    (gw2ddrphy36)
);

//------------------------------------------------------------------------------
// Instance IODELAY_18 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_18 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f18),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy37),
	.DO    (ddram_ba[1])
);

//------------------------------------------------------------------------------
// Instance OSER4_19 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_19 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_bank[2]),
	.D1    (gw2ddrphy_dfi_p0_bank[2]),
	.D2    (gw2ddrphy_dfi_p1_bank[2]),
	.D3    (gw2ddrphy_dfi_p1_bank[2]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f19),
	.Q1    (gw2ddrphy38)
);

//------------------------------------------------------------------------------
// Instance IODELAY_19 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_19 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f19),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy39),
	.DO    (ddram_ba[2])
);

//------------------------------------------------------------------------------
// Instance OSER4_20 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_20 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_ras_n),
	.D1    (gw2ddrphy_dfi_p0_ras_n),
	.D2    (gw2ddrphy_dfi_p1_ras_n),
	.D3    (gw2ddrphy_dfi_p1_ras_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f20),
	.Q1    (gw2ddrphy40)
);

//------------------------------------------------------------------------------
// Instance IODELAY_20 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_20 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f20),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy41),
	.DO    (ddram_ras_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_21 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_21 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_cas_n),
	.D1    (gw2ddrphy_dfi_p0_cas_n),
	.D2    (gw2ddrphy_dfi_p1_cas_n),
	.D3    (gw2ddrphy_dfi_p1_cas_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f21),
	.Q1    (gw2ddrphy42)
);

//------------------------------------------------------------------------------
// Instance IODELAY_21 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_21 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f21),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy43),
	.DO    (ddram_cas_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_22 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_22 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_we_n),
	.D1    (gw2ddrphy_dfi_p0_we_n),
	.D2    (gw2ddrphy_dfi_p1_we_n),
	.D3    (gw2ddrphy_dfi_p1_we_n),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f22),
	.Q1    (gw2ddrphy44)
);

//------------------------------------------------------------------------------
// Instance IODELAY_22 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_22 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f22),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy45),
	.DO    (ddram_we_n)
);

//------------------------------------------------------------------------------
// Instance OSER4_23 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_23 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_cke),
	.D1    (gw2ddrphy_dfi_p0_cke),
	.D2    (gw2ddrphy_dfi_p1_cke),
	.D3    (gw2ddrphy_dfi_p1_cke),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f23),
	.Q1    (gw2ddrphy46)
);

//------------------------------------------------------------------------------
// Instance IODELAY_23 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_23 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f23),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy47),
	.DO    (ddram_cke)
);

//------------------------------------------------------------------------------
// Instance OSER4_24 of OSER4 Module.
//------------------------------------------------------------------------------
OSER4 #(
	// Parameters.
	.TXCLK_POL (1'd0)
) OSER4_24 (
	// Inputs.
	.D0    (gw2ddrphy_dfi_p0_odt),
	.D1    (gw2ddrphy_dfi_p0_odt),
	.D2    (gw2ddrphy_dfi_p1_odt),
	.D3    (gw2ddrphy_dfi_p1_odt),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (gw2ddrphy_pad_oddrx2f24),
	.Q1    (gw2ddrphy48)
);

//------------------------------------------------------------------------------
// Instance IODELAY_24 of IODELAY Module.
//------------------------------------------------------------------------------
IODELAY #(
	// Parameters.
	.C_STATIC_DLY (1'd0)
) IODELAY_24 (
	// Inputs.
	.DI    (gw2ddrphy_pad_oddrx2f24),
	.SDTAP (1'd0),
	.SETN  (1'd0),
	.VALUE (1'd0),

	// Outputs.
	.DF    (gw2ddrphy49),
	.DO    (ddram_odt)
);

//------------------------------------------------------------------------------
// Instance DQS of DQS Module.
//------------------------------------------------------------------------------
DQS #(
	// Parameters.
	.DQS_MODE ("X2_DDR3")
) DQS (
	// Inputs.
	.DLLSTEP (gw2ddrphy_delay0),
	.DQSIN   (gw2ddrphy_dqs_i0),
	.FCLK    (sys2x_clk),
	.HOLD    ((gw2ddrphy_pause0 | gw2ddrphy_dly_sel_storage[0])),
	.PCLK    (sys_clk),
	.RCLKSEL (gw2ddrphy_rdly0),
	.RDIR    (1'd1),
	.READ    ({4{gw2ddrphy_dqs_re}}),
	.RESET   (sys_rst),
	.RLOADN  (1'd0),
	.RMOVE   (1'd0),
	.WDIR    (1'd1),
	.WLOADN  (1'd0),
	.WMOVE   (1'd0),
	.WSTEP   (8'd0),

	// Outputs.
	.DQSR90  (gw2ddrphy_dqsr900),
	.DQSW0   (gw2ddrphy_dqsw0),
	.DQSW270 (gw2ddrphy_dqsw2700),
	.RBURST  (gw2ddrphy_burstdet0),
	.RFLAG   (gw2ddrphy50),
	.RPOINT  (gw2ddrphy_rdpntr0),
	.RVALID  (gw2ddrphy_datavalid[0]),
	.WFLAG   (gw2ddrphy51),
	.WPOINT  (gw2ddrphy_wrpntr0)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW"),
	.TXCLK_POL   (1'd1)
) OSER4_MEM (
	// Inputs.
	.D0    (1'd0),
	.D1    (1'd1),
	.D2    (1'd0),
	.D3    (1'd1),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw0),
	.TX0   ((~(gw2ddrphy_dqs_oe | gw2ddrphy_dqs_postamble))),
	.TX1   ((~(gw2ddrphy_dqs_oe | gw2ddrphy_dqs_preamble))),

	// Outputs.
	.Q0    (gw2ddrphy_dqs_o0),
	.Q1    (gw2ddrphy_dqs_o_oen0)
);

//------------------------------------------------------------------------------
// Instance ELVDS_IOBUF of ELVDS_IOBUF Module.
//------------------------------------------------------------------------------
ELVDS_IOBUF ELVDS_IOBUF(
	// Inputs.
	.I   (gw2ddrphy_dqs_o0),
	.OEN (gw2ddrphy_dqs_o_oen0),

	// Outputs.
	.O   (gw2ddrphy_dqs_i0),

	// InOuts.
	.IO  (ddram_dqs_p[0]),
	.IOB (ddram_dqs_n[0])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_1 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_1 (
	// Inputs.
	.D0    (gw2ddrphy_dm_o_data_muxed0[0]),
	.D1    (gw2ddrphy_dm_o_data_muxed0[1]),
	.D2    (gw2ddrphy_dm_o_data_muxed0[2]),
	.D3    (gw2ddrphy_dm_o_data_muxed0[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2700),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (ddram_dm[0]),
	.Q1    (gw2ddrphy52)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_2 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_2 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed0[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed0[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed0[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed0[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2700),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o0),
	.Q1    (gw2ddrphy_dq_o_oen0)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i0),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip0_i[0]),
	.Q1    (gw2ddrphy_bitslip0_i[1]),
	.Q2    (gw2ddrphy_bitslip0_i[2]),
	.Q3    (gw2ddrphy_bitslip0_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF(
	// Inputs.
	.I   (gw2ddrphy_dq_o0),
	.OEN (gw2ddrphy_dq_o_oen0),

	// Outputs.
	.O   (gw2ddrphy_dq_i0),

	// InOuts.
	.IO  (ddram_dq[0])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_3 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_3 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed1[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed1[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed1[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed1[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2700),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o1),
	.Q1    (gw2ddrphy_dq_o_oen1)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_1 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_1(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i1),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip1_i[0]),
	.Q1    (gw2ddrphy_bitslip1_i[1]),
	.Q2    (gw2ddrphy_bitslip1_i[2]),
	.Q3    (gw2ddrphy_bitslip1_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_1 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_1(
	// Inputs.
	.I   (gw2ddrphy_dq_o1),
	.OEN (gw2ddrphy_dq_o_oen1),

	// Outputs.
	.O   (gw2ddrphy_dq_i1),

	// InOuts.
	.IO  (ddram_dq[1])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_4 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_4 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed2[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed2[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed2[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed2[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2700),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o2),
	.Q1    (gw2ddrphy_dq_o_oen2)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_2 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_2(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i2),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip2_i[0]),
	.Q1    (gw2ddrphy_bitslip2_i[1]),
	.Q2    (gw2ddrphy_bitslip2_i[2]),
	.Q3    (gw2ddrphy_bitslip2_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_2 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_2(
	// Inputs.
	.I   (gw2ddrphy_dq_o2),
	.OEN (gw2ddrphy_dq_o_oen2),

	// Outputs.
	.O   (gw2ddrphy_dq_i2),

	// InOuts.
	.IO  (ddram_dq[2])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_5 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_5 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed3[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed3[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed3[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed3[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2700),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o3),
	.Q1    (gw2ddrphy_dq_o_oen3)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_3 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_3(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i3),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip3_i[0]),
	.Q1    (gw2ddrphy_bitslip3_i[1]),
	.Q2    (gw2ddrphy_bitslip3_i[2]),
	.Q3    (gw2ddrphy_bitslip3_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_3 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_3(
	// Inputs.
	.I   (gw2ddrphy_dq_o3),
	.OEN (gw2ddrphy_dq_o_oen3),

	// Outputs.
	.O   (gw2ddrphy_dq_i3),

	// InOuts.
	.IO  (ddram_dq[3])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_6 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_6 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed4[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed4[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed4[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed4[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2700),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o4),
	.Q1    (gw2ddrphy_dq_o_oen4)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_4 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_4(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i4),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip4_i[0]),
	.Q1    (gw2ddrphy_bitslip4_i[1]),
	.Q2    (gw2ddrphy_bitslip4_i[2]),
	.Q3    (gw2ddrphy_bitslip4_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_4 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_4(
	// Inputs.
	.I   (gw2ddrphy_dq_o4),
	.OEN (gw2ddrphy_dq_o_oen4),

	// Outputs.
	.O   (gw2ddrphy_dq_i4),

	// InOuts.
	.IO  (ddram_dq[4])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_7 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_7 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed5[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed5[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed5[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed5[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2700),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o5),
	.Q1    (gw2ddrphy_dq_o_oen5)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_5 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_5(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i5),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip5_i[0]),
	.Q1    (gw2ddrphy_bitslip5_i[1]),
	.Q2    (gw2ddrphy_bitslip5_i[2]),
	.Q3    (gw2ddrphy_bitslip5_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_5 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_5(
	// Inputs.
	.I   (gw2ddrphy_dq_o5),
	.OEN (gw2ddrphy_dq_o_oen5),

	// Outputs.
	.O   (gw2ddrphy_dq_i5),

	// InOuts.
	.IO  (ddram_dq[5])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_8 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_8 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed6[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed6[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed6[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed6[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2700),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o6),
	.Q1    (gw2ddrphy_dq_o_oen6)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_6 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_6(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i6),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip6_i[0]),
	.Q1    (gw2ddrphy_bitslip6_i[1]),
	.Q2    (gw2ddrphy_bitslip6_i[2]),
	.Q3    (gw2ddrphy_bitslip6_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_6 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_6(
	// Inputs.
	.I   (gw2ddrphy_dq_o6),
	.OEN (gw2ddrphy_dq_o_oen6),

	// Outputs.
	.O   (gw2ddrphy_dq_i6),

	// InOuts.
	.IO  (ddram_dq[6])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_9 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_9 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed7[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed7[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed7[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed7[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2700),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o7),
	.Q1    (gw2ddrphy_dq_o_oen7)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_7 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_7(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i7),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr900),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr0),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr0),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip7_i[0]),
	.Q1    (gw2ddrphy_bitslip7_i[1]),
	.Q2    (gw2ddrphy_bitslip7_i[2]),
	.Q3    (gw2ddrphy_bitslip7_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_7 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_7(
	// Inputs.
	.I   (gw2ddrphy_dq_o7),
	.OEN (gw2ddrphy_dq_o_oen7),

	// Outputs.
	.O   (gw2ddrphy_dq_i7),

	// InOuts.
	.IO  (ddram_dq[7])
);

//------------------------------------------------------------------------------
// Instance DQS_1 of DQS Module.
//------------------------------------------------------------------------------
DQS #(
	// Parameters.
	.DQS_MODE ("X2_DDR3")
) DQS_1 (
	// Inputs.
	.DLLSTEP (gw2ddrphy_delay0),
	.DQSIN   (gw2ddrphy_dqs_i1),
	.FCLK    (sys2x_clk),
	.HOLD    ((gw2ddrphy_pause0 | gw2ddrphy_dly_sel_storage[1])),
	.PCLK    (sys_clk),
	.RCLKSEL (gw2ddrphy_rdly1),
	.RDIR    (1'd1),
	.READ    ({4{gw2ddrphy_dqs_re}}),
	.RESET   (sys_rst),
	.RLOADN  (1'd0),
	.RMOVE   (1'd0),
	.WDIR    (1'd1),
	.WLOADN  (1'd0),
	.WMOVE   (1'd0),
	.WSTEP   (8'd0),

	// Outputs.
	.DQSR90  (gw2ddrphy_dqsr901),
	.DQSW0   (gw2ddrphy_dqsw1),
	.DQSW270 (gw2ddrphy_dqsw2701),
	.RBURST  (gw2ddrphy_burstdet1),
	.RFLAG   (gw2ddrphy53),
	.RPOINT  (gw2ddrphy_rdpntr1),
	.RVALID  (gw2ddrphy_datavalid[1]),
	.WFLAG   (gw2ddrphy54),
	.WPOINT  (gw2ddrphy_wrpntr1)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_10 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW"),
	.TXCLK_POL   (1'd1)
) OSER4_MEM_10 (
	// Inputs.
	.D0    (1'd0),
	.D1    (1'd1),
	.D2    (1'd0),
	.D3    (1'd1),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw1),
	.TX0   ((~(gw2ddrphy_dqs_oe | gw2ddrphy_dqs_postamble))),
	.TX1   ((~(gw2ddrphy_dqs_oe | gw2ddrphy_dqs_preamble))),

	// Outputs.
	.Q0    (gw2ddrphy_dqs_o1),
	.Q1    (gw2ddrphy_dqs_o_oen1)
);

//------------------------------------------------------------------------------
// Instance ELVDS_IOBUF_1 of ELVDS_IOBUF Module.
//------------------------------------------------------------------------------
ELVDS_IOBUF ELVDS_IOBUF_1(
	// Inputs.
	.I   (gw2ddrphy_dqs_o1),
	.OEN (gw2ddrphy_dqs_o_oen1),

	// Outputs.
	.O   (gw2ddrphy_dqs_i1),

	// InOuts.
	.IO  (ddram_dqs_p[1]),
	.IOB (ddram_dqs_n[1])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_11 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_11 (
	// Inputs.
	.D0    (gw2ddrphy_dm_o_data_muxed1[0]),
	.D1    (gw2ddrphy_dm_o_data_muxed1[1]),
	.D2    (gw2ddrphy_dm_o_data_muxed1[2]),
	.D3    (gw2ddrphy_dm_o_data_muxed1[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2701),
	.TX0   (1'd0),
	.TX1   (1'd0),

	// Outputs.
	.Q0    (ddram_dm[1]),
	.Q1    (gw2ddrphy55)
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_12 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_12 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed8[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed8[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed8[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed8[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2701),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o8),
	.Q1    (gw2ddrphy_dq_o_oen8)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_8 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_8(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i8),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip8_i[0]),
	.Q1    (gw2ddrphy_bitslip8_i[1]),
	.Q2    (gw2ddrphy_bitslip8_i[2]),
	.Q3    (gw2ddrphy_bitslip8_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_8 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_8(
	// Inputs.
	.I   (gw2ddrphy_dq_o8),
	.OEN (gw2ddrphy_dq_o_oen8),

	// Outputs.
	.O   (gw2ddrphy_dq_i8),

	// InOuts.
	.IO  (ddram_dq[8])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_13 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_13 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed9[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed9[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed9[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed9[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2701),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o9),
	.Q1    (gw2ddrphy_dq_o_oen9)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_9 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_9(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i9),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip9_i[0]),
	.Q1    (gw2ddrphy_bitslip9_i[1]),
	.Q2    (gw2ddrphy_bitslip9_i[2]),
	.Q3    (gw2ddrphy_bitslip9_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_9 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_9(
	// Inputs.
	.I   (gw2ddrphy_dq_o9),
	.OEN (gw2ddrphy_dq_o_oen9),

	// Outputs.
	.O   (gw2ddrphy_dq_i9),

	// InOuts.
	.IO  (ddram_dq[9])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_14 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_14 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed10[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed10[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed10[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed10[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2701),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o10),
	.Q1    (gw2ddrphy_dq_o_oen10)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_10 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_10(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i10),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip10_i[0]),
	.Q1    (gw2ddrphy_bitslip10_i[1]),
	.Q2    (gw2ddrphy_bitslip10_i[2]),
	.Q3    (gw2ddrphy_bitslip10_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_10 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_10(
	// Inputs.
	.I   (gw2ddrphy_dq_o10),
	.OEN (gw2ddrphy_dq_o_oen10),

	// Outputs.
	.O   (gw2ddrphy_dq_i10),

	// InOuts.
	.IO  (ddram_dq[10])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_15 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_15 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed11[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed11[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed11[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed11[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2701),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o11),
	.Q1    (gw2ddrphy_dq_o_oen11)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_11 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_11(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i11),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip11_i[0]),
	.Q1    (gw2ddrphy_bitslip11_i[1]),
	.Q2    (gw2ddrphy_bitslip11_i[2]),
	.Q3    (gw2ddrphy_bitslip11_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_11 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_11(
	// Inputs.
	.I   (gw2ddrphy_dq_o11),
	.OEN (gw2ddrphy_dq_o_oen11),

	// Outputs.
	.O   (gw2ddrphy_dq_i11),

	// InOuts.
	.IO  (ddram_dq[11])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_16 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_16 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed12[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed12[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed12[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed12[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2701),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o12),
	.Q1    (gw2ddrphy_dq_o_oen12)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_12 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_12(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i12),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip12_i[0]),
	.Q1    (gw2ddrphy_bitslip12_i[1]),
	.Q2    (gw2ddrphy_bitslip12_i[2]),
	.Q3    (gw2ddrphy_bitslip12_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_12 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_12(
	// Inputs.
	.I   (gw2ddrphy_dq_o12),
	.OEN (gw2ddrphy_dq_o_oen12),

	// Outputs.
	.O   (gw2ddrphy_dq_i12),

	// InOuts.
	.IO  (ddram_dq[12])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_17 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_17 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed13[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed13[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed13[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed13[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2701),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o13),
	.Q1    (gw2ddrphy_dq_o_oen13)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_13 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_13(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i13),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip13_i[0]),
	.Q1    (gw2ddrphy_bitslip13_i[1]),
	.Q2    (gw2ddrphy_bitslip13_i[2]),
	.Q3    (gw2ddrphy_bitslip13_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_13 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_13(
	// Inputs.
	.I   (gw2ddrphy_dq_o13),
	.OEN (gw2ddrphy_dq_o_oen13),

	// Outputs.
	.O   (gw2ddrphy_dq_i13),

	// InOuts.
	.IO  (ddram_dq[13])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_18 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_18 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed14[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed14[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed14[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed14[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2701),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o14),
	.Q1    (gw2ddrphy_dq_o_oen14)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_14 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_14(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i14),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip14_i[0]),
	.Q1    (gw2ddrphy_bitslip14_i[1]),
	.Q2    (gw2ddrphy_bitslip14_i[2]),
	.Q3    (gw2ddrphy_bitslip14_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_14 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_14(
	// Inputs.
	.I   (gw2ddrphy_dq_o14),
	.OEN (gw2ddrphy_dq_o_oen14),

	// Outputs.
	.O   (gw2ddrphy_dq_i14),

	// InOuts.
	.IO  (ddram_dq[14])
);

//------------------------------------------------------------------------------
// Instance OSER4_MEM_19 of OSER4_MEM Module.
//------------------------------------------------------------------------------
OSER4_MEM #(
	// Parameters.
	.TCLK_SOURCE ("DQSW270"),
	.TXCLK_POL   (1'd0)
) OSER4_MEM_19 (
	// Inputs.
	.D0    (gw2ddrphy_dq_o_data_muxed15[0]),
	.D1    (gw2ddrphy_dq_o_data_muxed15[1]),
	.D2    (gw2ddrphy_dq_o_data_muxed15[2]),
	.D3    (gw2ddrphy_dq_o_data_muxed15[3]),
	.FCLK  (sys2x_clk),
	.PCLK  (sys_clk),
	.RESET (sys_rst),
	.TCLK  (gw2ddrphy_dqsw2701),
	.TX0   ((~gw2ddrphy_dq_oe)),
	.TX1   ((~gw2ddrphy_dq_oe)),

	// Outputs.
	.Q0    (gw2ddrphy_dq_o15),
	.Q1    (gw2ddrphy_dq_o_oen15)
);

//------------------------------------------------------------------------------
// Instance IDES4_MEM_15 of IDES4_MEM Module.
//------------------------------------------------------------------------------
IDES4_MEM IDES4_MEM_15(
	// Inputs.
	.CALIB (1'd0),
	.D     (gw2ddrphy_dq_i15),
	.FCLK  (sys2x_clk),
	.ICLK  (gw2ddrphy_dqsr901),
	.PCLK  (sys_clk),
	.RADDR (gw2ddrphy_rdpntr1),
	.RESET (sys_rst),
	.WADDR (gw2ddrphy_wrpntr1),

	// Outputs.
	.Q0    (gw2ddrphy_bitslip15_i[0]),
	.Q1    (gw2ddrphy_bitslip15_i[1]),
	.Q2    (gw2ddrphy_bitslip15_i[2]),
	.Q3    (gw2ddrphy_bitslip15_i[3])
);

//------------------------------------------------------------------------------
// Instance IOBUF_15 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_15(
	// Inputs.
	.I   (gw2ddrphy_dq_o15),
	.OEN (gw2ddrphy_dq_o_oen15),

	// Outputs.
	.O   (gw2ddrphy_dq_i15),

	// InOuts.
	.IO  (ddram_dq[15])
);

//------------------------------------------------------------------------------
// Memory storage_2: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_2[0:7];
reg [22:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine0_wrport_we)
		storage_2[basesoc_sdram_bankmachine0_wrport_adr] <= basesoc_sdram_bankmachine0_wrport_dat_w;
	storage_2_dat0 <= storage_2[basesoc_sdram_bankmachine0_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine0_wrport_dat_r = storage_2_dat0;
assign basesoc_sdram_bankmachine0_rdport_dat_r = storage_2[basesoc_sdram_bankmachine0_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_3[0:7];
reg [22:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine1_wrport_we)
		storage_3[basesoc_sdram_bankmachine1_wrport_adr] <= basesoc_sdram_bankmachine1_wrport_dat_w;
	storage_3_dat0 <= storage_3[basesoc_sdram_bankmachine1_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine1_wrport_dat_r = storage_3_dat0;
assign basesoc_sdram_bankmachine1_rdport_dat_r = storage_3[basesoc_sdram_bankmachine1_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_4[0:7];
reg [22:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine2_wrport_we)
		storage_4[basesoc_sdram_bankmachine2_wrport_adr] <= basesoc_sdram_bankmachine2_wrport_dat_w;
	storage_4_dat0 <= storage_4[basesoc_sdram_bankmachine2_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine2_wrport_dat_r = storage_4_dat0;
assign basesoc_sdram_bankmachine2_rdport_dat_r = storage_4[basesoc_sdram_bankmachine2_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_5[0:7];
reg [22:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine3_wrport_we)
		storage_5[basesoc_sdram_bankmachine3_wrport_adr] <= basesoc_sdram_bankmachine3_wrport_dat_w;
	storage_5_dat0 <= storage_5[basesoc_sdram_bankmachine3_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine3_wrport_dat_r = storage_5_dat0;
assign basesoc_sdram_bankmachine3_rdport_dat_r = storage_5[basesoc_sdram_bankmachine3_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_6: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_6[0:7];
reg [22:0] storage_6_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine4_wrport_we)
		storage_6[basesoc_sdram_bankmachine4_wrport_adr] <= basesoc_sdram_bankmachine4_wrport_dat_w;
	storage_6_dat0 <= storage_6[basesoc_sdram_bankmachine4_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine4_wrport_dat_r = storage_6_dat0;
assign basesoc_sdram_bankmachine4_rdport_dat_r = storage_6[basesoc_sdram_bankmachine4_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_7: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_7[0:7];
reg [22:0] storage_7_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine5_wrport_we)
		storage_7[basesoc_sdram_bankmachine5_wrport_adr] <= basesoc_sdram_bankmachine5_wrport_dat_w;
	storage_7_dat0 <= storage_7[basesoc_sdram_bankmachine5_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine5_wrport_dat_r = storage_7_dat0;
assign basesoc_sdram_bankmachine5_rdport_dat_r = storage_7[basesoc_sdram_bankmachine5_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_8: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_8[0:7];
reg [22:0] storage_8_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine6_wrport_we)
		storage_8[basesoc_sdram_bankmachine6_wrport_adr] <= basesoc_sdram_bankmachine6_wrport_dat_w;
	storage_8_dat0 <= storage_8[basesoc_sdram_bankmachine6_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine6_wrport_dat_r = storage_8_dat0;
assign basesoc_sdram_bankmachine6_rdport_dat_r = storage_8[basesoc_sdram_bankmachine6_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_9: 8-words x 23-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 23 
// Port 1 | Read: Async | Write: ---- | 
reg [22:0] storage_9[0:7];
reg [22:0] storage_9_dat0;
always @(posedge sys_clk) begin
	if (basesoc_sdram_bankmachine7_wrport_we)
		storage_9[basesoc_sdram_bankmachine7_wrport_adr] <= basesoc_sdram_bankmachine7_wrport_dat_w;
	storage_9_dat0 <= storage_9[basesoc_sdram_bankmachine7_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign basesoc_sdram_bankmachine7_wrport_dat_r = storage_9_dat0;
assign basesoc_sdram_bankmachine7_rdport_dat_r = storage_9[basesoc_sdram_bankmachine7_rdport_adr];


//------------------------------------------------------------------------------
// Memory tag_mem: 512-words x 22-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 22 
reg [21:0] tag_mem[0:511];
reg [8:0] tag_mem_adr0;
always @(posedge sys_clk) begin
	if (basesoc_tag_port_we)
		tag_mem[basesoc_tag_port_adr] <= basesoc_tag_port_dat_w;
	tag_mem_adr0 <= basesoc_tag_port_adr;
end
assign basesoc_tag_port_dat_r = tag_mem[tag_mem_adr0];


//------------------------------------------------------------------------------
// Instance rPLL of rPLL Module.
//------------------------------------------------------------------------------
rPLL #(
	// Parameters.
	.CLKFB_SEL        ("internal"),
	.CLKOUTD3_SRC     ("CLKOUT"),
	.CLKOUTD_BYPASS   ("false"),
	.CLKOUTD_SRC      ("CLKOUT"),
	.CLKOUTP_BYPASS   ("false"),
	.CLKOUTP_DLY_STEP (1'd0),
	.CLKOUTP_FT_DIR   (1'd1),
	.CLKOUT_BYPASS    ("false"),
	.CLKOUT_DLY_STEP  (1'd0),
	.CLKOUT_FT_DIR    (1'd1),
	.DEVICE           ("GW2A-18C"),
	.DUTYDA_SEL       ("1000"),
	.DYN_DA_EN        ("false"),
	.DYN_FBDIV_SEL    ("false"),
	.DYN_IDIV_SEL     ("false"),
	.DYN_ODIV_SEL     ("false"),
	.DYN_SDIV_SEL     (2'd2),
	.FBDIV_SEL        (5'd31),
	.FCLKIN           ("27.0"),
	.IDIV_SEL         (4'd8),
	.ODIV_SEL         (4'd8),
	.PSDA_SEL         ("0000")
) rPLL (
	// Inputs.
	.CLKFB    (1'd0),
	.CLKIN    (crg_clkin),
	.DUTYDA   (4'd0),
	.FBDSEL   (6'd0),
	.FDLY     (4'd15),
	.IDSEL    (6'd0),
	.ODSEL    (6'd0),
	.PSDA     (4'd0),
	.RESET    (crg_reset1),
	.RESET_P  (1'd0),

	// Outputs.
	.CLKOUT   (crg_clkout),
	.CLKOUTD  (gw2apll1),
	.CLKOUTD3 (gw2apll2),
	.CLKOUTP  (gw2apll0),
	.LOCK     (crg_locked)
);

//------------------------------------------------------------------------------
// Instance VexRiscv of VexRiscv Module.
//------------------------------------------------------------------------------
VexRiscv VexRiscv(
	// Inputs.
	.clk                    (sys_clk),
	.dBusWishbone_ACK       (basesoc_dbus_ack),
	.dBusWishbone_DAT_MISO  (basesoc_dbus_dat_r),
	.dBusWishbone_ERR       (basesoc_dbus_err),
	.externalInterruptArray (basesoc_interrupt),
	.externalResetVector    (basesoc_vexriscv),
	.iBusWishbone_ACK       (basesoc_ibus_ack),
	.iBusWishbone_DAT_MISO  (basesoc_ibus_dat_r),
	.iBusWishbone_ERR       (basesoc_ibus_err),
	.reset                  ((sys_rst | basesoc_reset)),
	.softwareInterrupt      (1'd0),
	.timerInterrupt         (1'd0),

	// Outputs.
	.dBusWishbone_ADR       (basesoc_dbus_adr),
	.dBusWishbone_BTE       (basesoc_dbus_bte),
	.dBusWishbone_CTI       (basesoc_dbus_cti),
	.dBusWishbone_CYC       (basesoc_dbus_cyc),
	.dBusWishbone_DAT_MOSI  (basesoc_dbus_dat_w),
	.dBusWishbone_SEL       (basesoc_dbus_sel),
	.dBusWishbone_STB       (basesoc_dbus_stb),
	.dBusWishbone_WE        (basesoc_dbus_we),
	.iBusWishbone_ADR       (basesoc_ibus_adr),
	.iBusWishbone_BTE       (basesoc_ibus_bte),
	.iBusWishbone_CTI       (basesoc_ibus_cti),
	.iBusWishbone_CYC       (basesoc_ibus_cyc),
	.iBusWishbone_DAT_MOSI  (basesoc_ibus_dat_w),
	.iBusWishbone_SEL       (basesoc_ibus_sel),
	.iBusWishbone_STB       (basesoc_ibus_stb),
	.iBusWishbone_WE        (basesoc_ibus_we)
);

//------------------------------------------------------------------------------
// Memory data_mem_grain0: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain0[0:511];
reg [8:0] data_mem_grain0_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[0])
		data_mem_grain0[basesoc_data_port_adr] <= basesoc_data_port_dat_w[7:0];
	data_mem_grain0_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[7:0] = data_mem_grain0[data_mem_grain0_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain1: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain1[0:511];
reg [8:0] data_mem_grain1_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[1])
		data_mem_grain1[basesoc_data_port_adr] <= basesoc_data_port_dat_w[15:8];
	data_mem_grain1_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[15:8] = data_mem_grain1[data_mem_grain1_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain2: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain2[0:511];
reg [8:0] data_mem_grain2_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[2])
		data_mem_grain2[basesoc_data_port_adr] <= basesoc_data_port_dat_w[23:16];
	data_mem_grain2_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[23:16] = data_mem_grain2[data_mem_grain2_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain3: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain3[0:511];
reg [8:0] data_mem_grain3_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[3])
		data_mem_grain3[basesoc_data_port_adr] <= basesoc_data_port_dat_w[31:24];
	data_mem_grain3_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[31:24] = data_mem_grain3[data_mem_grain3_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain4: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain4[0:511];
reg [8:0] data_mem_grain4_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[4])
		data_mem_grain4[basesoc_data_port_adr] <= basesoc_data_port_dat_w[39:32];
	data_mem_grain4_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[39:32] = data_mem_grain4[data_mem_grain4_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain5: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain5[0:511];
reg [8:0] data_mem_grain5_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[5])
		data_mem_grain5[basesoc_data_port_adr] <= basesoc_data_port_dat_w[47:40];
	data_mem_grain5_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[47:40] = data_mem_grain5[data_mem_grain5_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain6: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain6[0:511];
reg [8:0] data_mem_grain6_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[6])
		data_mem_grain6[basesoc_data_port_adr] <= basesoc_data_port_dat_w[55:48];
	data_mem_grain6_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[55:48] = data_mem_grain6[data_mem_grain6_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain7: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain7[0:511];
reg [8:0] data_mem_grain7_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[7])
		data_mem_grain7[basesoc_data_port_adr] <= basesoc_data_port_dat_w[63:56];
	data_mem_grain7_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[63:56] = data_mem_grain7[data_mem_grain7_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain8: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain8[0:511];
reg [8:0] data_mem_grain8_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[8])
		data_mem_grain8[basesoc_data_port_adr] <= basesoc_data_port_dat_w[71:64];
	data_mem_grain8_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[71:64] = data_mem_grain8[data_mem_grain8_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain9: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain9[0:511];
reg [8:0] data_mem_grain9_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[9])
		data_mem_grain9[basesoc_data_port_adr] <= basesoc_data_port_dat_w[79:72];
	data_mem_grain9_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[79:72] = data_mem_grain9[data_mem_grain9_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain10: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain10[0:511];
reg [8:0] data_mem_grain10_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[10])
		data_mem_grain10[basesoc_data_port_adr] <= basesoc_data_port_dat_w[87:80];
	data_mem_grain10_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[87:80] = data_mem_grain10[data_mem_grain10_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain11: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain11[0:511];
reg [8:0] data_mem_grain11_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[11])
		data_mem_grain11[basesoc_data_port_adr] <= basesoc_data_port_dat_w[95:88];
	data_mem_grain11_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[95:88] = data_mem_grain11[data_mem_grain11_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain12: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain12[0:511];
reg [8:0] data_mem_grain12_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[12])
		data_mem_grain12[basesoc_data_port_adr] <= basesoc_data_port_dat_w[103:96];
	data_mem_grain12_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[103:96] = data_mem_grain12[data_mem_grain12_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain13: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain13[0:511];
reg [8:0] data_mem_grain13_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[13])
		data_mem_grain13[basesoc_data_port_adr] <= basesoc_data_port_dat_w[111:104];
	data_mem_grain13_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[111:104] = data_mem_grain13[data_mem_grain13_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain14: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain14[0:511];
reg [8:0] data_mem_grain14_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[14])
		data_mem_grain14[basesoc_data_port_adr] <= basesoc_data_port_dat_w[119:112];
	data_mem_grain14_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[119:112] = data_mem_grain14[data_mem_grain14_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain15: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain15[0:511];
reg [8:0] data_mem_grain15_adr0;
always @(posedge sys_clk) begin
	if (basesoc_data_port_we[15])
		data_mem_grain15[basesoc_data_port_adr] <= basesoc_data_port_dat_w[127:120];
	data_mem_grain15_adr0 <= basesoc_data_port_adr;
end
assign basesoc_data_port_dat_r[127:120] = data_mem_grain15[data_mem_grain15_adr0];


//------------------------------------------------------------------------------
// Instance DFFP of DFFP Module.
//------------------------------------------------------------------------------
DFFP DFFP(
	// Inputs.
	.CLK    (sys2x_i_clk),
	.D      (1'd0),
	.PRESET (crg_reset1),

	// Outputs.
	.Q      (rst10)
);

//------------------------------------------------------------------------------
// Instance DFFP_1 of DFFP Module.
//------------------------------------------------------------------------------
DFFP DFFP_1(
	// Inputs.
	.CLK    (sys2x_i_clk),
	.D      (rst10),
	.PRESET (crg_reset1),

	// Outputs.
	.Q      (sys2x_i_rst)
);

//------------------------------------------------------------------------------
// Instance DFFP_2 of DFFP Module.
//------------------------------------------------------------------------------
DFFP DFFP_2(
	// Inputs.
	.CLK    (sys_clk),
	.D      (1'd0),
	.PRESET ((((~crg_locked) | crg_rst) | crg_reset0)),

	// Outputs.
	.Q      (rst11)
);

//------------------------------------------------------------------------------
// Instance DFFP_3 of DFFP Module.
//------------------------------------------------------------------------------
DFFP DFFP_3(
	// Inputs.
	.CLK    (sys_clk),
	.D      (rst11),
	.PRESET ((((~crg_locked) | crg_rst) | crg_reset0)),

	// Outputs.
	.Q      (sys_rst)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2024-10-05 12:37:29.
//------------------------------------------------------------------------------
